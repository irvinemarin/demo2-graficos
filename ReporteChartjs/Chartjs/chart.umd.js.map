{"version":3,"file":"chart.umd.js","sources":["../src/helpers/helpers.core.js","../src/helpers/helpers.math.js","../src/helpers/helpers.collection.js","../src/helpers/helpers.extras.js","../src/core/core.animator.js","../node_modules/@kurkle/color/dist/color.esm.js","../src/helpers/helpers.color.js","../src/core/core.animations.defaults.js","../src/helpers/helpers.intl.js","../src/core/core.ticks.js","../src/core/core.defaults.js","../src/core/core.layouts.defaults.js","../src/core/core.scale.defaults.js","../src/helpers/helpers.dom.js","../src/helpers/helpers.canvas.js","../src/helpers/helpers.config.js","../src/helpers/helpers.curve.js","../src/helpers/helpers.easing.js","../src/helpers/helpers.interpolation.js","../src/helpers/helpers.options.js","../src/helpers/helpers.rtl.js","../src/helpers/helpers.segment.js","../src/core/core.interaction.js","../src/core/core.layouts.js","../src/platform/platform.base.js","../src/platform/platform.basic.js","../src/platform/platform.dom.js","../src/platform/index.js","../src/core/core.animation.js","../src/core/core.animations.js","../src/core/core.datasetController.js","../src/core/core.element.js","../src/core/core.scale.autoskip.js","../src/core/core.scale.js","../src/core/core.typedRegistry.js","../src/core/core.registry.js","../src/core/core.plugins.js","../src/core/core.config.js","../src/core/core.controller.js","../src/core/core.adapters.js","../src/controllers/controller.bar.js","../src/controllers/controller.doughnut.js","../src/controllers/controller.bubble.js","../src/controllers/controller.line.js","../src/controllers/controller.polarArea.js","../src/controllers/controller.pie.js","../src/controllers/controller.radar.js","../src/controllers/controller.scatter.js","../src/elements/element.arc.js","../src/elements/element.line.js","../src/elements/element.point.js","../src/elements/element.bar.js","../src/plugins/plugin.decimation.js","../src/plugins/plugin.filler/filler.segment.js","../src/plugins/plugin.filler/filler.helper.js","../src/plugins/plugin.filler/filler.options.js","../src/plugins/plugin.filler/filler.target.stack.js","../src/plugins/plugin.filler/simpleArc.js","../src/plugins/plugin.filler/filler.target.js","../src/plugins/plugin.filler/filler.drawing.js","../src/plugins/plugin.filler/index.js","../src/plugins/plugin.legend.js","../src/plugins/plugin.title.js","../src/plugins/plugin.subtitle.js","../src/plugins/plugin.tooltip.js","../src/scales/scale.category.js","../src/scales/scale.linearbase.js","../src/scales/scale.linear.js","../src/scales/scale.logarithmic.js","../src/scales/scale.radialLinear.js","../src/scales/scale.time.js","../src/scales/scale.timeseries.js","../src/index.umd.js"],"sourcesContent":["/**\n * @namespace Chart.helpers\n */\n/**\n * An empty function that can be used, for example, for optional callback.\n */\nexport function noop() {}\n\n/**\n * Returns a unique id, sequentially generated from a global variable.\n * @returns {number}\n * @function\n */\nexport const uid = (function() {\n  let id = 0;\n  return function() {\n    return id++;\n  };\n}());\n\n/**\n * Returns true if `value` is neither null nor undefined, else returns false.\n * @param {*} value - The value to test.\n * @returns {boolean}\n * @since 2.7.0\n */\nexport function isNullOrUndef(value) {\n  return value === null || typeof value === 'undefined';\n}\n\n/**\n * Returns true if `value` is an array (including typed arrays), else returns false.\n * @param {*} value - The value to test.\n * @returns {boolean}\n * @function\n */\nexport function isArray(value) {\n  if (Array.isArray && Array.isArray(value)) {\n    return true;\n  }\n  const type = Object.prototype.toString.call(value);\n  if (type.slice(0, 7) === '[object' && type.slice(-6) === 'Array]') {\n    return true;\n  }\n  return false;\n}\n\n/**\n * Returns true if `value` is an object (excluding null), else returns false.\n * @param {*} value - The value to test.\n * @returns {boolean}\n * @since 2.7.0\n */\nexport function isObject(value) {\n  return value !== null && Object.prototype.toString.call(value) === '[object Object]';\n}\n\n/**\n * Returns true if `value` is a finite number, else returns false\n * @param {*} value  - The value to test.\n * @returns {boolean}\n */\nconst isNumberFinite = (value) => (typeof value === 'number' || value instanceof Number) && isFinite(+value);\nexport {\n  isNumberFinite as isFinite,\n};\n\n/**\n * Returns `value` if finite, else returns `defaultValue`.\n * @param {*} value - The value to return if defined.\n * @param {*} defaultValue - The value to return if `value` is not finite.\n * @returns {*}\n */\nexport function finiteOrDefault(value, defaultValue) {\n  return isNumberFinite(value) ? value : defaultValue;\n}\n\n/**\n * Returns `value` if defined, else returns `defaultValue`.\n * @param {*} value - The value to return if defined.\n * @param {*} defaultValue - The value to return if `value` is undefined.\n * @returns {*}\n */\nexport function valueOrDefault(value, defaultValue) {\n  return typeof value === 'undefined' ? defaultValue : value;\n}\n\nexport const toPercentage = (value, dimension) =>\n  typeof value === 'string' && value.endsWith('%') ?\n    parseFloat(value) / 100\n    : value / dimension;\n\nexport const toDimension = (value, dimension) =>\n  typeof value === 'string' && value.endsWith('%') ?\n    parseFloat(value) / 100 * dimension\n    : +value;\n\n/**\n * Calls `fn` with the given `args` in the scope defined by `thisArg` and returns the\n * value returned by `fn`. If `fn` is not a function, this method returns undefined.\n * @param {function} fn - The function to call.\n * @param {Array|undefined|null} args - The arguments with which `fn` should be called.\n * @param {object} [thisArg] - The value of `this` provided for the call to `fn`.\n * @returns {*}\n */\nexport function callback(fn, args, thisArg) {\n  if (fn && typeof fn.call === 'function') {\n    return fn.apply(thisArg, args);\n  }\n}\n\n/**\n * Note(SB) for performance sake, this method should only be used when loopable type\n * is unknown or in none intensive code (not called often and small loopable). Else\n * it's preferable to use a regular for() loop and save extra function calls.\n * @param {object|Array} loopable - The object or array to be iterated.\n * @param {function} fn - The function to call for each item.\n * @param {object} [thisArg] - The value of `this` provided for the call to `fn`.\n * @param {boolean} [reverse] - If true, iterates backward on the loopable.\n */\nexport function each(loopable, fn, thisArg, reverse) {\n  let i, len, keys;\n  if (isArray(loopable)) {\n    len = loopable.length;\n    if (reverse) {\n      for (i = len - 1; i >= 0; i--) {\n        fn.call(thisArg, loopable[i], i);\n      }\n    } else {\n      for (i = 0; i < len; i++) {\n        fn.call(thisArg, loopable[i], i);\n      }\n    }\n  } else if (isObject(loopable)) {\n    keys = Object.keys(loopable);\n    len = keys.length;\n    for (i = 0; i < len; i++) {\n      fn.call(thisArg, loopable[keys[i]], keys[i]);\n    }\n  }\n}\n\n/**\n * Returns true if the `a0` and `a1` arrays have the same content, else returns false.\n * @param {Array} a0 - The array to compare\n * @param {Array} a1 - The array to compare\n * @returns {boolean}\n * @private\n */\nexport function _elementsEqual(a0, a1) {\n  let i, ilen, v0, v1;\n\n  if (!a0 || !a1 || a0.length !== a1.length) {\n    return false;\n  }\n\n  for (i = 0, ilen = a0.length; i < ilen; ++i) {\n    v0 = a0[i];\n    v1 = a1[i];\n\n    if (v0.datasetIndex !== v1.datasetIndex || v0.index !== v1.index) {\n      return false;\n    }\n  }\n\n  return true;\n}\n\n/**\n * Returns a deep copy of `source` without keeping references on objects and arrays.\n * @param {*} source - The value to clone.\n * @returns {*}\n */\nexport function clone(source) {\n  if (isArray(source)) {\n    return source.map(clone);\n  }\n\n  if (isObject(source)) {\n    const target = Object.create(null);\n    const keys = Object.keys(source);\n    const klen = keys.length;\n    let k = 0;\n\n    for (; k < klen; ++k) {\n      target[keys[k]] = clone(source[keys[k]]);\n    }\n\n    return target;\n  }\n\n  return source;\n}\n\nfunction isValidKey(key) {\n  return ['__proto__', 'prototype', 'constructor'].indexOf(key) === -1;\n}\n\n/**\n * The default merger when Chart.helpers.merge is called without merger option.\n * Note(SB): also used by mergeConfig and mergeScaleConfig as fallback.\n * @private\n */\nexport function _merger(key, target, source, options) {\n  if (!isValidKey(key)) {\n    return;\n  }\n\n  const tval = target[key];\n  const sval = source[key];\n\n  if (isObject(tval) && isObject(sval)) {\n    // eslint-disable-next-line no-use-before-define\n    merge(tval, sval, options);\n  } else {\n    target[key] = clone(sval);\n  }\n}\n\n/**\n * Recursively deep copies `source` properties into `target` with the given `options`.\n * IMPORTANT: `target` is not cloned and will be updated with `source` properties.\n * @param {object} target - The target object in which all sources are merged into.\n * @param {object|object[]} source - Object(s) to merge into `target`.\n * @param {object} [options] - Merging options:\n * @param {function} [options.merger] - The merge method (key, target, source, options)\n * @returns {object} The `target` object.\n */\nexport function merge(target, source, options) {\n  const sources = isArray(source) ? source : [source];\n  const ilen = sources.length;\n\n  if (!isObject(target)) {\n    return target;\n  }\n\n  options = options || {};\n  const merger = options.merger || _merger;\n\n  for (let i = 0; i < ilen; ++i) {\n    source = sources[i];\n    if (!isObject(source)) {\n      continue;\n    }\n\n    const keys = Object.keys(source);\n    for (let k = 0, klen = keys.length; k < klen; ++k) {\n      merger(keys[k], target, source, options);\n    }\n  }\n\n  return target;\n}\n\n/**\n * Recursively deep copies `source` properties into `target` *only* if not defined in target.\n * IMPORTANT: `target` is not cloned and will be updated with `source` properties.\n * @param {object} target - The target object in which all sources are merged into.\n * @param {object|object[]} source - Object(s) to merge into `target`.\n * @returns {object} The `target` object.\n */\nexport function mergeIf(target, source) {\n  // eslint-disable-next-line no-use-before-define\n  return merge(target, source, {merger: _mergerIf});\n}\n\n/**\n * Merges source[key] in target[key] only if target[key] is undefined.\n * @private\n */\nexport function _mergerIf(key, target, source) {\n  if (!isValidKey(key)) {\n    return;\n  }\n\n  const tval = target[key];\n  const sval = source[key];\n\n  if (isObject(tval) && isObject(sval)) {\n    mergeIf(tval, sval);\n  } else if (!Object.prototype.hasOwnProperty.call(target, key)) {\n    target[key] = clone(sval);\n  }\n}\n\n/**\n * @private\n */\nexport function _deprecated(scope, value, previous, current) {\n  if (value !== undefined) {\n    console.warn(scope + ': \"' + previous +\n\t\t\t'\" is deprecated. Please use \"' + current + '\" instead');\n  }\n}\n\n// resolveObjectKey resolver cache\nconst keyResolvers = {\n  // Chart.helpers.core resolveObjectKey should resolve empty key to root object\n  '': v => v,\n  // default resolvers\n  x: o => o.x,\n  y: o => o.y\n};\n\nexport function resolveObjectKey(obj, key) {\n  const resolver = keyResolvers[key] || (keyResolvers[key] = _getKeyResolver(key));\n  return resolver(obj);\n}\n\nfunction _getKeyResolver(key) {\n  const keys = _splitKey(key);\n  return obj => {\n    for (const k of keys) {\n      if (k === '') {\n        // For backward compatibility:\n        // Chart.helpers.core resolveObjectKey should break at empty key\n        break;\n      }\n      obj = obj && obj[k];\n    }\n    return obj;\n  };\n}\n\n/**\n * @private\n */\nexport function _splitKey(key) {\n  const parts = key.split('.');\n  const keys = [];\n  let tmp = '';\n  for (const part of parts) {\n    tmp += part;\n    if (tmp.endsWith('\\\\')) {\n      tmp = tmp.slice(0, -1) + '.';\n    } else {\n      keys.push(tmp);\n      tmp = '';\n    }\n  }\n  return keys;\n}\n\n/**\n * @private\n */\nexport function _capitalize(str) {\n  return str.charAt(0).toUpperCase() + str.slice(1);\n}\n\n\nexport const defined = (value) => typeof value !== 'undefined';\n\nexport const isFunction = (value) => typeof value === 'function';\n\n// Adapted from https://stackoverflow.com/questions/31128855/comparing-ecma6-sets-for-equality#31129384\nexport const setsEqual = (a, b) => {\n  if (a.size !== b.size) {\n    return false;\n  }\n\n  for (const item of a) {\n    if (!b.has(item)) {\n      return false;\n    }\n  }\n\n  return true;\n};\n\n/**\n * @param {import('../../types').ChartEvent} e - The event\n * @returns {boolean}\n * @private\n */\nexport function _isClickEvent(e) {\n  return e.type === 'mouseup' || e.type === 'click' || e.type === 'contextmenu';\n}\n","import {isFinite as isFiniteNumber} from './helpers.core';\n\n/**\n * @alias Chart.helpers.math\n * @namespace\n */\n\nexport const PI = Math.PI;\nexport const TAU = 2 * PI;\nexport const PITAU = TAU + PI;\nexport const INFINITY = Number.POSITIVE_INFINITY;\nexport const RAD_PER_DEG = PI / 180;\nexport const HALF_PI = PI / 2;\nexport const QUARTER_PI = PI / 4;\nexport const TWO_THIRDS_PI = PI * 2 / 3;\n\nexport const log10 = Math.log10;\nexport const sign = Math.sign;\n\n/**\n * Implementation of the nice number algorithm used in determining where axis labels will go\n * @return {number}\n */\nexport function niceNum(range) {\n  const roundedRange = Math.round(range);\n  range = almostEquals(range, roundedRange, range / 1000) ? roundedRange : range;\n  const niceRange = Math.pow(10, Math.floor(log10(range)));\n  const fraction = range / niceRange;\n  const niceFraction = fraction <= 1 ? 1 : fraction <= 2 ? 2 : fraction <= 5 ? 5 : 10;\n  return niceFraction * niceRange;\n}\n\n/**\n * Returns an array of factors sorted from 1 to sqrt(value)\n * @private\n */\nexport function _factorize(value) {\n  const result = [];\n  const sqrt = Math.sqrt(value);\n  let i;\n\n  for (i = 1; i < sqrt; i++) {\n    if (value % i === 0) {\n      result.push(i);\n      result.push(value / i);\n    }\n  }\n  if (sqrt === (sqrt | 0)) { // if value is a square number\n    result.push(sqrt);\n  }\n\n  result.sort((a, b) => a - b).pop();\n  return result;\n}\n\nexport function isNumber(n) {\n  return !isNaN(parseFloat(n)) && isFinite(n);\n}\n\nexport function almostEquals(x, y, epsilon) {\n  return Math.abs(x - y) < epsilon;\n}\n\nexport function almostWhole(x, epsilon) {\n  const rounded = Math.round(x);\n  return ((rounded - epsilon) <= x) && ((rounded + epsilon) >= x);\n}\n\n/**\n * @private\n */\nexport function _setMinAndMaxByKey(array, target, property) {\n  let i, ilen, value;\n\n  for (i = 0, ilen = array.length; i < ilen; i++) {\n    value = array[i][property];\n    if (!isNaN(value)) {\n      target.min = Math.min(target.min, value);\n      target.max = Math.max(target.max, value);\n    }\n  }\n}\n\nexport function toRadians(degrees) {\n  return degrees * (PI / 180);\n}\n\nexport function toDegrees(radians) {\n  return radians * (180 / PI);\n}\n\n/**\n * Returns the number of decimal places\n * i.e. the number of digits after the decimal point, of the value of this Number.\n * @param {number} x - A number.\n * @returns {number} The number of decimal places.\n * @private\n */\nexport function _decimalPlaces(x) {\n  if (!isFiniteNumber(x)) {\n    return;\n  }\n  let e = 1;\n  let p = 0;\n  while (Math.round(x * e) / e !== x) {\n    e *= 10;\n    p++;\n  }\n  return p;\n}\n\n// Gets the angle from vertical upright to the point about a centre.\nexport function getAngleFromPoint(centrePoint, anglePoint) {\n  const distanceFromXCenter = anglePoint.x - centrePoint.x;\n  const distanceFromYCenter = anglePoint.y - centrePoint.y;\n  const radialDistanceFromCenter = Math.sqrt(distanceFromXCenter * distanceFromXCenter + distanceFromYCenter * distanceFromYCenter);\n\n  let angle = Math.atan2(distanceFromYCenter, distanceFromXCenter);\n\n  if (angle < (-0.5 * PI)) {\n    angle += TAU; // make sure the returned angle is in the range of (-PI/2, 3PI/2]\n  }\n\n  return {\n    angle,\n    distance: radialDistanceFromCenter\n  };\n}\n\nexport function distanceBetweenPoints(pt1, pt2) {\n  return Math.sqrt(Math.pow(pt2.x - pt1.x, 2) + Math.pow(pt2.y - pt1.y, 2));\n}\n\n/**\n * Shortest distance between angles, in either direction.\n * @private\n */\nexport function _angleDiff(a, b) {\n  return (a - b + PITAU) % TAU - PI;\n}\n\n/**\n * Normalize angle to be between 0 and 2*PI\n * @private\n */\nexport function _normalizeAngle(a) {\n  return (a % TAU + TAU) % TAU;\n}\n\n/**\n * @private\n */\nexport function _angleBetween(angle, start, end, sameAngleIsFullCircle) {\n  const a = _normalizeAngle(angle);\n  const s = _normalizeAngle(start);\n  const e = _normalizeAngle(end);\n  const angleToStart = _normalizeAngle(s - a);\n  const angleToEnd = _normalizeAngle(e - a);\n  const startToAngle = _normalizeAngle(a - s);\n  const endToAngle = _normalizeAngle(a - e);\n  return a === s || a === e || (sameAngleIsFullCircle && s === e)\n    || (angleToStart > angleToEnd && startToAngle < endToAngle);\n}\n\n/**\n * Limit `value` between `min` and `max`\n * @param {number} value\n * @param {number} min\n * @param {number} max\n * @private\n */\nexport function _limitValue(value, min, max) {\n  return Math.max(min, Math.min(max, value));\n}\n\n/**\n * @param {number} value\n * @private\n */\nexport function _int16Range(value) {\n  return _limitValue(value, -32768, 32767);\n}\n\n/**\n * @param {number} value\n * @param {number} start\n * @param {number} end\n * @param {number} [epsilon]\n * @private\n */\nexport function _isBetween(value, start, end, epsilon = 1e-6) {\n  return value >= Math.min(start, end) - epsilon && value <= Math.max(start, end) + epsilon;\n}\n","import {_capitalize} from './helpers.core';\n\n/**\n * Binary search\n * @param {array} table - the table search. must be sorted!\n * @param {number} value - value to find\n * @param {function} [cmp]\n * @private\n */\nexport function _lookup(table, value, cmp) {\n  cmp = cmp || ((index) => table[index] < value);\n  let hi = table.length - 1;\n  let lo = 0;\n  let mid;\n\n  while (hi - lo > 1) {\n    mid = (lo + hi) >> 1;\n    if (cmp(mid)) {\n      lo = mid;\n    } else {\n      hi = mid;\n    }\n  }\n\n  return {lo, hi};\n}\n\n/**\n * Binary search\n * @param {array} table - the table search. must be sorted!\n * @param {string} key - property name for the value in each entry\n * @param {number} value - value to find\n * @param {boolean} [last] - lookup last index\n * @private\n */\nexport const _lookupByKey = (table, key, value, last) =>\n  _lookup(table, value, last\n    ? index => table[index][key] <= value\n    : index => table[index][key] < value);\n\n/**\n * Reverse binary search\n * @param {array} table - the table search. must be sorted!\n * @param {string} key - property name for the value in each entry\n * @param {number} value - value to find\n * @private\n */\nexport const _rlookupByKey = (table, key, value) =>\n  _lookup(table, value, index => table[index][key] >= value);\n\n/**\n * Return subset of `values` between `min` and `max` inclusive.\n * Values are assumed to be in sorted order.\n * @param {number[]} values - sorted array of values\n * @param {number} min - min value\n * @param {number} max - max value\n */\nexport function _filterBetween(values, min, max) {\n  let start = 0;\n  let end = values.length;\n\n  while (start < end && values[start] < min) {\n    start++;\n  }\n  while (end > start && values[end - 1] > max) {\n    end--;\n  }\n\n  return start > 0 || end < values.length\n    ? values.slice(start, end)\n    : values;\n}\n\nconst arrayEvents = ['push', 'pop', 'shift', 'splice', 'unshift'];\n\n/**\n * Hooks the array methods that add or remove values ('push', pop', 'shift', 'splice',\n * 'unshift') and notify the listener AFTER the array has been altered. Listeners are\n * called on the '_onData*' callbacks (e.g. _onDataPush, etc.) with same arguments.\n */\nexport function listenArrayEvents(array, listener) {\n  if (array._chartjs) {\n    array._chartjs.listeners.push(listener);\n    return;\n  }\n\n  Object.defineProperty(array, '_chartjs', {\n    configurable: true,\n    enumerable: false,\n    value: {\n      listeners: [listener]\n    }\n  });\n\n  arrayEvents.forEach((key) => {\n    const method = '_onData' + _capitalize(key);\n    const base = array[key];\n\n    Object.defineProperty(array, key, {\n      configurable: true,\n      enumerable: false,\n      value(...args) {\n        const res = base.apply(this, args);\n\n        array._chartjs.listeners.forEach((object) => {\n          if (typeof object[method] === 'function') {\n            object[method](...args);\n          }\n        });\n\n        return res;\n      }\n    });\n  });\n}\n\n\n/**\n * Removes the given array event listener and cleanup extra attached properties (such as\n * the _chartjs stub and overridden methods) if array doesn't have any more listeners.\n */\nexport function unlistenArrayEvents(array, listener) {\n  const stub = array._chartjs;\n  if (!stub) {\n    return;\n  }\n\n  const listeners = stub.listeners;\n  const index = listeners.indexOf(listener);\n  if (index !== -1) {\n    listeners.splice(index, 1);\n  }\n\n  if (listeners.length > 0) {\n    return;\n  }\n\n  arrayEvents.forEach((key) => {\n    delete array[key];\n  });\n\n  delete array._chartjs;\n}\n\n/**\n * @param {Array} items\n */\nexport function _arrayUnique(items) {\n  const set = new Set();\n  let i, ilen;\n\n  for (i = 0, ilen = items.length; i < ilen; ++i) {\n    set.add(items[i]);\n  }\n\n  if (set.size === ilen) {\n    return items;\n  }\n\n  return Array.from(set);\n}\n","import {_limitValue} from './helpers.math';\nimport {_lookupByKey} from './helpers.collection';\n\nexport function fontString(pixelSize, fontStyle, fontFamily) {\n  return fontStyle + ' ' + pixelSize + 'px ' + fontFamily;\n}\n\n/**\n* Request animation polyfill\n*/\nexport const requestAnimFrame = (function() {\n  if (typeof window === 'undefined') {\n    return function(callback) {\n      return callback();\n    };\n  }\n  return window.requestAnimationFrame;\n}());\n\n/**\n * Throttles calling `fn` once per animation frame\n * Latest arguments are used on the actual call\n * @param {function} fn\n * @param {*} thisArg\n * @param {function} [updateFn]\n */\nexport function throttled(fn, thisArg, updateFn) {\n  const updateArgs = updateFn || ((args) => Array.prototype.slice.call(args));\n  let ticking = false;\n  let args = [];\n\n  return function(...rest) {\n    args = updateArgs(rest);\n\n    if (!ticking) {\n      ticking = true;\n      requestAnimFrame.call(window, () => {\n        ticking = false;\n        fn.apply(thisArg, args);\n      });\n    }\n  };\n}\n\n/**\n * Debounces calling `fn` for `delay` ms\n * @param {function} fn - Function to call.\n * @param {number} delay - Delay in ms. 0 = immediate invocation.\n * @returns {function}\n */\nexport function debounce(fn, delay) {\n  let timeout;\n  return function(...args) {\n    if (delay) {\n      clearTimeout(timeout);\n      timeout = setTimeout(fn, delay, args);\n    } else {\n      fn.apply(this, args);\n    }\n    return delay;\n  };\n}\n\n/**\n * Converts 'start' to 'left', 'end' to 'right' and others to 'center'\n * @param {string} align start, end, center\n * @private\n */\nexport const _toLeftRightCenter = (align) => align === 'start' ? 'left' : align === 'end' ? 'right' : 'center';\n\n/**\n * Returns `start`, `end` or `(start + end) / 2` depending on `align`. Defaults to `center`\n * @param {string} align start, end, center\n * @param {number} start value for start\n * @param {number} end value for end\n * @private\n */\nexport const _alignStartEnd = (align, start, end) => align === 'start' ? start : align === 'end' ? end : (start + end) / 2;\n\n/**\n * Returns `left`, `right` or `(left + right) / 2` depending on `align`. Defaults to `left`\n * @param {string} align start, end, center\n * @param {number} left value for start\n * @param {number} right value for end\n * @param {boolean} rtl Is this an RTL draw\n * @private\n */\nexport const _textX = (align, left, right, rtl) => {\n  const check = rtl ? 'left' : 'right';\n  return align === check ? right : align === 'center' ? (left + right) / 2 : left;\n};\n\n/**\n * Return start and count of visible points.\n * @param {object} meta - dataset meta.\n * @param {array} points - array of point elements.\n * @param {boolean} animationsDisabled - if true animation is disabled.\n * @returns {{start: number; count: number}}\n * @private\n */\nexport function _getStartAndCountOfVisiblePoints(meta, points, animationsDisabled) {\n  const pointCount = points.length;\n\n  let start = 0;\n  let count = pointCount;\n\n  if (meta._sorted) {\n    const {iScale, _parsed} = meta;\n    const axis = iScale.axis;\n    const {min, max, minDefined, maxDefined} = iScale.getUserBounds();\n\n    if (minDefined) {\n      start = _limitValue(Math.min(\n        _lookupByKey(_parsed, iScale.axis, min).lo,\n        animationsDisabled ? pointCount : _lookupByKey(points, axis, iScale.getPixelForValue(min)).lo),\n      0, pointCount - 1);\n    }\n    if (maxDefined) {\n      count = _limitValue(Math.max(\n        _lookupByKey(_parsed, iScale.axis, max, true).hi + 1,\n        animationsDisabled ? 0 : _lookupByKey(points, axis, iScale.getPixelForValue(max), true).hi + 1),\n      start, pointCount) - start;\n    } else {\n      count = pointCount - start;\n    }\n  }\n\n  return {start, count};\n}\n\n/**\n * Checks if the scale ranges have changed.\n * @param {object} meta - dataset meta.\n * @returns {boolean}\n * @private\n */\nexport function _scaleRangesChanged(meta) {\n  const {xScale, yScale, _scaleRanges} = meta;\n  const newRanges = {\n    xmin: xScale.min,\n    xmax: xScale.max,\n    ymin: yScale.min,\n    ymax: yScale.max\n  };\n  if (!_scaleRanges) {\n    meta._scaleRanges = newRanges;\n    return true;\n  }\n  const changed = _scaleRanges.xmin !== xScale.min\n\t\t|| _scaleRanges.xmax !== xScale.max\n\t\t|| _scaleRanges.ymin !== yScale.min\n\t\t|| _scaleRanges.ymax !== yScale.max;\n\n  Object.assign(_scaleRanges, newRanges);\n  return changed;\n}\n","import {requestAnimFrame} from '../helpers/helpers.extras';\n\n/**\n * @typedef { import(\"./core.animation\").default } Animation\n * @typedef { import(\"./core.controller\").default } Chart\n */\n\n/**\n * Please use the module's default export which provides a singleton instance\n * Note: class is export for typedoc\n */\nexport class Animator {\n  constructor() {\n    this._request = null;\n    this._charts = new Map();\n    this._running = false;\n    this._lastDate = undefined;\n  }\n\n  /**\n\t * @private\n\t */\n  _notify(chart, anims, date, type) {\n    const callbacks = anims.listeners[type];\n    const numSteps = anims.duration;\n\n    callbacks.forEach(fn => fn({\n      chart,\n      initial: anims.initial,\n      numSteps,\n      currentStep: Math.min(date - anims.start, numSteps)\n    }));\n  }\n\n  /**\n\t * @private\n\t */\n  _refresh() {\n    if (this._request) {\n      return;\n    }\n    this._running = true;\n\n    this._request = requestAnimFrame.call(window, () => {\n      this._update();\n      this._request = null;\n\n      if (this._running) {\n        this._refresh();\n      }\n    });\n  }\n\n  /**\n\t * @private\n\t */\n  _update(date = Date.now()) {\n    let remaining = 0;\n\n    this._charts.forEach((anims, chart) => {\n      if (!anims.running || !anims.items.length) {\n        return;\n      }\n      const items = anims.items;\n      let i = items.length - 1;\n      let draw = false;\n      let item;\n\n      for (; i >= 0; --i) {\n        item = items[i];\n\n        if (item._active) {\n          if (item._total > anims.duration) {\n            // if the animation has been updated and its duration prolonged,\n            // update to total duration of current animations run (for progress event)\n            anims.duration = item._total;\n          }\n          item.tick(date);\n          draw = true;\n        } else {\n          // Remove the item by replacing it with last item and removing the last\n          // A lot faster than splice.\n          items[i] = items[items.length - 1];\n          items.pop();\n        }\n      }\n\n      if (draw) {\n        chart.draw();\n        this._notify(chart, anims, date, 'progress');\n      }\n\n      if (!items.length) {\n        anims.running = false;\n        this._notify(chart, anims, date, 'complete');\n        anims.initial = false;\n      }\n\n      remaining += items.length;\n    });\n\n    this._lastDate = date;\n\n    if (remaining === 0) {\n      this._running = false;\n    }\n  }\n\n  /**\n\t * @private\n\t */\n  _getAnims(chart) {\n    const charts = this._charts;\n    let anims = charts.get(chart);\n    if (!anims) {\n      anims = {\n        running: false,\n        initial: true,\n        items: [],\n        listeners: {\n          complete: [],\n          progress: []\n        }\n      };\n      charts.set(chart, anims);\n    }\n    return anims;\n  }\n\n  /**\n\t * @param {Chart} chart\n\t * @param {string} event - event name\n\t * @param {Function} cb - callback\n\t */\n  listen(chart, event, cb) {\n    this._getAnims(chart).listeners[event].push(cb);\n  }\n\n  /**\n\t * Add animations\n\t * @param {Chart} chart\n\t * @param {Animation[]} items - animations\n\t */\n  add(chart, items) {\n    if (!items || !items.length) {\n      return;\n    }\n    this._getAnims(chart).items.push(...items);\n  }\n\n  /**\n\t * Counts number of active animations for the chart\n\t * @param {Chart} chart\n\t */\n  has(chart) {\n    return this._getAnims(chart).items.length > 0;\n  }\n\n  /**\n\t * Start animating (all charts)\n\t * @param {Chart} chart\n\t */\n  start(chart) {\n    const anims = this._charts.get(chart);\n    if (!anims) {\n      return;\n    }\n    anims.running = true;\n    anims.start = Date.now();\n    anims.duration = anims.items.reduce((acc, cur) => Math.max(acc, cur._duration), 0);\n    this._refresh();\n  }\n\n  running(chart) {\n    if (!this._running) {\n      return false;\n    }\n    const anims = this._charts.get(chart);\n    if (!anims || !anims.running || !anims.items.length) {\n      return false;\n    }\n    return true;\n  }\n\n  /**\n\t * Stop all animations for the chart\n\t * @param {Chart} chart\n\t */\n  stop(chart) {\n    const anims = this._charts.get(chart);\n    if (!anims || !anims.items.length) {\n      return;\n    }\n    const items = anims.items;\n    let i = items.length - 1;\n\n    for (; i >= 0; --i) {\n      items[i].cancel();\n    }\n    anims.items = [];\n    this._notify(chart, anims, Date.now(), 'complete');\n  }\n\n  /**\n\t * Remove chart from Animator\n\t * @param {Chart} chart\n\t */\n  remove(chart) {\n    return this._charts.delete(chart);\n  }\n}\n\n// singleton instance\nexport default /* #__PURE__ */ new Animator();\n","/*!\n * @kurkle/color v0.2.1\n * https://github.com/kurkle/color#readme\n * (c) 2022 Jukka Kurkela\n * Released under the MIT License\n */\nfunction round(v) {\n  return v + 0.5 | 0;\n}\nconst lim = (v, l, h) => Math.max(Math.min(v, h), l);\nfunction p2b(v) {\n  return lim(round(v * 2.55), 0, 255);\n}\nfunction b2p(v) {\n  return lim(round(v / 2.55), 0, 100);\n}\nfunction n2b(v) {\n  return lim(round(v * 255), 0, 255);\n}\nfunction b2n(v) {\n  return lim(round(v / 2.55) / 100, 0, 1);\n}\nfunction n2p(v) {\n  return lim(round(v * 100), 0, 100);\n}\n\nconst map$1 = {0: 0, 1: 1, 2: 2, 3: 3, 4: 4, 5: 5, 6: 6, 7: 7, 8: 8, 9: 9, A: 10, B: 11, C: 12, D: 13, E: 14, F: 15, a: 10, b: 11, c: 12, d: 13, e: 14, f: 15};\nconst hex = [...'0123456789ABCDEF'];\nconst h1 = b => hex[b & 0xF];\nconst h2 = b => hex[(b & 0xF0) >> 4] + hex[b & 0xF];\nconst eq = b => ((b & 0xF0) >> 4) === (b & 0xF);\nconst isShort = v => eq(v.r) && eq(v.g) && eq(v.b) && eq(v.a);\nfunction hexParse(str) {\n  var len = str.length;\n  var ret;\n  if (str[0] === '#') {\n    if (len === 4 || len === 5) {\n      ret = {\n        r: 255 & map$1[str[1]] * 17,\n        g: 255 & map$1[str[2]] * 17,\n        b: 255 & map$1[str[3]] * 17,\n        a: len === 5 ? map$1[str[4]] * 17 : 255\n      };\n    } else if (len === 7 || len === 9) {\n      ret = {\n        r: map$1[str[1]] << 4 | map$1[str[2]],\n        g: map$1[str[3]] << 4 | map$1[str[4]],\n        b: map$1[str[5]] << 4 | map$1[str[6]],\n        a: len === 9 ? (map$1[str[7]] << 4 | map$1[str[8]]) : 255\n      };\n    }\n  }\n  return ret;\n}\nconst alpha = (a, f) => a < 255 ? f(a) : '';\nfunction hexString(v) {\n  var f = isShort(v) ? h1 : h2;\n  return v\n    ? '#' + f(v.r) + f(v.g) + f(v.b) + alpha(v.a, f)\n    : undefined;\n}\n\nconst HUE_RE = /^(hsla?|hwb|hsv)\\(\\s*([-+.e\\d]+)(?:deg)?[\\s,]+([-+.e\\d]+)%[\\s,]+([-+.e\\d]+)%(?:[\\s,]+([-+.e\\d]+)(%)?)?\\s*\\)$/;\nfunction hsl2rgbn(h, s, l) {\n  const a = s * Math.min(l, 1 - l);\n  const f = (n, k = (n + h / 30) % 12) => l - a * Math.max(Math.min(k - 3, 9 - k, 1), -1);\n  return [f(0), f(8), f(4)];\n}\nfunction hsv2rgbn(h, s, v) {\n  const f = (n, k = (n + h / 60) % 6) => v - v * s * Math.max(Math.min(k, 4 - k, 1), 0);\n  return [f(5), f(3), f(1)];\n}\nfunction hwb2rgbn(h, w, b) {\n  const rgb = hsl2rgbn(h, 1, 0.5);\n  let i;\n  if (w + b > 1) {\n    i = 1 / (w + b);\n    w *= i;\n    b *= i;\n  }\n  for (i = 0; i < 3; i++) {\n    rgb[i] *= 1 - w - b;\n    rgb[i] += w;\n  }\n  return rgb;\n}\nfunction hueValue(r, g, b, d, max) {\n  if (r === max) {\n    return ((g - b) / d) + (g < b ? 6 : 0);\n  }\n  if (g === max) {\n    return (b - r) / d + 2;\n  }\n  return (r - g) / d + 4;\n}\nfunction rgb2hsl(v) {\n  const range = 255;\n  const r = v.r / range;\n  const g = v.g / range;\n  const b = v.b / range;\n  const max = Math.max(r, g, b);\n  const min = Math.min(r, g, b);\n  const l = (max + min) / 2;\n  let h, s, d;\n  if (max !== min) {\n    d = max - min;\n    s = l > 0.5 ? d / (2 - max - min) : d / (max + min);\n    h = hueValue(r, g, b, d, max);\n    h = h * 60 + 0.5;\n  }\n  return [h | 0, s || 0, l];\n}\nfunction calln(f, a, b, c) {\n  return (\n    Array.isArray(a)\n      ? f(a[0], a[1], a[2])\n      : f(a, b, c)\n  ).map(n2b);\n}\nfunction hsl2rgb(h, s, l) {\n  return calln(hsl2rgbn, h, s, l);\n}\nfunction hwb2rgb(h, w, b) {\n  return calln(hwb2rgbn, h, w, b);\n}\nfunction hsv2rgb(h, s, v) {\n  return calln(hsv2rgbn, h, s, v);\n}\nfunction hue(h) {\n  return (h % 360 + 360) % 360;\n}\nfunction hueParse(str) {\n  const m = HUE_RE.exec(str);\n  let a = 255;\n  let v;\n  if (!m) {\n    return;\n  }\n  if (m[5] !== v) {\n    a = m[6] ? p2b(+m[5]) : n2b(+m[5]);\n  }\n  const h = hue(+m[2]);\n  const p1 = +m[3] / 100;\n  const p2 = +m[4] / 100;\n  if (m[1] === 'hwb') {\n    v = hwb2rgb(h, p1, p2);\n  } else if (m[1] === 'hsv') {\n    v = hsv2rgb(h, p1, p2);\n  } else {\n    v = hsl2rgb(h, p1, p2);\n  }\n  return {\n    r: v[0],\n    g: v[1],\n    b: v[2],\n    a: a\n  };\n}\nfunction rotate(v, deg) {\n  var h = rgb2hsl(v);\n  h[0] = hue(h[0] + deg);\n  h = hsl2rgb(h);\n  v.r = h[0];\n  v.g = h[1];\n  v.b = h[2];\n}\nfunction hslString(v) {\n  if (!v) {\n    return;\n  }\n  const a = rgb2hsl(v);\n  const h = a[0];\n  const s = n2p(a[1]);\n  const l = n2p(a[2]);\n  return v.a < 255\n    ? `hsla(${h}, ${s}%, ${l}%, ${b2n(v.a)})`\n    : `hsl(${h}, ${s}%, ${l}%)`;\n}\n\nconst map = {\n  x: 'dark',\n  Z: 'light',\n  Y: 're',\n  X: 'blu',\n  W: 'gr',\n  V: 'medium',\n  U: 'slate',\n  A: 'ee',\n  T: 'ol',\n  S: 'or',\n  B: 'ra',\n  C: 'lateg',\n  D: 'ights',\n  R: 'in',\n  Q: 'turquois',\n  E: 'hi',\n  P: 'ro',\n  O: 'al',\n  N: 'le',\n  M: 'de',\n  L: 'yello',\n  F: 'en',\n  K: 'ch',\n  G: 'arks',\n  H: 'ea',\n  I: 'ightg',\n  J: 'wh'\n};\nconst names$1 = {\n  OiceXe: 'f0f8ff',\n  antiquewEte: 'faebd7',\n  aqua: 'ffff',\n  aquamarRe: '7fffd4',\n  azuY: 'f0ffff',\n  beige: 'f5f5dc',\n  bisque: 'ffe4c4',\n  black: '0',\n  blanKedOmond: 'ffebcd',\n  Xe: 'ff',\n  XeviTet: '8a2be2',\n  bPwn: 'a52a2a',\n  burlywood: 'deb887',\n  caMtXe: '5f9ea0',\n  KartYuse: '7fff00',\n  KocTate: 'd2691e',\n  cSO: 'ff7f50',\n  cSnflowerXe: '6495ed',\n  cSnsilk: 'fff8dc',\n  crimson: 'dc143c',\n  cyan: 'ffff',\n  xXe: '8b',\n  xcyan: '8b8b',\n  xgTMnPd: 'b8860b',\n  xWay: 'a9a9a9',\n  xgYF: '6400',\n  xgYy: 'a9a9a9',\n  xkhaki: 'bdb76b',\n  xmagFta: '8b008b',\n  xTivegYF: '556b2f',\n  xSange: 'ff8c00',\n  xScEd: '9932cc',\n  xYd: '8b0000',\n  xsOmon: 'e9967a',\n  xsHgYF: '8fbc8f',\n  xUXe: '483d8b',\n  xUWay: '2f4f4f',\n  xUgYy: '2f4f4f',\n  xQe: 'ced1',\n  xviTet: '9400d3',\n  dAppRk: 'ff1493',\n  dApskyXe: 'bfff',\n  dimWay: '696969',\n  dimgYy: '696969',\n  dodgerXe: '1e90ff',\n  fiYbrick: 'b22222',\n  flSOwEte: 'fffaf0',\n  foYstWAn: '228b22',\n  fuKsia: 'ff00ff',\n  gaRsbSo: 'dcdcdc',\n  ghostwEte: 'f8f8ff',\n  gTd: 'ffd700',\n  gTMnPd: 'daa520',\n  Way: '808080',\n  gYF: '8000',\n  gYFLw: 'adff2f',\n  gYy: '808080',\n  honeyMw: 'f0fff0',\n  hotpRk: 'ff69b4',\n  RdianYd: 'cd5c5c',\n  Rdigo: '4b0082',\n  ivSy: 'fffff0',\n  khaki: 'f0e68c',\n  lavFMr: 'e6e6fa',\n  lavFMrXsh: 'fff0f5',\n  lawngYF: '7cfc00',\n  NmoncEffon: 'fffacd',\n  ZXe: 'add8e6',\n  ZcSO: 'f08080',\n  Zcyan: 'e0ffff',\n  ZgTMnPdLw: 'fafad2',\n  ZWay: 'd3d3d3',\n  ZgYF: '90ee90',\n  ZgYy: 'd3d3d3',\n  ZpRk: 'ffb6c1',\n  ZsOmon: 'ffa07a',\n  ZsHgYF: '20b2aa',\n  ZskyXe: '87cefa',\n  ZUWay: '778899',\n  ZUgYy: '778899',\n  ZstAlXe: 'b0c4de',\n  ZLw: 'ffffe0',\n  lime: 'ff00',\n  limegYF: '32cd32',\n  lRF: 'faf0e6',\n  magFta: 'ff00ff',\n  maPon: '800000',\n  VaquamarRe: '66cdaa',\n  VXe: 'cd',\n  VScEd: 'ba55d3',\n  VpurpN: '9370db',\n  VsHgYF: '3cb371',\n  VUXe: '7b68ee',\n  VsprRggYF: 'fa9a',\n  VQe: '48d1cc',\n  VviTetYd: 'c71585',\n  midnightXe: '191970',\n  mRtcYam: 'f5fffa',\n  mistyPse: 'ffe4e1',\n  moccasR: 'ffe4b5',\n  navajowEte: 'ffdead',\n  navy: '80',\n  Tdlace: 'fdf5e6',\n  Tive: '808000',\n  TivedBb: '6b8e23',\n  Sange: 'ffa500',\n  SangeYd: 'ff4500',\n  ScEd: 'da70d6',\n  pOegTMnPd: 'eee8aa',\n  pOegYF: '98fb98',\n  pOeQe: 'afeeee',\n  pOeviTetYd: 'db7093',\n  papayawEp: 'ffefd5',\n  pHKpuff: 'ffdab9',\n  peru: 'cd853f',\n  pRk: 'ffc0cb',\n  plum: 'dda0dd',\n  powMrXe: 'b0e0e6',\n  purpN: '800080',\n  YbeccapurpN: '663399',\n  Yd: 'ff0000',\n  Psybrown: 'bc8f8f',\n  PyOXe: '4169e1',\n  saddNbPwn: '8b4513',\n  sOmon: 'fa8072',\n  sandybPwn: 'f4a460',\n  sHgYF: '2e8b57',\n  sHshell: 'fff5ee',\n  siFna: 'a0522d',\n  silver: 'c0c0c0',\n  skyXe: '87ceeb',\n  UXe: '6a5acd',\n  UWay: '708090',\n  UgYy: '708090',\n  snow: 'fffafa',\n  sprRggYF: 'ff7f',\n  stAlXe: '4682b4',\n  tan: 'd2b48c',\n  teO: '8080',\n  tEstN: 'd8bfd8',\n  tomato: 'ff6347',\n  Qe: '40e0d0',\n  viTet: 'ee82ee',\n  JHt: 'f5deb3',\n  wEte: 'ffffff',\n  wEtesmoke: 'f5f5f5',\n  Lw: 'ffff00',\n  LwgYF: '9acd32'\n};\nfunction unpack() {\n  const unpacked = {};\n  const keys = Object.keys(names$1);\n  const tkeys = Object.keys(map);\n  let i, j, k, ok, nk;\n  for (i = 0; i < keys.length; i++) {\n    ok = nk = keys[i];\n    for (j = 0; j < tkeys.length; j++) {\n      k = tkeys[j];\n      nk = nk.replace(k, map[k]);\n    }\n    k = parseInt(names$1[ok], 16);\n    unpacked[nk] = [k >> 16 & 0xFF, k >> 8 & 0xFF, k & 0xFF];\n  }\n  return unpacked;\n}\n\nlet names;\nfunction nameParse(str) {\n  if (!names) {\n    names = unpack();\n    names.transparent = [0, 0, 0, 0];\n  }\n  const a = names[str.toLowerCase()];\n  return a && {\n    r: a[0],\n    g: a[1],\n    b: a[2],\n    a: a.length === 4 ? a[3] : 255\n  };\n}\n\nconst RGB_RE = /^rgba?\\(\\s*([-+.\\d]+)(%)?[\\s,]+([-+.e\\d]+)(%)?[\\s,]+([-+.e\\d]+)(%)?(?:[\\s,/]+([-+.e\\d]+)(%)?)?\\s*\\)$/;\nfunction rgbParse(str) {\n  const m = RGB_RE.exec(str);\n  let a = 255;\n  let r, g, b;\n  if (!m) {\n    return;\n  }\n  if (m[7] !== r) {\n    const v = +m[7];\n    a = m[8] ? p2b(v) : lim(v * 255, 0, 255);\n  }\n  r = +m[1];\n  g = +m[3];\n  b = +m[5];\n  r = 255 & (m[2] ? p2b(r) : lim(r, 0, 255));\n  g = 255 & (m[4] ? p2b(g) : lim(g, 0, 255));\n  b = 255 & (m[6] ? p2b(b) : lim(b, 0, 255));\n  return {\n    r: r,\n    g: g,\n    b: b,\n    a: a\n  };\n}\nfunction rgbString(v) {\n  return v && (\n    v.a < 255\n      ? `rgba(${v.r}, ${v.g}, ${v.b}, ${b2n(v.a)})`\n      : `rgb(${v.r}, ${v.g}, ${v.b})`\n  );\n}\n\nconst to = v => v <= 0.0031308 ? v * 12.92 : Math.pow(v, 1.0 / 2.4) * 1.055 - 0.055;\nconst from = v => v <= 0.04045 ? v / 12.92 : Math.pow((v + 0.055) / 1.055, 2.4);\nfunction interpolate(rgb1, rgb2, t) {\n  const r = from(b2n(rgb1.r));\n  const g = from(b2n(rgb1.g));\n  const b = from(b2n(rgb1.b));\n  return {\n    r: n2b(to(r + t * (from(b2n(rgb2.r)) - r))),\n    g: n2b(to(g + t * (from(b2n(rgb2.g)) - g))),\n    b: n2b(to(b + t * (from(b2n(rgb2.b)) - b))),\n    a: rgb1.a + t * (rgb2.a - rgb1.a)\n  };\n}\n\nfunction modHSL(v, i, ratio) {\n  if (v) {\n    let tmp = rgb2hsl(v);\n    tmp[i] = Math.max(0, Math.min(tmp[i] + tmp[i] * ratio, i === 0 ? 360 : 1));\n    tmp = hsl2rgb(tmp);\n    v.r = tmp[0];\n    v.g = tmp[1];\n    v.b = tmp[2];\n  }\n}\nfunction clone(v, proto) {\n  return v ? Object.assign(proto || {}, v) : v;\n}\nfunction fromObject(input) {\n  var v = {r: 0, g: 0, b: 0, a: 255};\n  if (Array.isArray(input)) {\n    if (input.length >= 3) {\n      v = {r: input[0], g: input[1], b: input[2], a: 255};\n      if (input.length > 3) {\n        v.a = n2b(input[3]);\n      }\n    }\n  } else {\n    v = clone(input, {r: 0, g: 0, b: 0, a: 1});\n    v.a = n2b(v.a);\n  }\n  return v;\n}\nfunction functionParse(str) {\n  if (str.charAt(0) === 'r') {\n    return rgbParse(str);\n  }\n  return hueParse(str);\n}\nclass Color {\n  constructor(input) {\n    if (input instanceof Color) {\n      return input;\n    }\n    const type = typeof input;\n    let v;\n    if (type === 'object') {\n      v = fromObject(input);\n    } else if (type === 'string') {\n      v = hexParse(input) || nameParse(input) || functionParse(input);\n    }\n    this._rgb = v;\n    this._valid = !!v;\n  }\n  get valid() {\n    return this._valid;\n  }\n  get rgb() {\n    var v = clone(this._rgb);\n    if (v) {\n      v.a = b2n(v.a);\n    }\n    return v;\n  }\n  set rgb(obj) {\n    this._rgb = fromObject(obj);\n  }\n  rgbString() {\n    return this._valid ? rgbString(this._rgb) : undefined;\n  }\n  hexString() {\n    return this._valid ? hexString(this._rgb) : undefined;\n  }\n  hslString() {\n    return this._valid ? hslString(this._rgb) : undefined;\n  }\n  mix(color, weight) {\n    if (color) {\n      const c1 = this.rgb;\n      const c2 = color.rgb;\n      let w2;\n      const p = weight === w2 ? 0.5 : weight;\n      const w = 2 * p - 1;\n      const a = c1.a - c2.a;\n      const w1 = ((w * a === -1 ? w : (w + a) / (1 + w * a)) + 1) / 2.0;\n      w2 = 1 - w1;\n      c1.r = 0xFF & w1 * c1.r + w2 * c2.r + 0.5;\n      c1.g = 0xFF & w1 * c1.g + w2 * c2.g + 0.5;\n      c1.b = 0xFF & w1 * c1.b + w2 * c2.b + 0.5;\n      c1.a = p * c1.a + (1 - p) * c2.a;\n      this.rgb = c1;\n    }\n    return this;\n  }\n  interpolate(color, t) {\n    if (color) {\n      this._rgb = interpolate(this._rgb, color._rgb, t);\n    }\n    return this;\n  }\n  clone() {\n    return new Color(this.rgb);\n  }\n  alpha(a) {\n    this._rgb.a = n2b(a);\n    return this;\n  }\n  clearer(ratio) {\n    const rgb = this._rgb;\n    rgb.a *= 1 - ratio;\n    return this;\n  }\n  greyscale() {\n    const rgb = this._rgb;\n    const val = round(rgb.r * 0.3 + rgb.g * 0.59 + rgb.b * 0.11);\n    rgb.r = rgb.g = rgb.b = val;\n    return this;\n  }\n  opaquer(ratio) {\n    const rgb = this._rgb;\n    rgb.a *= 1 + ratio;\n    return this;\n  }\n  negate() {\n    const v = this._rgb;\n    v.r = 255 - v.r;\n    v.g = 255 - v.g;\n    v.b = 255 - v.b;\n    return this;\n  }\n  lighten(ratio) {\n    modHSL(this._rgb, 2, ratio);\n    return this;\n  }\n  darken(ratio) {\n    modHSL(this._rgb, 2, -ratio);\n    return this;\n  }\n  saturate(ratio) {\n    modHSL(this._rgb, 1, ratio);\n    return this;\n  }\n  desaturate(ratio) {\n    modHSL(this._rgb, 1, -ratio);\n    return this;\n  }\n  rotate(deg) {\n    rotate(this._rgb, deg);\n    return this;\n  }\n}\n\nfunction index_esm(input) {\n  return new Color(input);\n}\n\nexport { Color, b2n, b2p, index_esm as default, hexParse, hexString, hsl2rgb, hslString, hsv2rgb, hueParse, hwb2rgb, lim, n2b, n2p, nameParse, p2b, rgb2hsl, rgbParse, rgbString, rotate, round };\n","import colorLib from '@kurkle/color';\n\nexport function isPatternOrGradient(value) {\n  if (value && typeof value === 'object') {\n    const type = value.toString();\n    return type === '[object CanvasPattern]' || type === '[object CanvasGradient]';\n  }\n\n  return false;\n}\n\nexport function color(value) {\n  return isPatternOrGradient(value) ? value : colorLib(value);\n}\n\nexport function getHoverColor(value) {\n  return isPatternOrGradient(value)\n    ? value\n    : colorLib(value).saturate(0.5).darken(0.1).hexString();\n}\n","const numbers = ['x', 'y', 'borderWidth', 'radius', 'tension'];\nconst colors = ['color', 'borderColor', 'backgroundColor'];\n\nexport function applyAnimationsDefaults(defaults) {\n  defaults.set('animation', {\n    delay: undefined,\n    duration: 1000,\n    easing: 'easeOutQuart',\n    fn: undefined,\n    from: undefined,\n    loop: undefined,\n    to: undefined,\n    type: undefined,\n  });\n\n  defaults.describe('animation', {\n    _fallback: false,\n    _indexable: false,\n    _scriptable: (name) => name !== 'onProgress' && name !== 'onComplete' && name !== 'fn',\n  });\n\n  defaults.set('animations', {\n    colors: {\n      type: 'color',\n      properties: colors\n    },\n    numbers: {\n      type: 'number',\n      properties: numbers\n    },\n  });\n\n  defaults.describe('animations', {\n    _fallback: 'animation',\n  });\n\n  defaults.set('transitions', {\n    active: {\n      animation: {\n        duration: 400\n      }\n    },\n    resize: {\n      animation: {\n        duration: 0\n      }\n    },\n    show: {\n      animations: {\n        colors: {\n          from: 'transparent'\n        },\n        visible: {\n          type: 'boolean',\n          duration: 0 // show immediately\n        },\n      }\n    },\n    hide: {\n      animations: {\n        colors: {\n          to: 'transparent'\n        },\n        visible: {\n          type: 'boolean',\n          easing: 'linear',\n          fn: v => v | 0 // for keeping the dataset visible all the way through the animation\n        },\n      }\n    }\n  });\n}\n","\nconst intlCache = new Map();\n\nfunction getNumberFormat(locale, options) {\n  options = options || {};\n  const cacheKey = locale + JSON.stringify(options);\n  let formatter = intlCache.get(cacheKey);\n  if (!formatter) {\n    formatter = new Intl.NumberFormat(locale, options);\n    intlCache.set(cacheKey, formatter);\n  }\n  return formatter;\n}\n\nexport function formatNumber(num, locale, options) {\n  return getNumberFormat(locale, options).format(num);\n}\n","import {isArray} from '../helpers/helpers.core';\nimport {formatNumber} from '../helpers/helpers.intl';\nimport {log10} from '../helpers/helpers.math';\n\n/**\n * Namespace to hold formatters for different types of ticks\n * @namespace Chart.Ticks.formatters\n */\nconst formatters = {\n  /**\n   * Formatter for value labels\n   * @method Chart.Ticks.formatters.values\n   * @param value the value to display\n   * @return {string|string[]} the label to display\n   */\n  values(value) {\n    return isArray(value) ? value : '' + value;\n  },\n\n  /**\n   * Formatter for numeric ticks\n   * @method Chart.Ticks.formatters.numeric\n   * @param tickValue {number} the value to be formatted\n   * @param index {number} the position of the tickValue parameter in the ticks array\n   * @param ticks {object[]} the list of ticks being converted\n   * @return {string} string representation of the tickValue parameter\n   */\n  numeric(tickValue, index, ticks) {\n    if (tickValue === 0) {\n      return '0'; // never show decimal places for 0\n    }\n\n    const locale = this.chart.options.locale;\n    let notation;\n    let delta = tickValue; // This is used when there are less than 2 ticks as the tick interval.\n\n    if (ticks.length > 1) {\n      // all ticks are small or there huge numbers; use scientific notation\n      const maxTick = Math.max(Math.abs(ticks[0].value), Math.abs(ticks[ticks.length - 1].value));\n      if (maxTick < 1e-4 || maxTick > 1e+15) {\n        notation = 'scientific';\n      }\n\n      delta = calculateDelta(tickValue, ticks);\n    }\n\n    const logDelta = log10(Math.abs(delta));\n    const numDecimal = Math.max(Math.min(-1 * Math.floor(logDelta), 20), 0); // toFixed has a max of 20 decimal places\n\n    const options = {notation, minimumFractionDigits: numDecimal, maximumFractionDigits: numDecimal};\n    Object.assign(options, this.options.ticks.format);\n\n    return formatNumber(tickValue, locale, options);\n  },\n\n\n  /**\n   * Formatter for logarithmic ticks\n   * @method Chart.Ticks.formatters.logarithmic\n   * @param tickValue {number} the value to be formatted\n   * @param index {number} the position of the tickValue parameter in the ticks array\n   * @param ticks {object[]} the list of ticks being converted\n   * @return {string} string representation of the tickValue parameter\n   */\n  logarithmic(tickValue, index, ticks) {\n    if (tickValue === 0) {\n      return '0';\n    }\n    const remain = tickValue / (Math.pow(10, Math.floor(log10(tickValue))));\n    if (remain === 1 || remain === 2 || remain === 5) {\n      return formatters.numeric.call(this, tickValue, index, ticks);\n    }\n    return '';\n  }\n\n};\n\n\nfunction calculateDelta(tickValue, ticks) {\n  // Figure out how many digits to show\n  // The space between the first two ticks might be smaller than normal spacing\n  let delta = ticks.length > 3 ? ticks[2].value - ticks[1].value : ticks[1].value - ticks[0].value;\n\n  // If we have a number like 2.5 as the delta, figure out how many decimal places we need\n  if (Math.abs(delta) >= 1 && tickValue !== Math.floor(tickValue)) {\n    // not an integer\n    delta = tickValue - Math.floor(tickValue);\n  }\n  return delta;\n}\n\n/**\n * Namespace to hold static tick generation functions\n * @namespace Chart.Ticks\n */\nexport default {formatters};\n","import {getHoverColor} from '../helpers/helpers.color';\nimport {isObject, merge, valueOrDefault} from '../helpers/helpers.core';\nimport {applyAnimationsDefaults} from './core.animations.defaults';\nimport {applyLayoutsDefaults} from './core.layouts.defaults';\nimport {applyScaleDefaults} from './core.scale.defaults';\n\nexport const overrides = Object.create(null);\nexport const descriptors = Object.create(null);\n\n/**\n * @param {object} node\n * @param {string} key\n * @return {object}\n */\nfunction getScope(node, key) {\n  if (!key) {\n    return node;\n  }\n  const keys = key.split('.');\n  for (let i = 0, n = keys.length; i < n; ++i) {\n    const k = keys[i];\n    node = node[k] || (node[k] = Object.create(null));\n  }\n  return node;\n}\n\nfunction set(root, scope, values) {\n  if (typeof scope === 'string') {\n    return merge(getScope(root, scope), values);\n  }\n  return merge(getScope(root, ''), scope);\n}\n\n/**\n * Please use the module's default export which provides a singleton instance\n * Note: class is exported for typedoc\n */\nexport class Defaults {\n  constructor(_descriptors, _appliers) {\n    this.animation = undefined;\n    this.backgroundColor = 'rgba(0,0,0,0.1)';\n    this.borderColor = 'rgba(0,0,0,0.1)';\n    this.color = '#666';\n    this.datasets = {};\n    this.devicePixelRatio = (context) => context.chart.platform.getDevicePixelRatio();\n    this.elements = {};\n    this.events = [\n      'mousemove',\n      'mouseout',\n      'click',\n      'touchstart',\n      'touchmove'\n    ];\n    this.font = {\n      family: \"'Helvetica Neue', 'Helvetica', 'Arial', sans-serif\",\n      size: 12,\n      style: 'normal',\n      lineHeight: 1.2,\n      weight: null\n    };\n    this.hover = {};\n    this.hoverBackgroundColor = (ctx, options) => getHoverColor(options.backgroundColor);\n    this.hoverBorderColor = (ctx, options) => getHoverColor(options.borderColor);\n    this.hoverColor = (ctx, options) => getHoverColor(options.color);\n    this.indexAxis = 'x';\n    this.interaction = {\n      mode: 'nearest',\n      intersect: true,\n      includeInvisible: false\n    };\n    this.maintainAspectRatio = true;\n    this.onHover = null;\n    this.onClick = null;\n    this.parsing = true;\n    this.plugins = {};\n    this.responsive = true;\n    this.scale = undefined;\n    this.scales = {};\n    this.showLine = true;\n    this.drawActiveElementsOnTop = true;\n\n    this.describe(_descriptors);\n    this.apply(_appliers);\n  }\n\n  /**\n\t * @param {string|object} scope\n\t * @param {object} [values]\n\t */\n  set(scope, values) {\n    return set(this, scope, values);\n  }\n\n  /**\n\t * @param {string} scope\n\t */\n  get(scope) {\n    return getScope(this, scope);\n  }\n\n  /**\n\t * @param {string|object} scope\n\t * @param {object} [values]\n\t */\n  describe(scope, values) {\n    return set(descriptors, scope, values);\n  }\n\n  override(scope, values) {\n    return set(overrides, scope, values);\n  }\n\n  /**\n\t * Routes the named defaults to fallback to another scope/name.\n\t * This routing is useful when those target values, like defaults.color, are changed runtime.\n\t * If the values would be copied, the runtime change would not take effect. By routing, the\n\t * fallback is evaluated at each access, so its always up to date.\n\t *\n\t * Example:\n\t *\n\t * \tdefaults.route('elements.arc', 'backgroundColor', '', 'color')\n\t *   - reads the backgroundColor from defaults.color when undefined locally\n\t *\n\t * @param {string} scope Scope this route applies to.\n\t * @param {string} name Property name that should be routed to different namespace when not defined here.\n\t * @param {string} targetScope The namespace where those properties should be routed to.\n\t * Empty string ('') is the root of defaults.\n\t * @param {string} targetName The target name in the target scope the property should be routed to.\n\t */\n  route(scope, name, targetScope, targetName) {\n    const scopeObject = getScope(this, scope);\n    const targetScopeObject = getScope(this, targetScope);\n    const privateName = '_' + name;\n\n    Object.defineProperties(scopeObject, {\n      // A private property is defined to hold the actual value, when this property is set in its scope (set in the setter)\n      [privateName]: {\n        value: scopeObject[name],\n        writable: true\n      },\n      // The actual property is defined as getter/setter so we can do the routing when value is not locally set.\n      [name]: {\n        enumerable: true,\n        get() {\n          const local = this[privateName];\n          const target = targetScopeObject[targetName];\n          if (isObject(local)) {\n            return Object.assign({}, target, local);\n          }\n          return valueOrDefault(local, target);\n        },\n        set(value) {\n          this[privateName] = value;\n        }\n      }\n    });\n  }\n\n  apply(appliers) {\n    appliers.forEach((apply) => apply(this));\n  }\n}\n\n// singleton instance\nexport default /* #__PURE__ */ new Defaults({\n  _scriptable: (name) => !name.startsWith('on'),\n  _indexable: (name) => name !== 'events',\n  hover: {\n    _fallback: 'interaction'\n  },\n  interaction: {\n    _scriptable: false,\n    _indexable: false,\n  }\n}, [applyAnimationsDefaults, applyLayoutsDefaults, applyScaleDefaults]);\n","export function applyLayoutsDefaults(defaults) {\n  defaults.set('layout', {\n    autoPadding: true,\n    padding: {\n      top: 0,\n      right: 0,\n      bottom: 0,\n      left: 0\n    }\n  });\n}\n","import Ticks from './core.ticks';\n\nexport function applyScaleDefaults(defaults) {\n  defaults.set('scale', {\n    display: true,\n    offset: false,\n    reverse: false,\n    beginAtZero: false,\n\n    /**\n     * Scale boundary strategy (bypassed by min/max time options)\n     * - `data`: make sure data are fully visible, ticks outside are removed\n     * - `ticks`: make sure ticks are fully visible, data outside are truncated\n     * @see https://github.com/chartjs/Chart.js/pull/4556\n     * @since 3.0.0\n     */\n    bounds: 'ticks',\n\n    /**\n     * Addition grace added to max and reduced from min data value.\n     * @since 3.0.0\n     */\n    grace: 0,\n\n    // grid line settings\n    grid: {\n      display: true,\n      lineWidth: 1,\n      drawBorder: true,\n      drawOnChartArea: true,\n      drawTicks: true,\n      tickLength: 8,\n      tickWidth: (_ctx, options) => options.lineWidth,\n      tickColor: (_ctx, options) => options.color,\n      offset: false,\n      borderDash: [],\n      borderDashOffset: 0.0,\n      borderWidth: 1\n    },\n\n    // scale title\n    title: {\n      // display property\n      display: false,\n\n      // actual label\n      text: '',\n\n      // top/bottom padding\n      padding: {\n        top: 4,\n        bottom: 4\n      }\n    },\n\n    // label settings\n    ticks: {\n      minRotation: 0,\n      maxRotation: 50,\n      mirror: false,\n      textStrokeWidth: 0,\n      textStrokeColor: '',\n      padding: 3,\n      display: true,\n      autoSkip: true,\n      autoSkipPadding: 3,\n      labelOffset: 0,\n      // We pass through arrays to be rendered as multiline labels, we convert Others to strings here.\n      callback: Ticks.formatters.values,\n      minor: {},\n      major: {},\n      align: 'center',\n      crossAlign: 'near',\n\n      showLabelBackdrop: false,\n      backdropColor: 'rgba(255, 255, 255, 0.75)',\n      backdropPadding: 2,\n    }\n  });\n\n  defaults.route('scale.ticks', 'color', '', 'color');\n  defaults.route('scale.grid', 'color', '', 'borderColor');\n  defaults.route('scale.grid', 'borderColor', '', 'borderColor');\n  defaults.route('scale.title', 'color', '', 'color');\n\n  defaults.describe('scale', {\n    _fallback: false,\n    _scriptable: (name) => !name.startsWith('before') && !name.startsWith('after') && name !== 'callback' && name !== 'parser',\n    _indexable: (name) => name !== 'borderDash' && name !== 'tickBorderDash',\n  });\n\n  defaults.describe('scales', {\n    _fallback: 'scale',\n  });\n\n  defaults.describe('scale.ticks', {\n    _scriptable: (name) => name !== 'backdropPadding' && name !== 'callback',\n    _indexable: (name) => name !== 'backdropPadding',\n  });\n}\n","import {INFINITY} from './helpers.math';\n\n/**\n * Note: typedefs are auto-exported, so use a made-up `dom` namespace where\n * necessary to avoid duplicates with `export * from './helpers`; see\n * https://github.com/microsoft/TypeScript/issues/46011\n * @typedef { import(\"../core/core.controller\").default } dom.Chart\n * @typedef { import('../../types').ChartEvent } ChartEvent\n */\n\n/**\n * @private\n */\nexport function _isDomSupported() {\n  return typeof window !== 'undefined' && typeof document !== 'undefined';\n}\n\n/**\n * @private\n */\nexport function _getParentNode(domNode) {\n  let parent = domNode.parentNode;\n  if (parent && parent.toString() === '[object ShadowRoot]') {\n    parent = parent.host;\n  }\n  return parent;\n}\n\n/**\n * convert max-width/max-height values that may be percentages into a number\n * @private\n */\nfunction parseMaxStyle(styleValue, node, parentProperty) {\n  let valueInPixels;\n  if (typeof styleValue === 'string') {\n    valueInPixels = parseInt(styleValue, 10);\n\n    if (styleValue.indexOf('%') !== -1) {\n      // percentage * size in dimension\n      valueInPixels = valueInPixels / 100 * node.parentNode[parentProperty];\n    }\n  } else {\n    valueInPixels = styleValue;\n  }\n\n  return valueInPixels;\n}\n\nconst getComputedStyle = (element) => window.getComputedStyle(element, null);\n\nexport function getStyle(el, property) {\n  return getComputedStyle(el).getPropertyValue(property);\n}\n\nconst positions = ['top', 'right', 'bottom', 'left'];\nfunction getPositionedStyle(styles, style, suffix) {\n  const result = {};\n  suffix = suffix ? '-' + suffix : '';\n  for (let i = 0; i < 4; i++) {\n    const pos = positions[i];\n    result[pos] = parseFloat(styles[style + '-' + pos + suffix]) || 0;\n  }\n  result.width = result.left + result.right;\n  result.height = result.top + result.bottom;\n  return result;\n}\n\nconst useOffsetPos = (x, y, target) => (x > 0 || y > 0) && (!target || !target.shadowRoot);\n\n/**\n * @param {Event} e\n * @param {HTMLCanvasElement} canvas\n * @returns {{x: number, y: number, box: boolean}}\n */\nfunction getCanvasPosition(e, canvas) {\n  // @ts-ignore\n  const touches = e.touches;\n  const source = touches && touches.length ? touches[0] : e;\n  const {offsetX, offsetY} = source;\n  let box = false;\n  let x, y;\n  if (useOffsetPos(offsetX, offsetY, e.target)) {\n    x = offsetX;\n    y = offsetY;\n  } else {\n    const rect = canvas.getBoundingClientRect();\n    x = source.clientX - rect.left;\n    y = source.clientY - rect.top;\n    box = true;\n  }\n  return {x, y, box};\n}\n\n/**\n * Gets an event's x, y coordinates, relative to the chart area\n * @param {Event|ChartEvent} evt\n * @param {dom.Chart} chart\n * @returns {{x: number, y: number}}\n */\nexport function getRelativePosition(evt, chart) {\n  if ('native' in evt) {\n    return evt;\n  }\n\n  const {canvas, currentDevicePixelRatio} = chart;\n  const style = getComputedStyle(canvas);\n  const borderBox = style.boxSizing === 'border-box';\n  const paddings = getPositionedStyle(style, 'padding');\n  const borders = getPositionedStyle(style, 'border', 'width');\n  const {x, y, box} = getCanvasPosition(evt, canvas);\n  const xOffset = paddings.left + (box && borders.left);\n  const yOffset = paddings.top + (box && borders.top);\n\n  let {width, height} = chart;\n  if (borderBox) {\n    width -= paddings.width + borders.width;\n    height -= paddings.height + borders.height;\n  }\n  return {\n    x: Math.round((x - xOffset) / width * canvas.width / currentDevicePixelRatio),\n    y: Math.round((y - yOffset) / height * canvas.height / currentDevicePixelRatio)\n  };\n}\n\nfunction getContainerSize(canvas, width, height) {\n  let maxWidth, maxHeight;\n\n  if (width === undefined || height === undefined) {\n    const container = _getParentNode(canvas);\n    if (!container) {\n      width = canvas.clientWidth;\n      height = canvas.clientHeight;\n    } else {\n      const rect = container.getBoundingClientRect(); // this is the border box of the container\n      const containerStyle = getComputedStyle(container);\n      const containerBorder = getPositionedStyle(containerStyle, 'border', 'width');\n      const containerPadding = getPositionedStyle(containerStyle, 'padding');\n      width = rect.width - containerPadding.width - containerBorder.width;\n      height = rect.height - containerPadding.height - containerBorder.height;\n      maxWidth = parseMaxStyle(containerStyle.maxWidth, container, 'clientWidth');\n      maxHeight = parseMaxStyle(containerStyle.maxHeight, container, 'clientHeight');\n    }\n  }\n  return {\n    width,\n    height,\n    maxWidth: maxWidth || INFINITY,\n    maxHeight: maxHeight || INFINITY\n  };\n}\n\nconst round1 = v => Math.round(v * 10) / 10;\n\nexport function getMaximumSize(canvas, bbWidth, bbHeight, aspectRatio) {\n  const style = getComputedStyle(canvas);\n  const margins = getPositionedStyle(style, 'margin');\n  const maxWidth = parseMaxStyle(style.maxWidth, canvas, 'clientWidth') || INFINITY;\n  const maxHeight = parseMaxStyle(style.maxHeight, canvas, 'clientHeight') || INFINITY;\n  const containerSize = getContainerSize(canvas, bbWidth, bbHeight);\n  let {width, height} = containerSize;\n\n  if (style.boxSizing === 'content-box') {\n    const borders = getPositionedStyle(style, 'border', 'width');\n    const paddings = getPositionedStyle(style, 'padding');\n    width -= paddings.width + borders.width;\n    height -= paddings.height + borders.height;\n  }\n  width = Math.max(0, width - margins.width);\n  height = Math.max(0, aspectRatio ? Math.floor(width / aspectRatio) : height - margins.height);\n  width = round1(Math.min(width, maxWidth, containerSize.maxWidth));\n  height = round1(Math.min(height, maxHeight, containerSize.maxHeight));\n  if (width && !height) {\n    // https://github.com/chartjs/Chart.js/issues/4659\n    // If the canvas has width, but no height, default to aspectRatio of 2 (canvas default)\n    height = round1(width / 2);\n  }\n  return {\n    width,\n    height\n  };\n}\n\n/**\n * @param {import('../core/core.controller').default} chart\n * @param {number} [forceRatio]\n * @param {boolean} [forceStyle]\n * @returns {boolean} True if the canvas context size or transformation has changed.\n */\nexport function retinaScale(chart, forceRatio, forceStyle) {\n  const pixelRatio = forceRatio || 1;\n  const deviceHeight = Math.floor(chart.height * pixelRatio);\n  const deviceWidth = Math.floor(chart.width * pixelRatio);\n\n  chart.height = deviceHeight / pixelRatio;\n  chart.width = deviceWidth / pixelRatio;\n\n  const canvas = chart.canvas;\n\n  // If no style has been set on the canvas, the render size is used as display size,\n  // making the chart visually bigger, so let's enforce it to the \"correct\" values.\n  // See https://github.com/chartjs/Chart.js/issues/3575\n  if (canvas.style && (forceStyle || (!canvas.style.height && !canvas.style.width))) {\n    canvas.style.height = `${chart.height}px`;\n    canvas.style.width = `${chart.width}px`;\n  }\n\n  if (chart.currentDevicePixelRatio !== pixelRatio\n      || canvas.height !== deviceHeight\n      || canvas.width !== deviceWidth) {\n    chart.currentDevicePixelRatio = pixelRatio;\n    canvas.height = deviceHeight;\n    canvas.width = deviceWidth;\n    chart.ctx.setTransform(pixelRatio, 0, 0, pixelRatio, 0, 0);\n    return true;\n  }\n  return false;\n}\n\n/**\n * Detects support for options object argument in addEventListener.\n * https://developer.mozilla.org/en-US/docs/Web/API/EventTarget/addEventListener#Safely_detecting_option_support\n * @private\n */\nexport const supportsEventListenerOptions = (function() {\n  let passiveSupported = false;\n  try {\n    const options = {\n      get passive() { // This function will be called when the browser attempts to access the passive property.\n        passiveSupported = true;\n        return false;\n      }\n    };\n    // @ts-ignore\n    window.addEventListener('test', null, options);\n    // @ts-ignore\n    window.removeEventListener('test', null, options);\n  } catch (e) {\n    // continue regardless of error\n  }\n  return passiveSupported;\n}());\n\n/**\n * The \"used\" size is the final value of a dimension property after all calculations have\n * been performed. This method uses the computed style of `element` but returns undefined\n * if the computed style is not expressed in pixels. That can happen in some cases where\n * `element` has a size relative to its parent and this last one is not yet displayed,\n * for example because of `display: none` on a parent node.\n * @see https://developer.mozilla.org/en-US/docs/Web/CSS/used_value\n * @returns {number=} Size in pixels or undefined if unknown.\n */\nexport function readUsedSize(element, property) {\n  const value = getStyle(element, property);\n  const matches = value && value.match(/^(\\d+)(\\.\\d+)?px$/);\n  return matches ? +matches[1] : undefined;\n}\n","import {isArray, isNullOrUndef} from './helpers.core';\nimport {PI, TAU, HALF_PI, QUARTER_PI, TWO_THIRDS_PI, RAD_PER_DEG} from './helpers.math';\n\n/**\n * Note: typedefs are auto-exported, so use a made-up `canvas` namespace where\n * necessary to avoid duplicates with `export * from './helpers`; see\n * https://github.com/microsoft/TypeScript/issues/46011\n * @typedef { import(\"../core/core.controller\").default } canvas.Chart\n * @typedef { import(\"../../types\").Point } Point\n */\n\n/**\n * @namespace Chart.helpers.canvas\n */\n\n/**\n * Converts the given font object into a CSS font string.\n * @param {object} font - A font object.\n * @return {string|null} The CSS font string. See https://developer.mozilla.org/en-US/docs/Web/CSS/font\n * @private\n */\nexport function toFontString(font) {\n  if (!font || isNullOrUndef(font.size) || isNullOrUndef(font.family)) {\n    return null;\n  }\n\n  return (font.style ? font.style + ' ' : '')\n\t\t+ (font.weight ? font.weight + ' ' : '')\n\t\t+ font.size + 'px '\n\t\t+ font.family;\n}\n\n/**\n * @private\n */\nexport function _measureText(ctx, data, gc, longest, string) {\n  let textWidth = data[string];\n  if (!textWidth) {\n    textWidth = data[string] = ctx.measureText(string).width;\n    gc.push(string);\n  }\n  if (textWidth > longest) {\n    longest = textWidth;\n  }\n  return longest;\n}\n\n/**\n * @private\n */\nexport function _longestText(ctx, font, arrayOfThings, cache) {\n  cache = cache || {};\n  let data = cache.data = cache.data || {};\n  let gc = cache.garbageCollect = cache.garbageCollect || [];\n\n  if (cache.font !== font) {\n    data = cache.data = {};\n    gc = cache.garbageCollect = [];\n    cache.font = font;\n  }\n\n  ctx.save();\n\n  ctx.font = font;\n  let longest = 0;\n  const ilen = arrayOfThings.length;\n  let i, j, jlen, thing, nestedThing;\n  for (i = 0; i < ilen; i++) {\n    thing = arrayOfThings[i];\n\n    // Undefined strings and arrays should not be measured\n    if (thing !== undefined && thing !== null && isArray(thing) !== true) {\n      longest = _measureText(ctx, data, gc, longest, thing);\n    } else if (isArray(thing)) {\n      // if it is an array lets measure each element\n      // to do maybe simplify this function a bit so we can do this more recursively?\n      for (j = 0, jlen = thing.length; j < jlen; j++) {\n        nestedThing = thing[j];\n        // Undefined strings and arrays should not be measured\n        if (nestedThing !== undefined && nestedThing !== null && !isArray(nestedThing)) {\n          longest = _measureText(ctx, data, gc, longest, nestedThing);\n        }\n      }\n    }\n  }\n\n  ctx.restore();\n\n  const gcLen = gc.length / 2;\n  if (gcLen > arrayOfThings.length) {\n    for (i = 0; i < gcLen; i++) {\n      delete data[gc[i]];\n    }\n    gc.splice(0, gcLen);\n  }\n  return longest;\n}\n\n/**\n * Returns the aligned pixel value to avoid anti-aliasing blur\n * @param {canvas.Chart} chart - The chart instance.\n * @param {number} pixel - A pixel value.\n * @param {number} width - The width of the element.\n * @returns {number} The aligned pixel value.\n * @private\n */\nexport function _alignPixel(chart, pixel, width) {\n  const devicePixelRatio = chart.currentDevicePixelRatio;\n  const halfWidth = width !== 0 ? Math.max(width / 2, 0.5) : 0;\n  return Math.round((pixel - halfWidth) * devicePixelRatio) / devicePixelRatio + halfWidth;\n}\n\n/**\n * Clears the entire canvas.\n * @param {HTMLCanvasElement} canvas\n * @param {CanvasRenderingContext2D} [ctx]\n */\nexport function clearCanvas(canvas, ctx) {\n  ctx = ctx || canvas.getContext('2d');\n\n  ctx.save();\n  // canvas.width and canvas.height do not consider the canvas transform,\n  // while clearRect does\n  ctx.resetTransform();\n  ctx.clearRect(0, 0, canvas.width, canvas.height);\n  ctx.restore();\n}\n\nexport function drawPoint(ctx, options, x, y) {\n  drawPointLegend(ctx, options, x, y, null);\n}\n\nexport function drawPointLegend(ctx, options, x, y, w) {\n  let type, xOffset, yOffset, size, cornerRadius, width;\n  const style = options.pointStyle;\n  const rotation = options.rotation;\n  const radius = options.radius;\n  let rad = (rotation || 0) * RAD_PER_DEG;\n\n  if (style && typeof style === 'object') {\n    type = style.toString();\n    if (type === '[object HTMLImageElement]' || type === '[object HTMLCanvasElement]') {\n      ctx.save();\n      ctx.translate(x, y);\n      ctx.rotate(rad);\n      ctx.drawImage(style, -style.width / 2, -style.height / 2, style.width, style.height);\n      ctx.restore();\n      return;\n    }\n  }\n\n  if (isNaN(radius) || radius <= 0) {\n    return;\n  }\n\n  ctx.beginPath();\n\n  switch (style) {\n  // Default includes circle\n  default:\n    if (w) {\n      ctx.ellipse(x, y, w / 2, radius, 0, 0, TAU);\n    } else {\n      ctx.arc(x, y, radius, 0, TAU);\n    }\n    ctx.closePath();\n    break;\n  case 'triangle':\n    ctx.moveTo(x + Math.sin(rad) * radius, y - Math.cos(rad) * radius);\n    rad += TWO_THIRDS_PI;\n    ctx.lineTo(x + Math.sin(rad) * radius, y - Math.cos(rad) * radius);\n    rad += TWO_THIRDS_PI;\n    ctx.lineTo(x + Math.sin(rad) * radius, y - Math.cos(rad) * radius);\n    ctx.closePath();\n    break;\n  case 'rectRounded':\n    // NOTE: the rounded rect implementation changed to use `arc` instead of\n    // `quadraticCurveTo` since it generates better results when rect is\n    // almost a circle. 0.516 (instead of 0.5) produces results with visually\n    // closer proportion to the previous impl and it is inscribed in the\n    // circle with `radius`. For more details, see the following PRs:\n    // https://github.com/chartjs/Chart.js/issues/5597\n    // https://github.com/chartjs/Chart.js/issues/5858\n    cornerRadius = radius * 0.516;\n    size = radius - cornerRadius;\n    xOffset = Math.cos(rad + QUARTER_PI) * size;\n    yOffset = Math.sin(rad + QUARTER_PI) * size;\n    ctx.arc(x - xOffset, y - yOffset, cornerRadius, rad - PI, rad - HALF_PI);\n    ctx.arc(x + yOffset, y - xOffset, cornerRadius, rad - HALF_PI, rad);\n    ctx.arc(x + xOffset, y + yOffset, cornerRadius, rad, rad + HALF_PI);\n    ctx.arc(x - yOffset, y + xOffset, cornerRadius, rad + HALF_PI, rad + PI);\n    ctx.closePath();\n    break;\n  case 'rect':\n    if (!rotation) {\n      size = Math.SQRT1_2 * radius;\n      width = w ? w / 2 : size;\n      ctx.rect(x - width, y - size, 2 * width, 2 * size);\n      break;\n    }\n    rad += QUARTER_PI;\n    /* falls through */\n  case 'rectRot':\n    xOffset = Math.cos(rad) * radius;\n    yOffset = Math.sin(rad) * radius;\n    ctx.moveTo(x - xOffset, y - yOffset);\n    ctx.lineTo(x + yOffset, y - xOffset);\n    ctx.lineTo(x + xOffset, y + yOffset);\n    ctx.lineTo(x - yOffset, y + xOffset);\n    ctx.closePath();\n    break;\n  case 'crossRot':\n    rad += QUARTER_PI;\n    /* falls through */\n  case 'cross':\n    xOffset = Math.cos(rad) * radius;\n    yOffset = Math.sin(rad) * radius;\n    ctx.moveTo(x - xOffset, y - yOffset);\n    ctx.lineTo(x + xOffset, y + yOffset);\n    ctx.moveTo(x + yOffset, y - xOffset);\n    ctx.lineTo(x - yOffset, y + xOffset);\n    break;\n  case 'star':\n    xOffset = Math.cos(rad) * radius;\n    yOffset = Math.sin(rad) * radius;\n    ctx.moveTo(x - xOffset, y - yOffset);\n    ctx.lineTo(x + xOffset, y + yOffset);\n    ctx.moveTo(x + yOffset, y - xOffset);\n    ctx.lineTo(x - yOffset, y + xOffset);\n    rad += QUARTER_PI;\n    xOffset = Math.cos(rad) * radius;\n    yOffset = Math.sin(rad) * radius;\n    ctx.moveTo(x - xOffset, y - yOffset);\n    ctx.lineTo(x + xOffset, y + yOffset);\n    ctx.moveTo(x + yOffset, y - xOffset);\n    ctx.lineTo(x - yOffset, y + xOffset);\n    break;\n  case 'line':\n    xOffset = w ? w / 2 : Math.cos(rad) * radius;\n    yOffset = Math.sin(rad) * radius;\n    ctx.moveTo(x - xOffset, y - yOffset);\n    ctx.lineTo(x + xOffset, y + yOffset);\n    break;\n  case 'dash':\n    ctx.moveTo(x, y);\n    ctx.lineTo(x + Math.cos(rad) * radius, y + Math.sin(rad) * radius);\n    break;\n  }\n\n  ctx.fill();\n  if (options.borderWidth > 0) {\n    ctx.stroke();\n  }\n}\n\n/**\n * Returns true if the point is inside the rectangle\n * @param {Point} point - The point to test\n * @param {object} area - The rectangle\n * @param {number} [margin] - allowed margin\n * @returns {boolean}\n * @private\n */\nexport function _isPointInArea(point, area, margin) {\n  margin = margin || 0.5; // margin - default is to match rounded decimals\n\n  return !area || (point && point.x > area.left - margin && point.x < area.right + margin &&\n\t\tpoint.y > area.top - margin && point.y < area.bottom + margin);\n}\n\nexport function clipArea(ctx, area) {\n  ctx.save();\n  ctx.beginPath();\n  ctx.rect(area.left, area.top, area.right - area.left, area.bottom - area.top);\n  ctx.clip();\n}\n\nexport function unclipArea(ctx) {\n  ctx.restore();\n}\n\n/**\n * @private\n */\nexport function _steppedLineTo(ctx, previous, target, flip, mode) {\n  if (!previous) {\n    return ctx.lineTo(target.x, target.y);\n  }\n  if (mode === 'middle') {\n    const midpoint = (previous.x + target.x) / 2.0;\n    ctx.lineTo(midpoint, previous.y);\n    ctx.lineTo(midpoint, target.y);\n  } else if (mode === 'after' !== !!flip) {\n    ctx.lineTo(previous.x, target.y);\n  } else {\n    ctx.lineTo(target.x, previous.y);\n  }\n  ctx.lineTo(target.x, target.y);\n}\n\n/**\n * @private\n */\nexport function _bezierCurveTo(ctx, previous, target, flip) {\n  if (!previous) {\n    return ctx.lineTo(target.x, target.y);\n  }\n  ctx.bezierCurveTo(\n    flip ? previous.cp1x : previous.cp2x,\n    flip ? previous.cp1y : previous.cp2y,\n    flip ? target.cp2x : target.cp1x,\n    flip ? target.cp2y : target.cp1y,\n    target.x,\n    target.y);\n}\n\n/**\n * Render text onto the canvas\n */\nexport function renderText(ctx, text, x, y, font, opts = {}) {\n  const lines = isArray(text) ? text : [text];\n  const stroke = opts.strokeWidth > 0 && opts.strokeColor !== '';\n  let i, line;\n\n  ctx.save();\n  ctx.font = font.string;\n  setRenderOpts(ctx, opts);\n\n  for (i = 0; i < lines.length; ++i) {\n    line = lines[i];\n\n    if (stroke) {\n      if (opts.strokeColor) {\n        ctx.strokeStyle = opts.strokeColor;\n      }\n\n      if (!isNullOrUndef(opts.strokeWidth)) {\n        ctx.lineWidth = opts.strokeWidth;\n      }\n\n      ctx.strokeText(line, x, y, opts.maxWidth);\n    }\n\n    ctx.fillText(line, x, y, opts.maxWidth);\n    decorateText(ctx, x, y, line, opts);\n\n    y += font.lineHeight;\n  }\n\n  ctx.restore();\n}\n\nfunction setRenderOpts(ctx, opts) {\n  if (opts.translation) {\n    ctx.translate(opts.translation[0], opts.translation[1]);\n  }\n\n  if (!isNullOrUndef(opts.rotation)) {\n    ctx.rotate(opts.rotation);\n  }\n\n  if (opts.color) {\n    ctx.fillStyle = opts.color;\n  }\n\n  if (opts.textAlign) {\n    ctx.textAlign = opts.textAlign;\n  }\n\n  if (opts.textBaseline) {\n    ctx.textBaseline = opts.textBaseline;\n  }\n}\n\nfunction decorateText(ctx, x, y, line, opts) {\n  if (opts.strikethrough || opts.underline) {\n    /**\n     * Now that IE11 support has been dropped, we can use more\n     * of the TextMetrics object. The actual bounding boxes\n     * are unflagged in Chrome, Firefox, Edge, and Safari so they\n     * can be safely used.\n     * See https://developer.mozilla.org/en-US/docs/Web/API/TextMetrics#Browser_compatibility\n     */\n    const metrics = ctx.measureText(line);\n    const left = x - metrics.actualBoundingBoxLeft;\n    const right = x + metrics.actualBoundingBoxRight;\n    const top = y - metrics.actualBoundingBoxAscent;\n    const bottom = y + metrics.actualBoundingBoxDescent;\n    const yDecoration = opts.strikethrough ? (top + bottom) / 2 : bottom;\n\n    ctx.strokeStyle = ctx.fillStyle;\n    ctx.beginPath();\n    ctx.lineWidth = opts.decorationWidth || 2;\n    ctx.moveTo(left, yDecoration);\n    ctx.lineTo(right, yDecoration);\n    ctx.stroke();\n  }\n}\n\n/**\n * Add a path of a rectangle with rounded corners to the current sub-path\n * @param {CanvasRenderingContext2D} ctx Context\n * @param {*} rect Bounding rect\n */\nexport function addRoundedRectPath(ctx, rect) {\n  const {x, y, w, h, radius} = rect;\n\n  // top left arc\n  ctx.arc(x + radius.topLeft, y + radius.topLeft, radius.topLeft, -HALF_PI, PI, true);\n\n  // line from top left to bottom left\n  ctx.lineTo(x, y + h - radius.bottomLeft);\n\n  // bottom left arc\n  ctx.arc(x + radius.bottomLeft, y + h - radius.bottomLeft, radius.bottomLeft, PI, HALF_PI, true);\n\n  // line from bottom left to bottom right\n  ctx.lineTo(x + w - radius.bottomRight, y + h);\n\n  // bottom right arc\n  ctx.arc(x + w - radius.bottomRight, y + h - radius.bottomRight, radius.bottomRight, HALF_PI, 0, true);\n\n  // line from bottom right to top right\n  ctx.lineTo(x + w, y + radius.topRight);\n\n  // top right arc\n  ctx.arc(x + w - radius.topRight, y + radius.topRight, radius.topRight, 0, -HALF_PI, true);\n\n  // line from top right to top left\n  ctx.lineTo(x + radius.topLeft, y);\n}\n","import {defined, isArray, isFunction, isObject, resolveObjectKey, _capitalize} from './helpers.core';\n\n/**\n * Creates a Proxy for resolving raw values for options.\n * @param {object[]} scopes - The option scopes to look for values, in resolution order\n * @param {string[]} [prefixes] - The prefixes for values, in resolution order.\n * @param {object[]} [rootScopes] - The root option scopes\n * @param {string|boolean} [fallback] - Parent scopes fallback\n * @param {function} [getTarget] - callback for getting the target for changed values\n * @returns Proxy\n * @private\n */\nexport function _createResolver(scopes, prefixes = [''], rootScopes = scopes, fallback, getTarget = () => scopes[0]) {\n  if (!defined(fallback)) {\n    fallback = _resolve('_fallback', scopes);\n  }\n  const cache = {\n    [Symbol.toStringTag]: 'Object',\n    _cacheable: true,\n    _scopes: scopes,\n    _rootScopes: rootScopes,\n    _fallback: fallback,\n    _getTarget: getTarget,\n    override: (scope) => _createResolver([scope, ...scopes], prefixes, rootScopes, fallback),\n  };\n  return new Proxy(cache, {\n    /**\n     * A trap for the delete operator.\n     */\n    deleteProperty(target, prop) {\n      delete target[prop]; // remove from cache\n      delete target._keys; // remove cached keys\n      delete scopes[0][prop]; // remove from top level scope\n      return true;\n    },\n\n    /**\n     * A trap for getting property values.\n     */\n    get(target, prop) {\n      return _cached(target, prop,\n        () => _resolveWithPrefixes(prop, prefixes, scopes, target));\n    },\n\n    /**\n     * A trap for Object.getOwnPropertyDescriptor.\n     * Also used by Object.hasOwnProperty.\n     */\n    getOwnPropertyDescriptor(target, prop) {\n      return Reflect.getOwnPropertyDescriptor(target._scopes[0], prop);\n    },\n\n    /**\n     * A trap for Object.getPrototypeOf.\n     */\n    getPrototypeOf() {\n      return Reflect.getPrototypeOf(scopes[0]);\n    },\n\n    /**\n     * A trap for the in operator.\n     */\n    has(target, prop) {\n      return getKeysFromAllScopes(target).includes(prop);\n    },\n\n    /**\n     * A trap for Object.getOwnPropertyNames and Object.getOwnPropertySymbols.\n     */\n    ownKeys(target) {\n      return getKeysFromAllScopes(target);\n    },\n\n    /**\n     * A trap for setting property values.\n     */\n    set(target, prop, value) {\n      const storage = target._storage || (target._storage = getTarget());\n      target[prop] = storage[prop] = value; // set to top level scope + cache\n      delete target._keys; // remove cached keys\n      return true;\n    }\n  });\n}\n\n/**\n * Returns an Proxy for resolving option values with context.\n * @param {object} proxy - The Proxy returned by `_createResolver`\n * @param {object} context - Context object for scriptable/indexable options\n * @param {object} [subProxy] - The proxy provided for scriptable options\n * @param {{scriptable: boolean, indexable: boolean, allKeys?: boolean}} [descriptorDefaults] - Defaults for descriptors\n * @private\n */\nexport function _attachContext(proxy, context, subProxy, descriptorDefaults) {\n  const cache = {\n    _cacheable: false,\n    _proxy: proxy,\n    _context: context,\n    _subProxy: subProxy,\n    _stack: new Set(),\n    _descriptors: _descriptors(proxy, descriptorDefaults),\n    setContext: (ctx) => _attachContext(proxy, ctx, subProxy, descriptorDefaults),\n    override: (scope) => _attachContext(proxy.override(scope), context, subProxy, descriptorDefaults)\n  };\n  return new Proxy(cache, {\n    /**\n     * A trap for the delete operator.\n     */\n    deleteProperty(target, prop) {\n      delete target[prop]; // remove from cache\n      delete proxy[prop]; // remove from proxy\n      return true;\n    },\n\n    /**\n     * A trap for getting property values.\n     */\n    get(target, prop, receiver) {\n      return _cached(target, prop,\n        () => _resolveWithContext(target, prop, receiver));\n    },\n\n    /**\n     * A trap for Object.getOwnPropertyDescriptor.\n     * Also used by Object.hasOwnProperty.\n     */\n    getOwnPropertyDescriptor(target, prop) {\n      return target._descriptors.allKeys\n        ? Reflect.has(proxy, prop) ? {enumerable: true, configurable: true} : undefined\n        : Reflect.getOwnPropertyDescriptor(proxy, prop);\n    },\n\n    /**\n     * A trap for Object.getPrototypeOf.\n     */\n    getPrototypeOf() {\n      return Reflect.getPrototypeOf(proxy);\n    },\n\n    /**\n     * A trap for the in operator.\n     */\n    has(target, prop) {\n      return Reflect.has(proxy, prop);\n    },\n\n    /**\n     * A trap for Object.getOwnPropertyNames and Object.getOwnPropertySymbols.\n     */\n    ownKeys() {\n      return Reflect.ownKeys(proxy);\n    },\n\n    /**\n     * A trap for setting property values.\n     */\n    set(target, prop, value) {\n      proxy[prop] = value; // set to proxy\n      delete target[prop]; // remove from cache\n      return true;\n    }\n  });\n}\n\n/**\n * @private\n */\nexport function _descriptors(proxy, defaults = {scriptable: true, indexable: true}) {\n  const {_scriptable = defaults.scriptable, _indexable = defaults.indexable, _allKeys = defaults.allKeys} = proxy;\n  return {\n    allKeys: _allKeys,\n    scriptable: _scriptable,\n    indexable: _indexable,\n    isScriptable: isFunction(_scriptable) ? _scriptable : () => _scriptable,\n    isIndexable: isFunction(_indexable) ? _indexable : () => _indexable\n  };\n}\n\nconst readKey = (prefix, name) => prefix ? prefix + _capitalize(name) : name;\nconst needsSubResolver = (prop, value) => isObject(value) && prop !== 'adapters' &&\n  (Object.getPrototypeOf(value) === null || value.constructor === Object);\n\nfunction _cached(target, prop, resolve) {\n  if (Object.prototype.hasOwnProperty.call(target, prop)) {\n    return target[prop];\n  }\n\n  const value = resolve();\n  // cache the resolved value\n  target[prop] = value;\n  return value;\n}\n\nfunction _resolveWithContext(target, prop, receiver) {\n  const {_proxy, _context, _subProxy, _descriptors: descriptors} = target;\n  let value = _proxy[prop]; // resolve from proxy\n\n  // resolve with context\n  if (isFunction(value) && descriptors.isScriptable(prop)) {\n    value = _resolveScriptable(prop, value, target, receiver);\n  }\n  if (isArray(value) && value.length) {\n    value = _resolveArray(prop, value, target, descriptors.isIndexable);\n  }\n  if (needsSubResolver(prop, value)) {\n    // if the resolved value is an object, create a sub resolver for it\n    value = _attachContext(value, _context, _subProxy && _subProxy[prop], descriptors);\n  }\n  return value;\n}\n\nfunction _resolveScriptable(prop, value, target, receiver) {\n  const {_proxy, _context, _subProxy, _stack} = target;\n  if (_stack.has(prop)) {\n    // @ts-ignore\n    throw new Error('Recursion detected: ' + Array.from(_stack).join('->') + '->' + prop);\n  }\n  _stack.add(prop);\n  value = value(_context, _subProxy || receiver);\n  _stack.delete(prop);\n  if (needsSubResolver(prop, value)) {\n    // When scriptable option returns an object, create a resolver on that.\n    value = createSubResolver(_proxy._scopes, _proxy, prop, value);\n  }\n  return value;\n}\n\nfunction _resolveArray(prop, value, target, isIndexable) {\n  const {_proxy, _context, _subProxy, _descriptors: descriptors} = target;\n\n  if (defined(_context.index) && isIndexable(prop)) {\n    value = value[_context.index % value.length];\n  } else if (isObject(value[0])) {\n    // Array of objects, return array or resolvers\n    const arr = value;\n    const scopes = _proxy._scopes.filter(s => s !== arr);\n    value = [];\n    for (const item of arr) {\n      const resolver = createSubResolver(scopes, _proxy, prop, item);\n      value.push(_attachContext(resolver, _context, _subProxy && _subProxy[prop], descriptors));\n    }\n  }\n  return value;\n}\n\nfunction resolveFallback(fallback, prop, value) {\n  return isFunction(fallback) ? fallback(prop, value) : fallback;\n}\n\nconst getScope = (key, parent) => key === true ? parent\n  : typeof key === 'string' ? resolveObjectKey(parent, key) : undefined;\n\nfunction addScopes(set, parentScopes, key, parentFallback, value) {\n  for (const parent of parentScopes) {\n    const scope = getScope(key, parent);\n    if (scope) {\n      set.add(scope);\n      const fallback = resolveFallback(scope._fallback, key, value);\n      if (defined(fallback) && fallback !== key && fallback !== parentFallback) {\n        // When we reach the descriptor that defines a new _fallback, return that.\n        // The fallback will resume to that new scope.\n        return fallback;\n      }\n    } else if (scope === false && defined(parentFallback) && key !== parentFallback) {\n      // Fallback to `false` results to `false`, when falling back to different key.\n      // For example `interaction` from `hover` or `plugins.tooltip` and `animation` from `animations`\n      return null;\n    }\n  }\n  return false;\n}\n\nfunction createSubResolver(parentScopes, resolver, prop, value) {\n  const rootScopes = resolver._rootScopes;\n  const fallback = resolveFallback(resolver._fallback, prop, value);\n  const allScopes = [...parentScopes, ...rootScopes];\n  const set = new Set();\n  set.add(value);\n  let key = addScopesFromKey(set, allScopes, prop, fallback || prop, value);\n  if (key === null) {\n    return false;\n  }\n  if (defined(fallback) && fallback !== prop) {\n    key = addScopesFromKey(set, allScopes, fallback, key, value);\n    if (key === null) {\n      return false;\n    }\n  }\n  return _createResolver(Array.from(set), [''], rootScopes, fallback,\n    () => subGetTarget(resolver, prop, value));\n}\n\nfunction addScopesFromKey(set, allScopes, key, fallback, item) {\n  while (key) {\n    key = addScopes(set, allScopes, key, fallback, item);\n  }\n  return key;\n}\n\nfunction subGetTarget(resolver, prop, value) {\n  const parent = resolver._getTarget();\n  if (!(prop in parent)) {\n    parent[prop] = {};\n  }\n  const target = parent[prop];\n  if (isArray(target) && isObject(value)) {\n    // For array of objects, the object is used to store updated values\n    return value;\n  }\n  return target;\n}\n\nfunction _resolveWithPrefixes(prop, prefixes, scopes, proxy) {\n  let value;\n  for (const prefix of prefixes) {\n    value = _resolve(readKey(prefix, prop), scopes);\n    if (defined(value)) {\n      return needsSubResolver(prop, value)\n        ? createSubResolver(scopes, proxy, prop, value)\n        : value;\n    }\n  }\n}\n\nfunction _resolve(key, scopes) {\n  for (const scope of scopes) {\n    if (!scope) {\n      continue;\n    }\n    const value = scope[key];\n    if (defined(value)) {\n      return value;\n    }\n  }\n}\n\nfunction getKeysFromAllScopes(target) {\n  let keys = target._keys;\n  if (!keys) {\n    keys = target._keys = resolveKeysFromAllScopes(target._scopes);\n  }\n  return keys;\n}\n\nfunction resolveKeysFromAllScopes(scopes) {\n  const set = new Set();\n  for (const scope of scopes) {\n    for (const key of Object.keys(scope).filter(k => !k.startsWith('_'))) {\n      set.add(key);\n    }\n  }\n  return Array.from(set);\n}\n\nexport function _parseObjectDataRadialScale(meta, data, start, count) {\n  const {iScale} = meta;\n  const {key = 'r'} = this._parsing;\n  const parsed = new Array(count);\n  let i, ilen, index, item;\n\n  for (i = 0, ilen = count; i < ilen; ++i) {\n    index = i + start;\n    item = data[index];\n    parsed[i] = {\n      r: iScale.parse(resolveObjectKey(item, key), index)\n    };\n  }\n  return parsed;\n}\n","import {almostEquals, distanceBetweenPoints, sign} from './helpers.math';\nimport {_isPointInArea} from './helpers.canvas';\n\nconst EPSILON = Number.EPSILON || 1e-14;\nconst getPoint = (points, i) => i < points.length && !points[i].skip && points[i];\nconst getValueAxis = (indexAxis) => indexAxis === 'x' ? 'y' : 'x';\n\nexport function splineCurve(firstPoint, middlePoint, afterPoint, t) {\n  // Props to Rob Spencer at scaled innovation for his post on splining between points\n  // http://scaledinnovation.com/analytics/splines/aboutSplines.html\n\n  // This function must also respect \"skipped\" points\n\n  const previous = firstPoint.skip ? middlePoint : firstPoint;\n  const current = middlePoint;\n  const next = afterPoint.skip ? middlePoint : afterPoint;\n  const d01 = distanceBetweenPoints(current, previous);\n  const d12 = distanceBetweenPoints(next, current);\n\n  let s01 = d01 / (d01 + d12);\n  let s12 = d12 / (d01 + d12);\n\n  // If all points are the same, s01 & s02 will be inf\n  s01 = isNaN(s01) ? 0 : s01;\n  s12 = isNaN(s12) ? 0 : s12;\n\n  const fa = t * s01; // scaling factor for triangle Ta\n  const fb = t * s12;\n\n  return {\n    previous: {\n      x: current.x - fa * (next.x - previous.x),\n      y: current.y - fa * (next.y - previous.y)\n    },\n    next: {\n      x: current.x + fb * (next.x - previous.x),\n      y: current.y + fb * (next.y - previous.y)\n    }\n  };\n}\n\n/**\n * Adjust tangents to ensure monotonic properties\n */\nfunction monotoneAdjust(points, deltaK, mK) {\n  const pointsLen = points.length;\n\n  let alphaK, betaK, tauK, squaredMagnitude, pointCurrent;\n  let pointAfter = getPoint(points, 0);\n  for (let i = 0; i < pointsLen - 1; ++i) {\n    pointCurrent = pointAfter;\n    pointAfter = getPoint(points, i + 1);\n    if (!pointCurrent || !pointAfter) {\n      continue;\n    }\n\n    if (almostEquals(deltaK[i], 0, EPSILON)) {\n      mK[i] = mK[i + 1] = 0;\n      continue;\n    }\n\n    alphaK = mK[i] / deltaK[i];\n    betaK = mK[i + 1] / deltaK[i];\n    squaredMagnitude = Math.pow(alphaK, 2) + Math.pow(betaK, 2);\n    if (squaredMagnitude <= 9) {\n      continue;\n    }\n\n    tauK = 3 / Math.sqrt(squaredMagnitude);\n    mK[i] = alphaK * tauK * deltaK[i];\n    mK[i + 1] = betaK * tauK * deltaK[i];\n  }\n}\n\nfunction monotoneCompute(points, mK, indexAxis = 'x') {\n  const valueAxis = getValueAxis(indexAxis);\n  const pointsLen = points.length;\n  let delta, pointBefore, pointCurrent;\n  let pointAfter = getPoint(points, 0);\n\n  for (let i = 0; i < pointsLen; ++i) {\n    pointBefore = pointCurrent;\n    pointCurrent = pointAfter;\n    pointAfter = getPoint(points, i + 1);\n    if (!pointCurrent) {\n      continue;\n    }\n\n    const iPixel = pointCurrent[indexAxis];\n    const vPixel = pointCurrent[valueAxis];\n    if (pointBefore) {\n      delta = (iPixel - pointBefore[indexAxis]) / 3;\n      pointCurrent[`cp1${indexAxis}`] = iPixel - delta;\n      pointCurrent[`cp1${valueAxis}`] = vPixel - delta * mK[i];\n    }\n    if (pointAfter) {\n      delta = (pointAfter[indexAxis] - iPixel) / 3;\n      pointCurrent[`cp2${indexAxis}`] = iPixel + delta;\n      pointCurrent[`cp2${valueAxis}`] = vPixel + delta * mK[i];\n    }\n  }\n}\n\n/**\n * This function calculates Bézier control points in a similar way than |splineCurve|,\n * but preserves monotonicity of the provided data and ensures no local extremums are added\n * between the dataset discrete points due to the interpolation.\n * See : https://en.wikipedia.org/wiki/Monotone_cubic_interpolation\n *\n * @param {{\n * x: number,\n * y: number,\n * skip?: boolean,\n * cp1x?: number,\n * cp1y?: number,\n * cp2x?: number,\n * cp2y?: number,\n * }[]} points\n * @param {string} indexAxis\n */\nexport function splineCurveMonotone(points, indexAxis = 'x') {\n  const valueAxis = getValueAxis(indexAxis);\n  const pointsLen = points.length;\n  const deltaK = Array(pointsLen).fill(0);\n  const mK = Array(pointsLen);\n\n  // Calculate slopes (deltaK) and initialize tangents (mK)\n  let i, pointBefore, pointCurrent;\n  let pointAfter = getPoint(points, 0);\n\n  for (i = 0; i < pointsLen; ++i) {\n    pointBefore = pointCurrent;\n    pointCurrent = pointAfter;\n    pointAfter = getPoint(points, i + 1);\n    if (!pointCurrent) {\n      continue;\n    }\n\n    if (pointAfter) {\n      const slopeDelta = pointAfter[indexAxis] - pointCurrent[indexAxis];\n\n      // In the case of two points that appear at the same x pixel, slopeDeltaX is 0\n      deltaK[i] = slopeDelta !== 0 ? (pointAfter[valueAxis] - pointCurrent[valueAxis]) / slopeDelta : 0;\n    }\n    mK[i] = !pointBefore ? deltaK[i]\n      : !pointAfter ? deltaK[i - 1]\n      : (sign(deltaK[i - 1]) !== sign(deltaK[i])) ? 0\n      : (deltaK[i - 1] + deltaK[i]) / 2;\n  }\n\n  monotoneAdjust(points, deltaK, mK);\n\n  monotoneCompute(points, mK, indexAxis);\n}\n\nfunction capControlPoint(pt, min, max) {\n  return Math.max(Math.min(pt, max), min);\n}\n\nfunction capBezierPoints(points, area) {\n  let i, ilen, point, inArea, inAreaPrev;\n  let inAreaNext = _isPointInArea(points[0], area);\n  for (i = 0, ilen = points.length; i < ilen; ++i) {\n    inAreaPrev = inArea;\n    inArea = inAreaNext;\n    inAreaNext = i < ilen - 1 && _isPointInArea(points[i + 1], area);\n    if (!inArea) {\n      continue;\n    }\n    point = points[i];\n    if (inAreaPrev) {\n      point.cp1x = capControlPoint(point.cp1x, area.left, area.right);\n      point.cp1y = capControlPoint(point.cp1y, area.top, area.bottom);\n    }\n    if (inAreaNext) {\n      point.cp2x = capControlPoint(point.cp2x, area.left, area.right);\n      point.cp2y = capControlPoint(point.cp2y, area.top, area.bottom);\n    }\n  }\n}\n\n/**\n * @private\n */\nexport function _updateBezierControlPoints(points, options, area, loop, indexAxis) {\n  let i, ilen, point, controlPoints;\n\n  // Only consider points that are drawn in case the spanGaps option is used\n  if (options.spanGaps) {\n    points = points.filter((pt) => !pt.skip);\n  }\n\n  if (options.cubicInterpolationMode === 'monotone') {\n    splineCurveMonotone(points, indexAxis);\n  } else {\n    let prev = loop ? points[points.length - 1] : points[0];\n    for (i = 0, ilen = points.length; i < ilen; ++i) {\n      point = points[i];\n      controlPoints = splineCurve(\n        prev,\n        point,\n        points[Math.min(i + 1, ilen - (loop ? 0 : 1)) % ilen],\n        options.tension\n      );\n      point.cp1x = controlPoints.previous.x;\n      point.cp1y = controlPoints.previous.y;\n      point.cp2x = controlPoints.next.x;\n      point.cp2y = controlPoints.next.y;\n      prev = point;\n    }\n  }\n\n  if (options.capBezierPoints) {\n    capBezierPoints(points, area);\n  }\n}\n","import {PI, TAU, HALF_PI} from './helpers.math';\n\nconst atEdge = (t) => t === 0 || t === 1;\nconst elasticIn = (t, s, p) => -(Math.pow(2, 10 * (t -= 1)) * Math.sin((t - s) * TAU / p));\nconst elasticOut = (t, s, p) => Math.pow(2, -10 * t) * Math.sin((t - s) * TAU / p) + 1;\n\n/**\n * Easing functions adapted from Robert Penner's easing equations.\n * @namespace Chart.helpers.easing.effects\n * @see http://www.robertpenner.com/easing/\n */\nconst effects = {\n  linear: t => t,\n\n  easeInQuad: t => t * t,\n\n  easeOutQuad: t => -t * (t - 2),\n\n  easeInOutQuad: t => ((t /= 0.5) < 1)\n    ? 0.5 * t * t\n    : -0.5 * ((--t) * (t - 2) - 1),\n\n  easeInCubic: t => t * t * t,\n\n  easeOutCubic: t => (t -= 1) * t * t + 1,\n\n  easeInOutCubic: t => ((t /= 0.5) < 1)\n    ? 0.5 * t * t * t\n    : 0.5 * ((t -= 2) * t * t + 2),\n\n  easeInQuart: t => t * t * t * t,\n\n  easeOutQuart: t => -((t -= 1) * t * t * t - 1),\n\n  easeInOutQuart: t => ((t /= 0.5) < 1)\n    ? 0.5 * t * t * t * t\n    : -0.5 * ((t -= 2) * t * t * t - 2),\n\n  easeInQuint: t => t * t * t * t * t,\n\n  easeOutQuint: t => (t -= 1) * t * t * t * t + 1,\n\n  easeInOutQuint: t => ((t /= 0.5) < 1)\n    ? 0.5 * t * t * t * t * t\n    : 0.5 * ((t -= 2) * t * t * t * t + 2),\n\n  easeInSine: t => -Math.cos(t * HALF_PI) + 1,\n\n  easeOutSine: t => Math.sin(t * HALF_PI),\n\n  easeInOutSine: t => -0.5 * (Math.cos(PI * t) - 1),\n\n  easeInExpo: t => (t === 0) ? 0 : Math.pow(2, 10 * (t - 1)),\n\n  easeOutExpo: t => (t === 1) ? 1 : -Math.pow(2, -10 * t) + 1,\n\n  easeInOutExpo: t => atEdge(t) ? t : t < 0.5\n    ? 0.5 * Math.pow(2, 10 * (t * 2 - 1))\n    : 0.5 * (-Math.pow(2, -10 * (t * 2 - 1)) + 2),\n\n  easeInCirc: t => (t >= 1) ? t : -(Math.sqrt(1 - t * t) - 1),\n\n  easeOutCirc: t => Math.sqrt(1 - (t -= 1) * t),\n\n  easeInOutCirc: t => ((t /= 0.5) < 1)\n    ? -0.5 * (Math.sqrt(1 - t * t) - 1)\n    : 0.5 * (Math.sqrt(1 - (t -= 2) * t) + 1),\n\n  easeInElastic: t => atEdge(t) ? t : elasticIn(t, 0.075, 0.3),\n\n  easeOutElastic: t => atEdge(t) ? t : elasticOut(t, 0.075, 0.3),\n\n  easeInOutElastic(t) {\n    const s = 0.1125;\n    const p = 0.45;\n    return atEdge(t) ? t :\n      t < 0.5\n        ? 0.5 * elasticIn(t * 2, s, p)\n        : 0.5 + 0.5 * elasticOut(t * 2 - 1, s, p);\n  },\n\n  easeInBack(t) {\n    const s = 1.70158;\n    return t * t * ((s + 1) * t - s);\n  },\n\n  easeOutBack(t) {\n    const s = 1.70158;\n    return (t -= 1) * t * ((s + 1) * t + s) + 1;\n  },\n\n  easeInOutBack(t) {\n    let s = 1.70158;\n    if ((t /= 0.5) < 1) {\n      return 0.5 * (t * t * (((s *= (1.525)) + 1) * t - s));\n    }\n    return 0.5 * ((t -= 2) * t * (((s *= (1.525)) + 1) * t + s) + 2);\n  },\n\n  easeInBounce: t => 1 - effects.easeOutBounce(1 - t),\n\n  easeOutBounce(t) {\n    const m = 7.5625;\n    const d = 2.75;\n    if (t < (1 / d)) {\n      return m * t * t;\n    }\n    if (t < (2 / d)) {\n      return m * (t -= (1.5 / d)) * t + 0.75;\n    }\n    if (t < (2.5 / d)) {\n      return m * (t -= (2.25 / d)) * t + 0.9375;\n    }\n    return m * (t -= (2.625 / d)) * t + 0.984375;\n  },\n\n  easeInOutBounce: t => (t < 0.5)\n    ? effects.easeInBounce(t * 2) * 0.5\n    : effects.easeOutBounce(t * 2 - 1) * 0.5 + 0.5,\n};\n\nexport default effects;\n","/**\n * @private\n */\nexport function _pointInLine(p1, p2, t, mode) { // eslint-disable-line no-unused-vars\n  return {\n    x: p1.x + t * (p2.x - p1.x),\n    y: p1.y + t * (p2.y - p1.y)\n  };\n}\n\n/**\n * @private\n */\nexport function _steppedInterpolation(p1, p2, t, mode) {\n  return {\n    x: p1.x + t * (p2.x - p1.x),\n    y: mode === 'middle' ? t < 0.5 ? p1.y : p2.y\n    : mode === 'after' ? t < 1 ? p1.y : p2.y\n    : t > 0 ? p2.y : p1.y\n  };\n}\n\n/**\n * @private\n */\nexport function _bezierInterpolation(p1, p2, t, mode) { // eslint-disable-line no-unused-vars\n  const cp1 = {x: p1.cp2x, y: p1.cp2y};\n  const cp2 = {x: p2.cp1x, y: p2.cp1y};\n  const a = _pointInLine(p1, cp1, t);\n  const b = _pointInLine(cp1, cp2, t);\n  const c = _pointInLine(cp2, p2, t);\n  const d = _pointInLine(a, b, t);\n  const e = _pointInLine(b, c, t);\n  return _pointInLine(d, e, t);\n}\n","import defaults from '../core/core.defaults';\nimport {isArray, isObject, toDimension, valueOrDefault} from './helpers.core';\nimport {toFontString} from './helpers.canvas';\n\nconst LINE_HEIGHT = new RegExp(/^(normal|(\\d+(?:\\.\\d+)?)(px|em|%)?)$/);\nconst FONT_STYLE = new RegExp(/^(normal|italic|initial|inherit|unset|(oblique( -?[0-9]?[0-9]deg)?))$/);\n\n/**\n * @alias Chart.helpers.options\n * @namespace\n */\n/**\n * Converts the given line height `value` in pixels for a specific font `size`.\n * @param {number|string} value - The lineHeight to parse (eg. 1.6, '14px', '75%', '1.6em').\n * @param {number} size - The font size (in pixels) used to resolve relative `value`.\n * @returns {number} The effective line height in pixels (size * 1.2 if value is invalid).\n * @see https://developer.mozilla.org/en-US/docs/Web/CSS/line-height\n * @since 2.7.0\n */\nexport function toLineHeight(value, size) {\n  const matches = ('' + value).match(LINE_HEIGHT);\n  if (!matches || matches[1] === 'normal') {\n    return size * 1.2;\n  }\n\n  value = +matches[2];\n\n  switch (matches[3]) {\n  case 'px':\n    return value;\n  case '%':\n    value /= 100;\n    break;\n  default:\n    break;\n  }\n\n  return size * value;\n}\n\nconst numberOrZero = v => +v || 0;\n\nexport function _readValueToProps(value, props) {\n  const ret = {};\n  const objProps = isObject(props);\n  const keys = objProps ? Object.keys(props) : props;\n  const read = isObject(value)\n    ? objProps\n      ? prop => valueOrDefault(value[prop], value[props[prop]])\n      : prop => value[prop]\n    : () => value;\n\n  for (const prop of keys) {\n    ret[prop] = numberOrZero(read(prop));\n  }\n  return ret;\n}\n\n/**\n * Converts the given value into a TRBL object.\n * @param {number|object} value - If a number, set the value to all TRBL component,\n *  else, if an object, use defined properties and sets undefined ones to 0.\n *  x / y are shorthands for same value for left/right and top/bottom.\n * @returns {object} The padding values (top, right, bottom, left)\n * @since 3.0.0\n */\nexport function toTRBL(value) {\n  return _readValueToProps(value, {top: 'y', right: 'x', bottom: 'y', left: 'x'});\n}\n\n/**\n * Converts the given value into a TRBL corners object (similar with css border-radius).\n * @param {number|object} value - If a number, set the value to all TRBL corner components,\n *  else, if an object, use defined properties and sets undefined ones to 0.\n * @returns {object} The TRBL corner values (topLeft, topRight, bottomLeft, bottomRight)\n * @since 3.0.0\n */\nexport function toTRBLCorners(value) {\n  return _readValueToProps(value, ['topLeft', 'topRight', 'bottomLeft', 'bottomRight']);\n}\n\n/**\n * Converts the given value into a padding object with pre-computed width/height.\n * @param {number|object} value - If a number, set the value to all TRBL component,\n *  else, if an object, use defined properties and sets undefined ones to 0.\n *  x / y are shorthands for same value for left/right and top/bottom.\n * @returns {object} The padding values (top, right, bottom, left, width, height)\n * @since 2.7.0\n */\nexport function toPadding(value) {\n  const obj = toTRBL(value);\n\n  obj.width = obj.left + obj.right;\n  obj.height = obj.top + obj.bottom;\n\n  return obj;\n}\n\n\n/**\n * Parses font options and returns the font object.\n * @param {object} options - A object that contains font options to be parsed.\n * @param {object} [fallback] - A object that contains fallback font options.\n * @return {object} The font object.\n * @private\n */\nexport function toFont(options, fallback) {\n  options = options || {};\n  fallback = fallback || defaults.font;\n\n  let size = valueOrDefault(options.size, fallback.size);\n\n  if (typeof size === 'string') {\n    size = parseInt(size, 10);\n  }\n  let style = valueOrDefault(options.style, fallback.style);\n  if (style && !('' + style).match(FONT_STYLE)) {\n    console.warn('Invalid font style specified: \"' + style + '\"');\n    style = '';\n  }\n\n  const font = {\n    family: valueOrDefault(options.family, fallback.family),\n    lineHeight: toLineHeight(valueOrDefault(options.lineHeight, fallback.lineHeight), size),\n    size,\n    style,\n    weight: valueOrDefault(options.weight, fallback.weight),\n    string: ''\n  };\n\n  font.string = toFontString(font);\n  return font;\n}\n\n/**\n * Evaluates the given `inputs` sequentially and returns the first defined value.\n * @param {Array} inputs - An array of values, falling back to the last value.\n * @param {object} [context] - If defined and the current value is a function, the value\n * is called with `context` as first argument and the result becomes the new input.\n * @param {number} [index] - If defined and the current value is an array, the value\n * at `index` become the new input.\n * @param {object} [info] - object to return information about resolution in\n * @param {boolean} [info.cacheable] - Will be set to `false` if option is not cacheable.\n * @since 2.7.0\n */\nexport function resolve(inputs, context, index, info) {\n  let cacheable = true;\n  let i, ilen, value;\n\n  for (i = 0, ilen = inputs.length; i < ilen; ++i) {\n    value = inputs[i];\n    if (value === undefined) {\n      continue;\n    }\n    if (context !== undefined && typeof value === 'function') {\n      value = value(context);\n      cacheable = false;\n    }\n    if (index !== undefined && isArray(value)) {\n      value = value[index % value.length];\n      cacheable = false;\n    }\n    if (value !== undefined) {\n      if (info && !cacheable) {\n        info.cacheable = false;\n      }\n      return value;\n    }\n  }\n}\n\n/**\n * @param {{min: number, max: number}} minmax\n * @param {number|string} grace\n * @param {boolean} beginAtZero\n * @private\n */\nexport function _addGrace(minmax, grace, beginAtZero) {\n  const {min, max} = minmax;\n  const change = toDimension(grace, (max - min) / 2);\n  const keepZero = (value, add) => beginAtZero && value === 0 ? 0 : value + add;\n  return {\n    min: keepZero(min, -Math.abs(change)),\n    max: keepZero(max, change)\n  };\n}\n\n/**\n * Create a context inheriting parentContext\n * @param {object|null} parentContext\n * @param {object} context\n * @returns {object}\n */\nexport function createContext(parentContext, context) {\n  return Object.assign(Object.create(parentContext), context);\n}\n","const getRightToLeftAdapter = function(rectX, width) {\n  return {\n    x(x) {\n      return rectX + rectX + width - x;\n    },\n    setWidth(w) {\n      width = w;\n    },\n    textAlign(align) {\n      if (align === 'center') {\n        return align;\n      }\n      return align === 'right' ? 'left' : 'right';\n    },\n    xPlus(x, value) {\n      return x - value;\n    },\n    leftForLtr(x, itemWidth) {\n      return x - itemWidth;\n    },\n  };\n};\n\nconst getLeftToRightAdapter = function() {\n  return {\n    x(x) {\n      return x;\n    },\n    setWidth(w) { // eslint-disable-line no-unused-vars\n    },\n    textAlign(align) {\n      return align;\n    },\n    xPlus(x, value) {\n      return x + value;\n    },\n    leftForLtr(x, _itemWidth) { // eslint-disable-line no-unused-vars\n      return x;\n    },\n  };\n};\n\nexport function getRtlAdapter(rtl, rectX, width) {\n  return rtl ? getRightToLeftAdapter(rectX, width) : getLeftToRightAdapter();\n}\n\nexport function overrideTextDirection(ctx, direction) {\n  let style, original;\n  if (direction === 'ltr' || direction === 'rtl') {\n    style = ctx.canvas.style;\n    original = [\n      style.getPropertyValue('direction'),\n      style.getPropertyPriority('direction'),\n    ];\n\n    style.setProperty('direction', direction, 'important');\n    ctx.prevTextDirection = original;\n  }\n}\n\nexport function restoreTextDirection(ctx, original) {\n  if (original !== undefined) {\n    delete ctx.prevTextDirection;\n    ctx.canvas.style.setProperty('direction', original[0], original[1]);\n  }\n}\n","import {_angleBetween, _angleDiff, _isBetween, _normalizeAngle} from './helpers.math';\nimport {createContext} from './helpers.options';\n\n/**\n * @typedef { import(\"../elements/element.line\").default } LineElement\n * @typedef { import(\"../elements/element.point\").default } PointElement\n * @typedef {{start: number, end: number, loop: boolean, style?: any}} Segment\n */\n\nfunction propertyFn(property) {\n  if (property === 'angle') {\n    return {\n      between: _angleBetween,\n      compare: _angleDiff,\n      normalize: _normalizeAngle,\n    };\n  }\n  return {\n    between: _isBetween,\n    compare: (a, b) => a - b,\n    normalize: x => x\n  };\n}\n\nfunction normalizeSegment({start, end, count, loop, style}) {\n  return {\n    start: start % count,\n    end: end % count,\n    loop: loop && (end - start + 1) % count === 0,\n    style\n  };\n}\n\nfunction getSegment(segment, points, bounds) {\n  const {property, start: startBound, end: endBound} = bounds;\n  const {between, normalize} = propertyFn(property);\n  const count = points.length;\n  // eslint-disable-next-line prefer-const\n  let {start, end, loop} = segment;\n  let i, ilen;\n\n  if (loop) {\n    start += count;\n    end += count;\n    for (i = 0, ilen = count; i < ilen; ++i) {\n      if (!between(normalize(points[start % count][property]), startBound, endBound)) {\n        break;\n      }\n      start--;\n      end--;\n    }\n    start %= count;\n    end %= count;\n  }\n\n  if (end < start) {\n    end += count;\n  }\n  return {start, end, loop, style: segment.style};\n}\n\n/**\n * Returns the sub-segment(s) of a line segment that fall in the given bounds\n * @param {object} segment\n * @param {number} segment.start - start index of the segment, referring the points array\n * @param {number} segment.end - end index of the segment, referring the points array\n * @param {boolean} segment.loop - indicates that the segment is a loop\n * @param {object} [segment.style] - segment style\n * @param {PointElement[]} points - the points that this segment refers to\n * @param {object} [bounds]\n * @param {string} bounds.property - the property of a `PointElement` we are bounding. `x`, `y` or `angle`.\n * @param {number} bounds.start - start value of the property\n * @param {number} bounds.end - end value of the property\n * @private\n **/\nexport function _boundSegment(segment, points, bounds) {\n  if (!bounds) {\n    return [segment];\n  }\n\n  const {property, start: startBound, end: endBound} = bounds;\n  const count = points.length;\n  const {compare, between, normalize} = propertyFn(property);\n  const {start, end, loop, style} = getSegment(segment, points, bounds);\n\n  const result = [];\n  let inside = false;\n  let subStart = null;\n  let value, point, prevValue;\n\n  const startIsBefore = () => between(startBound, prevValue, value) && compare(startBound, prevValue) !== 0;\n  const endIsBefore = () => compare(endBound, value) === 0 || between(endBound, prevValue, value);\n  const shouldStart = () => inside || startIsBefore();\n  const shouldStop = () => !inside || endIsBefore();\n\n  for (let i = start, prev = start; i <= end; ++i) {\n    point = points[i % count];\n\n    if (point.skip) {\n      continue;\n    }\n\n    value = normalize(point[property]);\n\n    if (value === prevValue) {\n      continue;\n    }\n\n    inside = between(value, startBound, endBound);\n\n    if (subStart === null && shouldStart()) {\n      subStart = compare(value, startBound) === 0 ? i : prev;\n    }\n\n    if (subStart !== null && shouldStop()) {\n      result.push(normalizeSegment({start: subStart, end: i, loop, count, style}));\n      subStart = null;\n    }\n    prev = i;\n    prevValue = value;\n  }\n\n  if (subStart !== null) {\n    result.push(normalizeSegment({start: subStart, end, loop, count, style}));\n  }\n\n  return result;\n}\n\n\n/**\n * Returns the segments of the line that are inside given bounds\n * @param {LineElement} line\n * @param {object} [bounds]\n * @param {string} bounds.property - the property we are bounding with. `x`, `y` or `angle`.\n * @param {number} bounds.start - start value of the `property`\n * @param {number} bounds.end - end value of the `property`\n * @private\n */\nexport function _boundSegments(line, bounds) {\n  const result = [];\n  const segments = line.segments;\n\n  for (let i = 0; i < segments.length; i++) {\n    const sub = _boundSegment(segments[i], line.points, bounds);\n    if (sub.length) {\n      result.push(...sub);\n    }\n  }\n  return result;\n}\n\n/**\n * Find start and end index of a line.\n */\nfunction findStartAndEnd(points, count, loop, spanGaps) {\n  let start = 0;\n  let end = count - 1;\n\n  if (loop && !spanGaps) {\n    // loop and not spanning gaps, first find a gap to start from\n    while (start < count && !points[start].skip) {\n      start++;\n    }\n  }\n\n  // find first non skipped point (after the first gap possibly)\n  while (start < count && points[start].skip) {\n    start++;\n  }\n\n  // if we looped to count, start needs to be 0\n  start %= count;\n\n  if (loop) {\n    // loop will go past count, if start > 0\n    end += start;\n  }\n\n  while (end > start && points[end % count].skip) {\n    end--;\n  }\n\n  // end could be more than count, normalize\n  end %= count;\n\n  return {start, end};\n}\n\n/**\n * Compute solid segments from Points, when spanGaps === false\n * @param {PointElement[]} points - the points\n * @param {number} start - start index\n * @param {number} max - max index (can go past count on a loop)\n * @param {boolean} loop - boolean indicating that this would be a loop if no gaps are found\n */\nfunction solidSegments(points, start, max, loop) {\n  const count = points.length;\n  const result = [];\n  let last = start;\n  let prev = points[start];\n  let end;\n\n  for (end = start + 1; end <= max; ++end) {\n    const cur = points[end % count];\n    if (cur.skip || cur.stop) {\n      if (!prev.skip) {\n        loop = false;\n        result.push({start: start % count, end: (end - 1) % count, loop});\n        // @ts-ignore\n        start = last = cur.stop ? end : null;\n      }\n    } else {\n      last = end;\n      if (prev.skip) {\n        start = end;\n      }\n    }\n    prev = cur;\n  }\n\n  if (last !== null) {\n    result.push({start: start % count, end: last % count, loop});\n  }\n\n  return result;\n}\n\n/**\n * Compute the continuous segments that define the whole line\n * There can be skipped points within a segment, if spanGaps is true.\n * @param {LineElement} line\n * @param {object} [segmentOptions]\n * @return {Segment[]}\n * @private\n */\nexport function _computeSegments(line, segmentOptions) {\n  const points = line.points;\n  const spanGaps = line.options.spanGaps;\n  const count = points.length;\n\n  if (!count) {\n    return [];\n  }\n\n  const loop = !!line._loop;\n  const {start, end} = findStartAndEnd(points, count, loop, spanGaps);\n\n  if (spanGaps === true) {\n    return splitByStyles(line, [{start, end, loop}], points, segmentOptions);\n  }\n\n  const max = end < start ? end + count : end;\n  const completeLoop = !!line._fullLoop && start === 0 && end === count - 1;\n  return splitByStyles(line, solidSegments(points, start, max, completeLoop), points, segmentOptions);\n}\n\n/**\n * @param {Segment[]} segments\n * @param {PointElement[]} points\n * @param {object} [segmentOptions]\n * @return {Segment[]}\n */\nfunction splitByStyles(line, segments, points, segmentOptions) {\n  if (!segmentOptions || !segmentOptions.setContext || !points) {\n    return segments;\n  }\n  return doSplitByStyles(line, segments, points, segmentOptions);\n}\n\n/**\n * @param {LineElement} line\n * @param {Segment[]} segments\n * @param {PointElement[]} points\n * @param {object} [segmentOptions]\n * @return {Segment[]}\n */\nfunction doSplitByStyles(line, segments, points, segmentOptions) {\n  const chartContext = line._chart.getContext();\n  const baseStyle = readStyle(line.options);\n  const {_datasetIndex: datasetIndex, options: {spanGaps}} = line;\n  const count = points.length;\n  const result = [];\n  let prevStyle = baseStyle;\n  let start = segments[0].start;\n  let i = start;\n\n  function addStyle(s, e, l, st) {\n    const dir = spanGaps ? -1 : 1;\n    if (s === e) {\n      return;\n    }\n    // Style can not start/end on a skipped point, adjust indices accordingly\n    s += count;\n    while (points[s % count].skip) {\n      s -= dir;\n    }\n    while (points[e % count].skip) {\n      e += dir;\n    }\n    if (s % count !== e % count) {\n      result.push({start: s % count, end: e % count, loop: l, style: st});\n      prevStyle = st;\n      start = e % count;\n    }\n  }\n\n  for (const segment of segments) {\n    start = spanGaps ? start : segment.start;\n    let prev = points[start % count];\n    let style;\n    for (i = start + 1; i <= segment.end; i++) {\n      const pt = points[i % count];\n      style = readStyle(segmentOptions.setContext(createContext(chartContext, {\n        type: 'segment',\n        p0: prev,\n        p1: pt,\n        p0DataIndex: (i - 1) % count,\n        p1DataIndex: i % count,\n        datasetIndex\n      })));\n      if (styleChanged(style, prevStyle)) {\n        addStyle(start, i - 1, segment.loop, prevStyle);\n      }\n      prev = pt;\n      prevStyle = style;\n    }\n    if (start < i - 1) {\n      addStyle(start, i - 1, segment.loop, prevStyle);\n    }\n  }\n\n  return result;\n}\n\nfunction readStyle(options) {\n  return {\n    backgroundColor: options.backgroundColor,\n    borderCapStyle: options.borderCapStyle,\n    borderDash: options.borderDash,\n    borderDashOffset: options.borderDashOffset,\n    borderJoinStyle: options.borderJoinStyle,\n    borderWidth: options.borderWidth,\n    borderColor: options.borderColor\n  };\n}\n\nfunction styleChanged(style, prevStyle) {\n  return prevStyle && JSON.stringify(style) !== JSON.stringify(prevStyle);\n}\n","import {_lookupByKey, _rlookupByKey} from '../helpers/helpers.collection';\nimport {getRelativePosition} from '../helpers/helpers.dom';\nimport {_angleBetween, getAngleFromPoint} from '../helpers/helpers.math';\nimport {_isPointInArea} from '../helpers';\n\n/**\n * @typedef { import(\"./core.controller\").default } Chart\n * @typedef { import(\"../../types\").ChartEvent } ChartEvent\n * @typedef {{axis?: string, intersect?: boolean, includeInvisible?: boolean}} InteractionOptions\n * @typedef {{datasetIndex: number, index: number, element: import(\"./core.element\").default}} InteractionItem\n * @typedef { import(\"../../types\").Point } Point\n */\n\n/**\n * Helper function to do binary search when possible\n * @param {object} metaset - the dataset meta\n * @param {string} axis - the axis mode. x|y|xy|r\n * @param {number} value - the value to find\n * @param {boolean} [intersect] - should the element intersect\n * @returns {{lo:number, hi:number}} indices to search data array between\n */\nfunction binarySearch(metaset, axis, value, intersect) {\n  const {controller, data, _sorted} = metaset;\n  const iScale = controller._cachedMeta.iScale;\n  if (iScale && axis === iScale.axis && axis !== 'r' && _sorted && data.length) {\n    const lookupMethod = iScale._reversePixels ? _rlookupByKey : _lookupByKey;\n    if (!intersect) {\n      return lookupMethod(data, axis, value);\n    } else if (controller._sharedOptions) {\n      // _sharedOptions indicates that each element has equal options -> equal proportions\n      // So we can do a ranged binary search based on the range of first element and\n      // be confident to get the full range of indices that can intersect with the value.\n      const el = data[0];\n      const range = typeof el.getRange === 'function' && el.getRange(axis);\n      if (range) {\n        const start = lookupMethod(data, axis, value - range);\n        const end = lookupMethod(data, axis, value + range);\n        return {lo: start.lo, hi: end.hi};\n      }\n    }\n  }\n  // Default to all elements, when binary search can not be used.\n  return {lo: 0, hi: data.length - 1};\n}\n\n/**\n * Helper function to select candidate elements for interaction\n * @param {Chart} chart - the chart\n * @param {string} axis - the axis mode. x|y|xy|r\n * @param {Point} position - the point to be nearest to, in relative coordinates\n * @param {function} handler - the callback to execute for each visible item\n * @param {boolean} [intersect] - consider intersecting items\n */\nfunction evaluateInteractionItems(chart, axis, position, handler, intersect) {\n  const metasets = chart.getSortedVisibleDatasetMetas();\n  const value = position[axis];\n  for (let i = 0, ilen = metasets.length; i < ilen; ++i) {\n    const {index, data} = metasets[i];\n    const {lo, hi} = binarySearch(metasets[i], axis, value, intersect);\n    for (let j = lo; j <= hi; ++j) {\n      const element = data[j];\n      if (!element.skip) {\n        handler(element, index, j);\n      }\n    }\n  }\n}\n\n/**\n * Get a distance metric function for two points based on the\n * axis mode setting\n * @param {string} axis - the axis mode. x|y|xy|r\n */\nfunction getDistanceMetricForAxis(axis) {\n  const useX = axis.indexOf('x') !== -1;\n  const useY = axis.indexOf('y') !== -1;\n\n  return function(pt1, pt2) {\n    const deltaX = useX ? Math.abs(pt1.x - pt2.x) : 0;\n    const deltaY = useY ? Math.abs(pt1.y - pt2.y) : 0;\n    return Math.sqrt(Math.pow(deltaX, 2) + Math.pow(deltaY, 2));\n  };\n}\n\n/**\n * Helper function to get the items that intersect the event position\n * @param {Chart} chart - the chart\n * @param {Point} position - the point to be nearest to, in relative coordinates\n * @param {string} axis - the axis mode. x|y|xy|r\n * @param {boolean} [useFinalPosition] - use the element's animation target instead of current position\n * @param {boolean} [includeInvisible] - include invisible points that are outside of the chart area\n * @return {InteractionItem[]} the nearest items\n */\nfunction getIntersectItems(chart, position, axis, useFinalPosition, includeInvisible) {\n  const items = [];\n\n  if (!includeInvisible && !chart.isPointInArea(position)) {\n    return items;\n  }\n\n  const evaluationFunc = function(element, datasetIndex, index) {\n    if (!includeInvisible && !_isPointInArea(element, chart.chartArea, 0)) {\n      return;\n    }\n    if (element.inRange(position.x, position.y, useFinalPosition)) {\n      items.push({element, datasetIndex, index});\n    }\n  };\n\n  evaluateInteractionItems(chart, axis, position, evaluationFunc, true);\n  return items;\n}\n\n/**\n * Helper function to get the items nearest to the event position for a radial chart\n * @param {Chart} chart - the chart to look at elements from\n * @param {Point} position - the point to be nearest to, in relative coordinates\n * @param {string} axis - the axes along which to measure distance\n * @param {boolean} [useFinalPosition] - use the element's animation target instead of current position\n * @return {InteractionItem[]} the nearest items\n */\nfunction getNearestRadialItems(chart, position, axis, useFinalPosition) {\n  let items = [];\n\n  function evaluationFunc(element, datasetIndex, index) {\n    const {startAngle, endAngle} = element.getProps(['startAngle', 'endAngle'], useFinalPosition);\n    const {angle} = getAngleFromPoint(element, {x: position.x, y: position.y});\n\n    if (_angleBetween(angle, startAngle, endAngle)) {\n      items.push({element, datasetIndex, index});\n    }\n  }\n\n  evaluateInteractionItems(chart, axis, position, evaluationFunc);\n  return items;\n}\n\n/**\n * Helper function to get the items nearest to the event position for a cartesian chart\n * @param {Chart} chart - the chart to look at elements from\n * @param {Point} position - the point to be nearest to, in relative coordinates\n * @param {string} axis - the axes along which to measure distance\n * @param {boolean} [intersect] - if true, only consider items that intersect the position\n * @param {boolean} [useFinalPosition] - use the element's animation target instead of current position\n * @param {boolean} [includeInvisible] - include invisible points that are outside of the chart area\n * @return {InteractionItem[]} the nearest items\n */\nfunction getNearestCartesianItems(chart, position, axis, intersect, useFinalPosition, includeInvisible) {\n  let items = [];\n  const distanceMetric = getDistanceMetricForAxis(axis);\n  let minDistance = Number.POSITIVE_INFINITY;\n\n  function evaluationFunc(element, datasetIndex, index) {\n    const inRange = element.inRange(position.x, position.y, useFinalPosition);\n    if (intersect && !inRange) {\n      return;\n    }\n\n    const center = element.getCenterPoint(useFinalPosition);\n    const pointInArea = !!includeInvisible || chart.isPointInArea(center);\n    if (!pointInArea && !inRange) {\n      return;\n    }\n\n    const distance = distanceMetric(position, center);\n    if (distance < minDistance) {\n      items = [{element, datasetIndex, index}];\n      minDistance = distance;\n    } else if (distance === minDistance) {\n      // Can have multiple items at the same distance in which case we sort by size\n      items.push({element, datasetIndex, index});\n    }\n  }\n\n  evaluateInteractionItems(chart, axis, position, evaluationFunc);\n  return items;\n}\n\n/**\n * Helper function to get the items nearest to the event position considering all visible items in the chart\n * @param {Chart} chart - the chart to look at elements from\n * @param {Point} position - the point to be nearest to, in relative coordinates\n * @param {string} axis - the axes along which to measure distance\n * @param {boolean} [intersect] - if true, only consider items that intersect the position\n * @param {boolean} [useFinalPosition] - use the element's animation target instead of current position\n * @param {boolean} [includeInvisible] - include invisible points that are outside of the chart area\n * @return {InteractionItem[]} the nearest items\n */\nfunction getNearestItems(chart, position, axis, intersect, useFinalPosition, includeInvisible) {\n  if (!includeInvisible && !chart.isPointInArea(position)) {\n    return [];\n  }\n\n  return axis === 'r' && !intersect\n    ? getNearestRadialItems(chart, position, axis, useFinalPosition)\n    : getNearestCartesianItems(chart, position, axis, intersect, useFinalPosition, includeInvisible);\n}\n\n/**\n * Helper function to get the items matching along the given X or Y axis\n * @param {Chart} chart - the chart to look at elements from\n * @param {Point} position - the point to be nearest to, in relative coordinates\n * @param {string} axis - the axis to match\n * @param {boolean} [intersect] - if true, only consider items that intersect the position\n * @param {boolean} [useFinalPosition] - use the element's animation target instead of current position\n * @return {InteractionItem[]} the nearest items\n */\nfunction getAxisItems(chart, position, axis, intersect, useFinalPosition) {\n  const items = [];\n  const rangeMethod = axis === 'x' ? 'inXRange' : 'inYRange';\n  let intersectsItem = false;\n\n  evaluateInteractionItems(chart, axis, position, (element, datasetIndex, index) => {\n    if (element[rangeMethod](position[axis], useFinalPosition)) {\n      items.push({element, datasetIndex, index});\n      intersectsItem = intersectsItem || element.inRange(position.x, position.y, useFinalPosition);\n    }\n  });\n\n  // If we want to trigger on an intersect and we don't have any items\n  // that intersect the position, return nothing\n  if (intersect && !intersectsItem) {\n    return [];\n  }\n  return items;\n}\n\n/**\n * Contains interaction related functions\n * @namespace Chart.Interaction\n */\nexport default {\n  // Part of the public API to facilitate developers creating their own modes\n  evaluateInteractionItems,\n\n  // Helper function for different modes\n  modes: {\n    /**\n\t\t * Returns items at the same index. If the options.intersect parameter is true, we only return items if we intersect something\n\t\t * If the options.intersect mode is false, we find the nearest item and return the items at the same index as that item\n\t\t * @function Chart.Interaction.modes.index\n\t\t * @since v2.4.0\n\t\t * @param {Chart} chart - the chart we are returning items from\n\t\t * @param {Event} e - the event we are find things at\n\t\t * @param {InteractionOptions} options - options to use\n\t\t * @param {boolean} [useFinalPosition] - use final element position (animation target)\n\t\t * @return {InteractionItem[]} - items that are found\n\t\t */\n    index(chart, e, options, useFinalPosition) {\n      const position = getRelativePosition(e, chart);\n      // Default axis for index mode is 'x' to match old behaviour\n      const axis = options.axis || 'x';\n      const includeInvisible = options.includeInvisible || false;\n      const items = options.intersect\n        ? getIntersectItems(chart, position, axis, useFinalPosition, includeInvisible)\n        : getNearestItems(chart, position, axis, false, useFinalPosition, includeInvisible);\n      const elements = [];\n\n      if (!items.length) {\n        return [];\n      }\n\n      chart.getSortedVisibleDatasetMetas().forEach((meta) => {\n        const index = items[0].index;\n        const element = meta.data[index];\n\n        // don't count items that are skipped (null data)\n        if (element && !element.skip) {\n          elements.push({element, datasetIndex: meta.index, index});\n        }\n      });\n\n      return elements;\n    },\n\n    /**\n\t\t * Returns items in the same dataset. If the options.intersect parameter is true, we only return items if we intersect something\n\t\t * If the options.intersect is false, we find the nearest item and return the items in that dataset\n\t\t * @function Chart.Interaction.modes.dataset\n\t\t * @param {Chart} chart - the chart we are returning items from\n\t\t * @param {Event} e - the event we are find things at\n\t\t * @param {InteractionOptions} options - options to use\n\t\t * @param {boolean} [useFinalPosition] - use final element position (animation target)\n\t\t * @return {InteractionItem[]} - items that are found\n\t\t */\n    dataset(chart, e, options, useFinalPosition) {\n      const position = getRelativePosition(e, chart);\n      const axis = options.axis || 'xy';\n      const includeInvisible = options.includeInvisible || false;\n      let items = options.intersect\n        ? getIntersectItems(chart, position, axis, useFinalPosition, includeInvisible) :\n        getNearestItems(chart, position, axis, false, useFinalPosition, includeInvisible);\n\n      if (items.length > 0) {\n        const datasetIndex = items[0].datasetIndex;\n        const data = chart.getDatasetMeta(datasetIndex).data;\n        items = [];\n        for (let i = 0; i < data.length; ++i) {\n          items.push({element: data[i], datasetIndex, index: i});\n        }\n      }\n\n      return items;\n    },\n\n    /**\n\t\t * Point mode returns all elements that hit test based on the event position\n\t\t * of the event\n\t\t * @function Chart.Interaction.modes.intersect\n\t\t * @param {Chart} chart - the chart we are returning items from\n\t\t * @param {Event} e - the event we are find things at\n\t\t * @param {InteractionOptions} options - options to use\n\t\t * @param {boolean} [useFinalPosition] - use final element position (animation target)\n\t\t * @return {InteractionItem[]} - items that are found\n\t\t */\n    point(chart, e, options, useFinalPosition) {\n      const position = getRelativePosition(e, chart);\n      const axis = options.axis || 'xy';\n      const includeInvisible = options.includeInvisible || false;\n      return getIntersectItems(chart, position, axis, useFinalPosition, includeInvisible);\n    },\n\n    /**\n\t\t * nearest mode returns the element closest to the point\n\t\t * @function Chart.Interaction.modes.intersect\n\t\t * @param {Chart} chart - the chart we are returning items from\n\t\t * @param {Event} e - the event we are find things at\n\t\t * @param {InteractionOptions} options - options to use\n\t\t * @param {boolean} [useFinalPosition] - use final element position (animation target)\n\t\t * @return {InteractionItem[]} - items that are found\n\t\t */\n    nearest(chart, e, options, useFinalPosition) {\n      const position = getRelativePosition(e, chart);\n      const axis = options.axis || 'xy';\n      const includeInvisible = options.includeInvisible || false;\n      return getNearestItems(chart, position, axis, options.intersect, useFinalPosition, includeInvisible);\n    },\n\n    /**\n\t\t * x mode returns the elements that hit-test at the current x coordinate\n\t\t * @function Chart.Interaction.modes.x\n\t\t * @param {Chart} chart - the chart we are returning items from\n\t\t * @param {Event} e - the event we are find things at\n\t\t * @param {InteractionOptions} options - options to use\n\t\t * @param {boolean} [useFinalPosition] - use final element position (animation target)\n\t\t * @return {InteractionItem[]} - items that are found\n\t\t */\n    x(chart, e, options, useFinalPosition) {\n      const position = getRelativePosition(e, chart);\n      return getAxisItems(chart, position, 'x', options.intersect, useFinalPosition);\n    },\n\n    /**\n\t\t * y mode returns the elements that hit-test at the current y coordinate\n\t\t * @function Chart.Interaction.modes.y\n\t\t * @param {Chart} chart - the chart we are returning items from\n\t\t * @param {Event} e - the event we are find things at\n\t\t * @param {InteractionOptions} options - options to use\n\t\t * @param {boolean} [useFinalPosition] - use final element position (animation target)\n\t\t * @return {InteractionItem[]} - items that are found\n\t\t */\n    y(chart, e, options, useFinalPosition) {\n      const position = getRelativePosition(e, chart);\n      return getAxisItems(chart, position, 'y', options.intersect, useFinalPosition);\n    }\n  }\n};\n","import {defined, each, isObject} from '../helpers/helpers.core';\nimport {toPadding} from '../helpers/helpers.options';\n\n/**\n * @typedef { import(\"./core.controller\").default } Chart\n */\n\nconst STATIC_POSITIONS = ['left', 'top', 'right', 'bottom'];\n\nfunction filterByPosition(array, position) {\n  return array.filter(v => v.pos === position);\n}\n\nfunction filterDynamicPositionByAxis(array, axis) {\n  return array.filter(v => STATIC_POSITIONS.indexOf(v.pos) === -1 && v.box.axis === axis);\n}\n\nfunction sortByWeight(array, reverse) {\n  return array.sort((a, b) => {\n    const v0 = reverse ? b : a;\n    const v1 = reverse ? a : b;\n    return v0.weight === v1.weight ?\n      v0.index - v1.index :\n      v0.weight - v1.weight;\n  });\n}\n\nfunction wrapBoxes(boxes) {\n  const layoutBoxes = [];\n  let i, ilen, box, pos, stack, stackWeight;\n\n  for (i = 0, ilen = (boxes || []).length; i < ilen; ++i) {\n    box = boxes[i];\n    ({position: pos, options: {stack, stackWeight = 1}} = box);\n    layoutBoxes.push({\n      index: i,\n      box,\n      pos,\n      horizontal: box.isHorizontal(),\n      weight: box.weight,\n      stack: stack && (pos + stack),\n      stackWeight\n    });\n  }\n  return layoutBoxes;\n}\n\nfunction buildStacks(layouts) {\n  const stacks = {};\n  for (const wrap of layouts) {\n    const {stack, pos, stackWeight} = wrap;\n    if (!stack || !STATIC_POSITIONS.includes(pos)) {\n      continue;\n    }\n    const _stack = stacks[stack] || (stacks[stack] = {count: 0, placed: 0, weight: 0, size: 0});\n    _stack.count++;\n    _stack.weight += stackWeight;\n  }\n  return stacks;\n}\n\n/**\n * store dimensions used instead of available chartArea in fitBoxes\n **/\nfunction setLayoutDims(layouts, params) {\n  const stacks = buildStacks(layouts);\n  const {vBoxMaxWidth, hBoxMaxHeight} = params;\n  let i, ilen, layout;\n  for (i = 0, ilen = layouts.length; i < ilen; ++i) {\n    layout = layouts[i];\n    const {fullSize} = layout.box;\n    const stack = stacks[layout.stack];\n    const factor = stack && layout.stackWeight / stack.weight;\n    if (layout.horizontal) {\n      layout.width = factor ? factor * vBoxMaxWidth : fullSize && params.availableWidth;\n      layout.height = hBoxMaxHeight;\n    } else {\n      layout.width = vBoxMaxWidth;\n      layout.height = factor ? factor * hBoxMaxHeight : fullSize && params.availableHeight;\n    }\n  }\n  return stacks;\n}\n\nfunction buildLayoutBoxes(boxes) {\n  const layoutBoxes = wrapBoxes(boxes);\n  const fullSize = sortByWeight(layoutBoxes.filter(wrap => wrap.box.fullSize), true);\n  const left = sortByWeight(filterByPosition(layoutBoxes, 'left'), true);\n  const right = sortByWeight(filterByPosition(layoutBoxes, 'right'));\n  const top = sortByWeight(filterByPosition(layoutBoxes, 'top'), true);\n  const bottom = sortByWeight(filterByPosition(layoutBoxes, 'bottom'));\n  const centerHorizontal = filterDynamicPositionByAxis(layoutBoxes, 'x');\n  const centerVertical = filterDynamicPositionByAxis(layoutBoxes, 'y');\n\n  return {\n    fullSize,\n    leftAndTop: left.concat(top),\n    rightAndBottom: right.concat(centerVertical).concat(bottom).concat(centerHorizontal),\n    chartArea: filterByPosition(layoutBoxes, 'chartArea'),\n    vertical: left.concat(right).concat(centerVertical),\n    horizontal: top.concat(bottom).concat(centerHorizontal)\n  };\n}\n\nfunction getCombinedMax(maxPadding, chartArea, a, b) {\n  return Math.max(maxPadding[a], chartArea[a]) + Math.max(maxPadding[b], chartArea[b]);\n}\n\nfunction updateMaxPadding(maxPadding, boxPadding) {\n  maxPadding.top = Math.max(maxPadding.top, boxPadding.top);\n  maxPadding.left = Math.max(maxPadding.left, boxPadding.left);\n  maxPadding.bottom = Math.max(maxPadding.bottom, boxPadding.bottom);\n  maxPadding.right = Math.max(maxPadding.right, boxPadding.right);\n}\n\nfunction updateDims(chartArea, params, layout, stacks) {\n  const {pos, box} = layout;\n  const maxPadding = chartArea.maxPadding;\n\n  // dynamically placed boxes size is not considered\n  if (!isObject(pos)) {\n    if (layout.size) {\n      // this layout was already counted for, lets first reduce old size\n      chartArea[pos] -= layout.size;\n    }\n    const stack = stacks[layout.stack] || {size: 0, count: 1};\n    stack.size = Math.max(stack.size, layout.horizontal ? box.height : box.width);\n    layout.size = stack.size / stack.count;\n    chartArea[pos] += layout.size;\n  }\n\n  if (box.getPadding) {\n    updateMaxPadding(maxPadding, box.getPadding());\n  }\n\n  const newWidth = Math.max(0, params.outerWidth - getCombinedMax(maxPadding, chartArea, 'left', 'right'));\n  const newHeight = Math.max(0, params.outerHeight - getCombinedMax(maxPadding, chartArea, 'top', 'bottom'));\n  const widthChanged = newWidth !== chartArea.w;\n  const heightChanged = newHeight !== chartArea.h;\n  chartArea.w = newWidth;\n  chartArea.h = newHeight;\n\n  // return booleans on the changes per direction\n  return layout.horizontal\n    ? {same: widthChanged, other: heightChanged}\n    : {same: heightChanged, other: widthChanged};\n}\n\nfunction handleMaxPadding(chartArea) {\n  const maxPadding = chartArea.maxPadding;\n\n  function updatePos(pos) {\n    const change = Math.max(maxPadding[pos] - chartArea[pos], 0);\n    chartArea[pos] += change;\n    return change;\n  }\n  chartArea.y += updatePos('top');\n  chartArea.x += updatePos('left');\n  updatePos('right');\n  updatePos('bottom');\n}\n\nfunction getMargins(horizontal, chartArea) {\n  const maxPadding = chartArea.maxPadding;\n\n  function marginForPositions(positions) {\n    const margin = {left: 0, top: 0, right: 0, bottom: 0};\n    positions.forEach((pos) => {\n      margin[pos] = Math.max(chartArea[pos], maxPadding[pos]);\n    });\n    return margin;\n  }\n\n  return horizontal\n    ? marginForPositions(['left', 'right'])\n    : marginForPositions(['top', 'bottom']);\n}\n\nfunction fitBoxes(boxes, chartArea, params, stacks) {\n  const refitBoxes = [];\n  let i, ilen, layout, box, refit, changed;\n\n  for (i = 0, ilen = boxes.length, refit = 0; i < ilen; ++i) {\n    layout = boxes[i];\n    box = layout.box;\n\n    box.update(\n      layout.width || chartArea.w,\n      layout.height || chartArea.h,\n      getMargins(layout.horizontal, chartArea)\n    );\n    const {same, other} = updateDims(chartArea, params, layout, stacks);\n\n    // Dimensions changed and there were non full width boxes before this\n    // -> we have to refit those\n    refit |= same && refitBoxes.length;\n\n    // Chart area changed in the opposite direction\n    changed = changed || other;\n\n    if (!box.fullSize) { // fullSize boxes don't need to be re-fitted in any case\n      refitBoxes.push(layout);\n    }\n  }\n\n  return refit && fitBoxes(refitBoxes, chartArea, params, stacks) || changed;\n}\n\nfunction setBoxDims(box, left, top, width, height) {\n  box.top = top;\n  box.left = left;\n  box.right = left + width;\n  box.bottom = top + height;\n  box.width = width;\n  box.height = height;\n}\n\nfunction placeBoxes(boxes, chartArea, params, stacks) {\n  const userPadding = params.padding;\n  let {x, y} = chartArea;\n\n  for (const layout of boxes) {\n    const box = layout.box;\n    const stack = stacks[layout.stack] || {count: 1, placed: 0, weight: 1};\n    const weight = (layout.stackWeight / stack.weight) || 1;\n    if (layout.horizontal) {\n      const width = chartArea.w * weight;\n      const height = stack.size || box.height;\n      if (defined(stack.start)) {\n        y = stack.start;\n      }\n      if (box.fullSize) {\n        setBoxDims(box, userPadding.left, y, params.outerWidth - userPadding.right - userPadding.left, height);\n      } else {\n        setBoxDims(box, chartArea.left + stack.placed, y, width, height);\n      }\n      stack.start = y;\n      stack.placed += width;\n      y = box.bottom;\n    } else {\n      const height = chartArea.h * weight;\n      const width = stack.size || box.width;\n      if (defined(stack.start)) {\n        x = stack.start;\n      }\n      if (box.fullSize) {\n        setBoxDims(box, x, userPadding.top, width, params.outerHeight - userPadding.bottom - userPadding.top);\n      } else {\n        setBoxDims(box, x, chartArea.top + stack.placed, width, height);\n      }\n      stack.start = x;\n      stack.placed += height;\n      x = box.right;\n    }\n  }\n\n  chartArea.x = x;\n  chartArea.y = y;\n}\n\n/**\n * @interface LayoutItem\n * @typedef {object} LayoutItem\n * @prop {string} position - The position of the item in the chart layout. Possible values are\n * 'left', 'top', 'right', 'bottom', and 'chartArea'\n * @prop {number} weight - The weight used to sort the item. Higher weights are further away from the chart area\n * @prop {boolean} fullSize - if true, and the item is horizontal, then push vertical boxes down\n * @prop {function} isHorizontal - returns true if the layout item is horizontal (ie. top or bottom)\n * @prop {function} update - Takes two parameters: width and height. Returns size of item\n * @prop {function} draw - Draws the element\n * @prop {function} [getPadding] -  Returns an object with padding on the edges\n * @prop {number} width - Width of item. Must be valid after update()\n * @prop {number} height - Height of item. Must be valid after update()\n * @prop {number} left - Left edge of the item. Set by layout system and cannot be used in update\n * @prop {number} top - Top edge of the item. Set by layout system and cannot be used in update\n * @prop {number} right - Right edge of the item. Set by layout system and cannot be used in update\n * @prop {number} bottom - Bottom edge of the item. Set by layout system and cannot be used in update\n */\n\n// The layout service is very self explanatory.  It's responsible for the layout within a chart.\n// Scales, Legends and Plugins all rely on the layout service and can easily register to be placed anywhere they need\n// It is this service's responsibility of carrying out that layout.\nexport default {\n\n  /**\n\t * Register a box to a chart.\n\t * A box is simply a reference to an object that requires layout. eg. Scales, Legend, Title.\n\t * @param {Chart} chart - the chart to use\n\t * @param {LayoutItem} item - the item to add to be laid out\n\t */\n  addBox(chart, item) {\n    if (!chart.boxes) {\n      chart.boxes = [];\n    }\n\n    // initialize item with default values\n    item.fullSize = item.fullSize || false;\n    item.position = item.position || 'top';\n    item.weight = item.weight || 0;\n    // @ts-ignore\n    item._layers = item._layers || function() {\n      return [{\n        z: 0,\n        draw(chartArea) {\n          item.draw(chartArea);\n        }\n      }];\n    };\n\n    chart.boxes.push(item);\n  },\n\n  /**\n\t * Remove a layoutItem from a chart\n\t * @param {Chart} chart - the chart to remove the box from\n\t * @param {LayoutItem} layoutItem - the item to remove from the layout\n\t */\n  removeBox(chart, layoutItem) {\n    const index = chart.boxes ? chart.boxes.indexOf(layoutItem) : -1;\n    if (index !== -1) {\n      chart.boxes.splice(index, 1);\n    }\n  },\n\n  /**\n\t * Sets (or updates) options on the given `item`.\n\t * @param {Chart} chart - the chart in which the item lives (or will be added to)\n\t * @param {LayoutItem} item - the item to configure with the given options\n\t * @param {object} options - the new item options.\n\t */\n  configure(chart, item, options) {\n    item.fullSize = options.fullSize;\n    item.position = options.position;\n    item.weight = options.weight;\n  },\n\n  /**\n\t * Fits boxes of the given chart into the given size by having each box measure itself\n\t * then running a fitting algorithm\n\t * @param {Chart} chart - the chart\n\t * @param {number} width - the width to fit into\n\t * @param {number} height - the height to fit into\n   * @param {number} minPadding - minimum padding required for each side of chart area\n\t */\n  update(chart, width, height, minPadding) {\n    if (!chart) {\n      return;\n    }\n\n    const padding = toPadding(chart.options.layout.padding);\n    const availableWidth = Math.max(width - padding.width, 0);\n    const availableHeight = Math.max(height - padding.height, 0);\n    const boxes = buildLayoutBoxes(chart.boxes);\n    const verticalBoxes = boxes.vertical;\n    const horizontalBoxes = boxes.horizontal;\n\n    // Before any changes are made, notify boxes that an update is about to being\n    // This is used to clear any cached data (e.g. scale limits)\n    each(chart.boxes, box => {\n      if (typeof box.beforeLayout === 'function') {\n        box.beforeLayout();\n      }\n    });\n\n    // Essentially we now have any number of boxes on each of the 4 sides.\n    // Our canvas looks like the following.\n    // The areas L1 and L2 are the left axes. R1 is the right axis, T1 is the top axis and\n    // B1 is the bottom axis\n    // There are also 4 quadrant-like locations (left to right instead of clockwise) reserved for chart overlays\n    // These locations are single-box locations only, when trying to register a chartArea location that is already taken,\n    // an error will be thrown.\n    //\n    // |----------------------------------------------------|\n    // |                  T1 (Full Width)                   |\n    // |----------------------------------------------------|\n    // |    |    |                 T2                  |    |\n    // |    |----|-------------------------------------|----|\n    // |    |    | C1 |                           | C2 |    |\n    // |    |    |----|                           |----|    |\n    // |    |    |                                     |    |\n    // | L1 | L2 |           ChartArea (C0)            | R1 |\n    // |    |    |                                     |    |\n    // |    |    |----|                           |----|    |\n    // |    |    | C3 |                           | C4 |    |\n    // |    |----|-------------------------------------|----|\n    // |    |    |                 B1                  |    |\n    // |----------------------------------------------------|\n    // |                  B2 (Full Width)                   |\n    // |----------------------------------------------------|\n    //\n\n    const visibleVerticalBoxCount = verticalBoxes.reduce((total, wrap) =>\n      wrap.box.options && wrap.box.options.display === false ? total : total + 1, 0) || 1;\n\n    const params = Object.freeze({\n      outerWidth: width,\n      outerHeight: height,\n      padding,\n      availableWidth,\n      availableHeight,\n      vBoxMaxWidth: availableWidth / 2 / visibleVerticalBoxCount,\n      hBoxMaxHeight: availableHeight / 2\n    });\n    const maxPadding = Object.assign({}, padding);\n    updateMaxPadding(maxPadding, toPadding(minPadding));\n    const chartArea = Object.assign({\n      maxPadding,\n      w: availableWidth,\n      h: availableHeight,\n      x: padding.left,\n      y: padding.top\n    }, padding);\n\n    const stacks = setLayoutDims(verticalBoxes.concat(horizontalBoxes), params);\n\n    // First fit the fullSize boxes, to reduce probability of re-fitting.\n    fitBoxes(boxes.fullSize, chartArea, params, stacks);\n\n    // Then fit vertical boxes\n    fitBoxes(verticalBoxes, chartArea, params, stacks);\n\n    // Then fit horizontal boxes\n    if (fitBoxes(horizontalBoxes, chartArea, params, stacks)) {\n      // if the area changed, re-fit vertical boxes\n      fitBoxes(verticalBoxes, chartArea, params, stacks);\n    }\n\n    handleMaxPadding(chartArea);\n\n    // Finally place the boxes to correct coordinates\n    placeBoxes(boxes.leftAndTop, chartArea, params, stacks);\n\n    // Move to opposite side of chart\n    chartArea.x += chartArea.w;\n    chartArea.y += chartArea.h;\n\n    placeBoxes(boxes.rightAndBottom, chartArea, params, stacks);\n\n    chart.chartArea = {\n      left: chartArea.left,\n      top: chartArea.top,\n      right: chartArea.left + chartArea.w,\n      bottom: chartArea.top + chartArea.h,\n      height: chartArea.h,\n      width: chartArea.w,\n    };\n\n    // Finally update boxes in chartArea (radial scale for example)\n    each(boxes.chartArea, (layout) => {\n      const box = layout.box;\n      Object.assign(box, chart.chartArea);\n      box.update(chartArea.w, chartArea.h, {left: 0, top: 0, right: 0, bottom: 0});\n    });\n  }\n};\n","\n/**\n * @typedef { import(\"../core/core.controller\").default } Chart\n */\n\n/**\n * Abstract class that allows abstracting platform dependencies away from the chart.\n */\nexport default class BasePlatform {\n  /**\n\t * Called at chart construction time, returns a context2d instance implementing\n\t * the [W3C Canvas 2D Context API standard]{@link https://www.w3.org/TR/2dcontext/}.\n\t * @param {HTMLCanvasElement} canvas - The canvas from which to acquire context (platform specific)\n\t * @param {number} [aspectRatio] - The chart options\n\t */\n  acquireContext(canvas, aspectRatio) {} // eslint-disable-line no-unused-vars\n\n  /**\n\t * Called at chart destruction time, releases any resources associated to the context\n\t * previously returned by the acquireContext() method.\n\t * @param {CanvasRenderingContext2D} context - The context2d instance\n\t * @returns {boolean} true if the method succeeded, else false\n\t */\n  releaseContext(context) { // eslint-disable-line no-unused-vars\n    return false;\n  }\n\n  /**\n\t * Registers the specified listener on the given chart.\n\t * @param {Chart} chart - Chart from which to listen for event\n\t * @param {string} type - The ({@link ChartEvent}) type to listen for\n\t * @param {function} listener - Receives a notification (an object that implements\n\t * the {@link ChartEvent} interface) when an event of the specified type occurs.\n\t */\n  addEventListener(chart, type, listener) {} // eslint-disable-line no-unused-vars\n\n  /**\n\t * Removes the specified listener previously registered with addEventListener.\n\t * @param {Chart} chart - Chart from which to remove the listener\n\t * @param {string} type - The ({@link ChartEvent}) type to remove\n\t * @param {function} listener - The listener function to remove from the event target.\n\t */\n  removeEventListener(chart, type, listener) {} // eslint-disable-line no-unused-vars\n\n  /**\n\t * @returns {number} the current devicePixelRatio of the device this platform is connected to.\n\t */\n  getDevicePixelRatio() {\n    return 1;\n  }\n\n  /**\n\t * Returns the maximum size in pixels of given canvas element.\n\t * @param {HTMLCanvasElement} element\n\t * @param {number} [width] - content width of parent element\n\t * @param {number} [height] - content height of parent element\n\t * @param {number} [aspectRatio] - aspect ratio to maintain\n\t */\n  getMaximumSize(element, width, height, aspectRatio) {\n    width = Math.max(0, width || element.width);\n    height = height || element.height;\n    return {\n      width,\n      height: Math.max(0, aspectRatio ? Math.floor(width / aspectRatio) : height)\n    };\n  }\n\n  /**\n\t * @param {HTMLCanvasElement} canvas\n\t * @returns {boolean} true if the canvas is attached to the platform, false if not.\n\t */\n  isAttached(canvas) { // eslint-disable-line no-unused-vars\n    return true;\n  }\n\n  /**\n   * Updates config with platform specific requirements\n   * @param {import(\"../core/core.config\").default} config\n   */\n  updateConfig(config) { // eslint-disable-line no-unused-vars\n    // no-op\n  }\n}\n","/**\n * Platform fallback implementation (minimal).\n * @see https://github.com/chartjs/Chart.js/pull/4591#issuecomment-319575939\n */\n\nimport BasePlatform from './platform.base';\n\n/**\n * Platform class for charts without access to the DOM or to many element properties\n * This platform is used by default for any chart passed an OffscreenCanvas.\n * @extends BasePlatform\n */\nexport default class BasicPlatform extends BasePlatform {\n  acquireContext(item) {\n    // To prevent canvas fingerprinting, some add-ons undefine the getContext\n    // method, for example: https://github.com/kkapsner/CanvasBlocker\n    // https://github.com/chartjs/Chart.js/issues/2807\n    return item && item.getContext && item.getContext('2d') || null;\n  }\n  updateConfig(config) {\n    config.options.animation = false;\n  }\n}\n","/**\n * Chart.Platform implementation for targeting a web browser\n */\n\nimport BasePlatform from './platform.base';\nimport {_getParentNode, getRelativePosition, supportsEventListenerOptions, readUsedSize, getMaximumSize} from '../helpers/helpers.dom';\nimport {throttled} from '../helpers/helpers.extras';\nimport {isNullOrUndef} from '../helpers/helpers.core';\n\n/**\n * @typedef { import(\"../core/core.controller\").default } Chart\n */\n\nconst EXPANDO_KEY = '$chartjs';\n\n/**\n * DOM event types -> Chart.js event types.\n * Note: only events with different types are mapped.\n * @see https://developer.mozilla.org/en-US/docs/Web/Events\n */\nconst EVENT_TYPES = {\n  touchstart: 'mousedown',\n  touchmove: 'mousemove',\n  touchend: 'mouseup',\n  pointerenter: 'mouseenter',\n  pointerdown: 'mousedown',\n  pointermove: 'mousemove',\n  pointerup: 'mouseup',\n  pointerleave: 'mouseout',\n  pointerout: 'mouseout'\n};\n\nconst isNullOrEmpty = value => value === null || value === '';\n/**\n * Initializes the canvas style and render size without modifying the canvas display size,\n * since responsiveness is handled by the controller.resize() method. The config is used\n * to determine the aspect ratio to apply in case no explicit height has been specified.\n * @param {HTMLCanvasElement} canvas\n * @param {number} [aspectRatio]\n */\nfunction initCanvas(canvas, aspectRatio) {\n  const style = canvas.style;\n\n  // NOTE(SB) canvas.getAttribute('width') !== canvas.width: in the first case it\n  // returns null or '' if no explicit value has been set to the canvas attribute.\n  const renderHeight = canvas.getAttribute('height');\n  const renderWidth = canvas.getAttribute('width');\n\n  // Chart.js modifies some canvas values that we want to restore on destroy\n  canvas[EXPANDO_KEY] = {\n    initial: {\n      height: renderHeight,\n      width: renderWidth,\n      style: {\n        display: style.display,\n        height: style.height,\n        width: style.width\n      }\n    }\n  };\n\n  // Force canvas to display as block to avoid extra space caused by inline\n  // elements, which would interfere with the responsive resize process.\n  // https://github.com/chartjs/Chart.js/issues/2538\n  style.display = style.display || 'block';\n  // Include possible borders in the size\n  style.boxSizing = style.boxSizing || 'border-box';\n\n  if (isNullOrEmpty(renderWidth)) {\n    const displayWidth = readUsedSize(canvas, 'width');\n    if (displayWidth !== undefined) {\n      canvas.width = displayWidth;\n    }\n  }\n\n  if (isNullOrEmpty(renderHeight)) {\n    if (canvas.style.height === '') {\n      // If no explicit render height and style height, let's apply the aspect ratio,\n      // which one can be specified by the user but also by charts as default option\n      // (i.e. options.aspectRatio). If not specified, use canvas aspect ratio of 2.\n      canvas.height = canvas.width / (aspectRatio || 2);\n    } else {\n      const displayHeight = readUsedSize(canvas, 'height');\n      if (displayHeight !== undefined) {\n        canvas.height = displayHeight;\n      }\n    }\n  }\n\n  return canvas;\n}\n\n// Default passive to true as expected by Chrome for 'touchstart' and 'touchend' events.\n// https://github.com/chartjs/Chart.js/issues/4287\nconst eventListenerOptions = supportsEventListenerOptions ? {passive: true} : false;\n\nfunction addListener(node, type, listener) {\n  node.addEventListener(type, listener, eventListenerOptions);\n}\n\nfunction removeListener(chart, type, listener) {\n  chart.canvas.removeEventListener(type, listener, eventListenerOptions);\n}\n\nfunction fromNativeEvent(event, chart) {\n  const type = EVENT_TYPES[event.type] || event.type;\n  const {x, y} = getRelativePosition(event, chart);\n  return {\n    type,\n    chart,\n    native: event,\n    x: x !== undefined ? x : null,\n    y: y !== undefined ? y : null,\n  };\n}\n\nfunction nodeListContains(nodeList, canvas) {\n  for (const node of nodeList) {\n    if (node === canvas || node.contains(canvas)) {\n      return true;\n    }\n  }\n}\n\nfunction createAttachObserver(chart, type, listener) {\n  const canvas = chart.canvas;\n  const observer = new MutationObserver(entries => {\n    let trigger = false;\n    for (const entry of entries) {\n      trigger = trigger || nodeListContains(entry.addedNodes, canvas);\n      trigger = trigger && !nodeListContains(entry.removedNodes, canvas);\n    }\n    if (trigger) {\n      listener();\n    }\n  });\n  observer.observe(document, {childList: true, subtree: true});\n  return observer;\n}\n\nfunction createDetachObserver(chart, type, listener) {\n  const canvas = chart.canvas;\n  const observer = new MutationObserver(entries => {\n    let trigger = false;\n    for (const entry of entries) {\n      trigger = trigger || nodeListContains(entry.removedNodes, canvas);\n      trigger = trigger && !nodeListContains(entry.addedNodes, canvas);\n    }\n    if (trigger) {\n      listener();\n    }\n  });\n  observer.observe(document, {childList: true, subtree: true});\n  return observer;\n}\n\nconst drpListeningCharts = new Map();\nlet oldDevicePixelRatio = 0;\n\nfunction onWindowResize() {\n  const dpr = window.devicePixelRatio;\n  if (dpr === oldDevicePixelRatio) {\n    return;\n  }\n  oldDevicePixelRatio = dpr;\n  drpListeningCharts.forEach((resize, chart) => {\n    if (chart.currentDevicePixelRatio !== dpr) {\n      resize();\n    }\n  });\n}\n\nfunction listenDevicePixelRatioChanges(chart, resize) {\n  if (!drpListeningCharts.size) {\n    window.addEventListener('resize', onWindowResize);\n  }\n  drpListeningCharts.set(chart, resize);\n}\n\nfunction unlistenDevicePixelRatioChanges(chart) {\n  drpListeningCharts.delete(chart);\n  if (!drpListeningCharts.size) {\n    window.removeEventListener('resize', onWindowResize);\n  }\n}\n\nfunction createResizeObserver(chart, type, listener) {\n  const canvas = chart.canvas;\n  const container = canvas && _getParentNode(canvas);\n  if (!container) {\n    return;\n  }\n  const resize = throttled((width, height) => {\n    const w = container.clientWidth;\n    listener(width, height);\n    if (w < container.clientWidth) {\n      // If the container size shrank during chart resize, let's assume\n      // scrollbar appeared. So we resize again with the scrollbar visible -\n      // effectively making chart smaller and the scrollbar hidden again.\n      // Because we are inside `throttled`, and currently `ticking`, scroll\n      // events are ignored during this whole 2 resize process.\n      // If we assumed wrong and something else happened, we are resizing\n      // twice in a frame (potential performance issue)\n      listener();\n    }\n  }, window);\n\n  // @ts-ignore until https://github.com/microsoft/TypeScript/issues/37861 implemented\n  const observer = new ResizeObserver(entries => {\n    const entry = entries[0];\n    const width = entry.contentRect.width;\n    const height = entry.contentRect.height;\n    // When its container's display is set to 'none' the callback will be called with a\n    // size of (0, 0), which will cause the chart to lose its original height, so skip\n    // resizing in such case.\n    if (width === 0 && height === 0) {\n      return;\n    }\n    resize(width, height);\n  });\n  observer.observe(container);\n  listenDevicePixelRatioChanges(chart, resize);\n\n  return observer;\n}\n\nfunction releaseObserver(chart, type, observer) {\n  if (observer) {\n    observer.disconnect();\n  }\n  if (type === 'resize') {\n    unlistenDevicePixelRatioChanges(chart);\n  }\n}\n\nfunction createProxyAndListen(chart, type, listener) {\n  const canvas = chart.canvas;\n  const proxy = throttled((event) => {\n    // This case can occur if the chart is destroyed while waiting\n    // for the throttled function to occur. We prevent crashes by checking\n    // for a destroyed chart\n    if (chart.ctx !== null) {\n      listener(fromNativeEvent(event, chart));\n    }\n  }, chart, (args) => {\n    const event = args[0];\n    return [event, event.offsetX, event.offsetY];\n  });\n\n  addListener(canvas, type, proxy);\n\n  return proxy;\n}\n\n/**\n * Platform class for charts that can access the DOM and global window/document properties\n * @extends BasePlatform\n */\nexport default class DomPlatform extends BasePlatform {\n\n  /**\n\t * @param {HTMLCanvasElement} canvas\n\t * @param {number} [aspectRatio]\n\t * @return {CanvasRenderingContext2D|null}\n\t */\n  acquireContext(canvas, aspectRatio) {\n    // To prevent canvas fingerprinting, some add-ons undefine the getContext\n    // method, for example: https://github.com/kkapsner/CanvasBlocker\n    // https://github.com/chartjs/Chart.js/issues/2807\n    const context = canvas && canvas.getContext && canvas.getContext('2d');\n\n    // `instanceof HTMLCanvasElement/CanvasRenderingContext2D` fails when the canvas is\n    // inside an iframe or when running in a protected environment. We could guess the\n    // types from their toString() value but let's keep things flexible and assume it's\n    // a sufficient condition if the canvas has a context2D which has canvas as `canvas`.\n    // https://github.com/chartjs/Chart.js/issues/3887\n    // https://github.com/chartjs/Chart.js/issues/4102\n    // https://github.com/chartjs/Chart.js/issues/4152\n    if (context && context.canvas === canvas) {\n      // Load platform resources on first chart creation, to make it possible to\n      // import the library before setting platform options.\n      initCanvas(canvas, aspectRatio);\n      return context;\n    }\n\n    return null;\n  }\n\n  /**\n\t * @param {CanvasRenderingContext2D} context\n\t */\n  releaseContext(context) {\n    const canvas = context.canvas;\n    if (!canvas[EXPANDO_KEY]) {\n      return false;\n    }\n\n    const initial = canvas[EXPANDO_KEY].initial;\n    ['height', 'width'].forEach((prop) => {\n      const value = initial[prop];\n      if (isNullOrUndef(value)) {\n        canvas.removeAttribute(prop);\n      } else {\n        canvas.setAttribute(prop, value);\n      }\n    });\n\n    const style = initial.style || {};\n    Object.keys(style).forEach((key) => {\n      canvas.style[key] = style[key];\n    });\n\n    // The canvas render size might have been changed (and thus the state stack discarded),\n    // we can't use save() and restore() to restore the initial state. So make sure that at\n    // least the canvas context is reset to the default state by setting the canvas width.\n    // https://www.w3.org/TR/2011/WD-html5-20110525/the-canvas-element.html\n    // eslint-disable-next-line no-self-assign\n    canvas.width = canvas.width;\n\n    delete canvas[EXPANDO_KEY];\n    return true;\n  }\n\n  /**\n\t *\n\t * @param {Chart} chart\n\t * @param {string} type\n\t * @param {function} listener\n\t */\n  addEventListener(chart, type, listener) {\n    // Can have only one listener per type, so make sure previous is removed\n    this.removeEventListener(chart, type);\n\n    const proxies = chart.$proxies || (chart.$proxies = {});\n    const handlers = {\n      attach: createAttachObserver,\n      detach: createDetachObserver,\n      resize: createResizeObserver\n    };\n    const handler = handlers[type] || createProxyAndListen;\n    proxies[type] = handler(chart, type, listener);\n  }\n\n\n  /**\n\t * @param {Chart} chart\n\t * @param {string} type\n\t */\n  removeEventListener(chart, type) {\n    const proxies = chart.$proxies || (chart.$proxies = {});\n    const proxy = proxies[type];\n\n    if (!proxy) {\n      return;\n    }\n\n    const handlers = {\n      attach: releaseObserver,\n      detach: releaseObserver,\n      resize: releaseObserver\n    };\n    const handler = handlers[type] || removeListener;\n    handler(chart, type, proxy);\n    proxies[type] = undefined;\n  }\n\n  getDevicePixelRatio() {\n    return window.devicePixelRatio;\n  }\n\n  /**\n\t * @param {HTMLCanvasElement} canvas\n\t * @param {number} [width] - content width of parent element\n\t * @param {number} [height] - content height of parent element\n\t * @param {number} [aspectRatio] - aspect ratio to maintain\n\t */\n  getMaximumSize(canvas, width, height, aspectRatio) {\n    return getMaximumSize(canvas, width, height, aspectRatio);\n  }\n\n  /**\n\t * @param {HTMLCanvasElement} canvas\n\t */\n  isAttached(canvas) {\n    const container = _getParentNode(canvas);\n    return !!(container && container.isConnected);\n  }\n}\n","import {_isDomSupported} from '../helpers';\nimport BasePlatform from './platform.base';\nimport BasicPlatform from './platform.basic';\nimport DomPlatform from './platform.dom';\n\nexport function _detectPlatform(canvas) {\n  if (!_isDomSupported() || (typeof OffscreenCanvas !== 'undefined' && canvas instanceof OffscreenCanvas)) {\n    return BasicPlatform;\n  }\n  return DomPlatform;\n}\n\nexport {BasePlatform, BasicPlatform, DomPlatform};\n","import effects from '../helpers/helpers.easing';\nimport {resolve} from '../helpers/helpers.options';\nimport {color as helpersColor} from '../helpers/helpers.color';\n\nconst transparent = 'transparent';\nconst interpolators = {\n  boolean(from, to, factor) {\n    return factor > 0.5 ? to : from;\n  },\n  color(from, to, factor) {\n    const c0 = helpersColor(from || transparent);\n    const c1 = c0.valid && helpersColor(to || transparent);\n    return c1 && c1.valid\n      ? c1.mix(c0, factor).hexString()\n      : to;\n  },\n  number(from, to, factor) {\n    return from + (to - from) * factor;\n  }\n};\n\nexport default class Animation {\n  constructor(cfg, target, prop, to) {\n    const currentValue = target[prop];\n\n    to = resolve([cfg.to, to, currentValue, cfg.from]);\n    const from = resolve([cfg.from, currentValue, to]);\n\n    this._active = true;\n    this._fn = cfg.fn || interpolators[cfg.type || typeof from];\n    this._easing = effects[cfg.easing] || effects.linear;\n    this._start = Math.floor(Date.now() + (cfg.delay || 0));\n    this._duration = this._total = Math.floor(cfg.duration);\n    this._loop = !!cfg.loop;\n    this._target = target;\n    this._prop = prop;\n    this._from = from;\n    this._to = to;\n    this._promises = undefined;\n  }\n\n  active() {\n    return this._active;\n  }\n\n  update(cfg, to, date) {\n    if (this._active) {\n      this._notify(false);\n\n      const currentValue = this._target[this._prop];\n      const elapsed = date - this._start;\n      const remain = this._duration - elapsed;\n      this._start = date;\n      this._duration = Math.floor(Math.max(remain, cfg.duration));\n      this._total += elapsed;\n      this._loop = !!cfg.loop;\n      this._to = resolve([cfg.to, to, currentValue, cfg.from]);\n      this._from = resolve([cfg.from, currentValue, to]);\n    }\n  }\n\n  cancel() {\n    if (this._active) {\n      // update current evaluated value, for smoother animations\n      this.tick(Date.now());\n      this._active = false;\n      this._notify(false);\n    }\n  }\n\n  tick(date) {\n    const elapsed = date - this._start;\n    const duration = this._duration;\n    const prop = this._prop;\n    const from = this._from;\n    const loop = this._loop;\n    const to = this._to;\n    let factor;\n\n    this._active = from !== to && (loop || (elapsed < duration));\n\n    if (!this._active) {\n      this._target[prop] = to;\n      this._notify(true);\n      return;\n    }\n\n    if (elapsed < 0) {\n      this._target[prop] = from;\n      return;\n    }\n\n    factor = (elapsed / duration) % 2;\n    factor = loop && factor > 1 ? 2 - factor : factor;\n    factor = this._easing(Math.min(1, Math.max(0, factor)));\n\n    this._target[prop] = this._fn(from, to, factor);\n  }\n\n  wait() {\n    const promises = this._promises || (this._promises = []);\n    return new Promise((res, rej) => {\n      promises.push({res, rej});\n    });\n  }\n\n  _notify(resolved) {\n    const method = resolved ? 'res' : 'rej';\n    const promises = this._promises || [];\n    for (let i = 0; i < promises.length; i++) {\n      promises[i][method]();\n    }\n  }\n}\n","import animator from './core.animator';\nimport Animation from './core.animation';\nimport defaults from './core.defaults';\nimport {isArray, isObject} from '../helpers/helpers.core';\n\nexport default class Animations {\n  constructor(chart, config) {\n    this._chart = chart;\n    this._properties = new Map();\n    this.configure(config);\n  }\n\n  configure(config) {\n    if (!isObject(config)) {\n      return;\n    }\n\n    const animationOptions = Object.keys(defaults.animation);\n    const animatedProps = this._properties;\n\n    Object.getOwnPropertyNames(config).forEach(key => {\n      const cfg = config[key];\n      if (!isObject(cfg)) {\n        return;\n      }\n      const resolved = {};\n      for (const option of animationOptions) {\n        resolved[option] = cfg[option];\n      }\n\n      (isArray(cfg.properties) && cfg.properties || [key]).forEach((prop) => {\n        if (prop === key || !animatedProps.has(prop)) {\n          animatedProps.set(prop, resolved);\n        }\n      });\n    });\n  }\n\n  /**\n\t * Utility to handle animation of `options`.\n\t * @private\n\t */\n  _animateOptions(target, values) {\n    const newOptions = values.options;\n    const options = resolveTargetOptions(target, newOptions);\n    if (!options) {\n      return [];\n    }\n\n    const animations = this._createAnimations(options, newOptions);\n    if (newOptions.$shared) {\n      // Going to shared options:\n      // After all animations are done, assign the shared options object to the element\n      // So any new updates to the shared options are observed\n      awaitAll(target.options.$animations, newOptions).then(() => {\n        target.options = newOptions;\n      }, () => {\n        // rejected, noop\n      });\n    }\n\n    return animations;\n  }\n\n  /**\n\t * @private\n\t */\n  _createAnimations(target, values) {\n    const animatedProps = this._properties;\n    const animations = [];\n    const running = target.$animations || (target.$animations = {});\n    const props = Object.keys(values);\n    const date = Date.now();\n    let i;\n\n    for (i = props.length - 1; i >= 0; --i) {\n      const prop = props[i];\n      if (prop.charAt(0) === '$') {\n        continue;\n      }\n\n      if (prop === 'options') {\n        animations.push(...this._animateOptions(target, values));\n        continue;\n      }\n      const value = values[prop];\n      let animation = running[prop];\n      const cfg = animatedProps.get(prop);\n\n      if (animation) {\n        if (cfg && animation.active()) {\n          // There is an existing active animation, let's update that\n          animation.update(cfg, value, date);\n          continue;\n        } else {\n          animation.cancel();\n        }\n      }\n      if (!cfg || !cfg.duration) {\n        // not animated, set directly to new value\n        target[prop] = value;\n        continue;\n      }\n\n      running[prop] = animation = new Animation(cfg, target, prop, value);\n      animations.push(animation);\n    }\n    return animations;\n  }\n\n\n  /**\n\t * Update `target` properties to new values, using configured animations\n\t * @param {object} target - object to update\n\t * @param {object} values - new target properties\n\t * @returns {boolean|undefined} - `true` if animations were started\n\t **/\n  update(target, values) {\n    if (this._properties.size === 0) {\n      // Nothing is animated, just apply the new values.\n      Object.assign(target, values);\n      return;\n    }\n\n    const animations = this._createAnimations(target, values);\n\n    if (animations.length) {\n      animator.add(this._chart, animations);\n      return true;\n    }\n  }\n}\n\nfunction awaitAll(animations, properties) {\n  const running = [];\n  const keys = Object.keys(properties);\n  for (let i = 0; i < keys.length; i++) {\n    const anim = animations[keys[i]];\n    if (anim && anim.active()) {\n      running.push(anim.wait());\n    }\n  }\n  // @ts-ignore\n  return Promise.all(running);\n}\n\nfunction resolveTargetOptions(target, newOptions) {\n  if (!newOptions) {\n    return;\n  }\n  let options = target.options;\n  if (!options) {\n    target.options = newOptions;\n    return;\n  }\n  if (options.$shared) {\n    // Going from shared options to distinct one:\n    // Create new options object containing the old shared values and start updating that.\n    target.options = options = Object.assign({}, options, {$shared: false, $animations: {}});\n  }\n  return options;\n}\n","import Animations from './core.animations';\nimport defaults from './core.defaults';\nimport {isArray, isFinite, isObject, valueOrDefault, resolveObjectKey, defined} from '../helpers/helpers.core';\nimport {listenArrayEvents, unlistenArrayEvents} from '../helpers/helpers.collection';\nimport {createContext, sign} from '../helpers';\n\n/**\n * @typedef { import(\"./core.controller\").default } Chart\n * @typedef { import(\"./core.scale\").default } Scale\n */\n\nfunction scaleClip(scale, allowedOverflow) {\n  const opts = scale && scale.options || {};\n  const reverse = opts.reverse;\n  const min = opts.min === undefined ? allowedOverflow : 0;\n  const max = opts.max === undefined ? allowedOverflow : 0;\n  return {\n    start: reverse ? max : min,\n    end: reverse ? min : max\n  };\n}\n\nfunction defaultClip(xScale, yScale, allowedOverflow) {\n  if (allowedOverflow === false) {\n    return false;\n  }\n  const x = scaleClip(xScale, allowedOverflow);\n  const y = scaleClip(yScale, allowedOverflow);\n\n  return {\n    top: y.end,\n    right: x.end,\n    bottom: y.start,\n    left: x.start\n  };\n}\n\nfunction toClip(value) {\n  let t, r, b, l;\n\n  if (isObject(value)) {\n    t = value.top;\n    r = value.right;\n    b = value.bottom;\n    l = value.left;\n  } else {\n    t = r = b = l = value;\n  }\n\n  return {\n    top: t,\n    right: r,\n    bottom: b,\n    left: l,\n    disabled: value === false\n  };\n}\n\nfunction getSortedDatasetIndices(chart, filterVisible) {\n  const keys = [];\n  const metasets = chart._getSortedDatasetMetas(filterVisible);\n  let i, ilen;\n\n  for (i = 0, ilen = metasets.length; i < ilen; ++i) {\n    keys.push(metasets[i].index);\n  }\n  return keys;\n}\n\nfunction applyStack(stack, value, dsIndex, options = {}) {\n  const keys = stack.keys;\n  const singleMode = options.mode === 'single';\n  let i, ilen, datasetIndex, otherValue;\n\n  if (value === null) {\n    return;\n  }\n\n  for (i = 0, ilen = keys.length; i < ilen; ++i) {\n    datasetIndex = +keys[i];\n    if (datasetIndex === dsIndex) {\n      if (options.all) {\n        continue;\n      }\n      break;\n    }\n    otherValue = stack.values[datasetIndex];\n    if (isFinite(otherValue) && (singleMode || (value === 0 || sign(value) === sign(otherValue)))) {\n      value += otherValue;\n    }\n  }\n  return value;\n}\n\nfunction convertObjectDataToArray(data) {\n  const keys = Object.keys(data);\n  const adata = new Array(keys.length);\n  let i, ilen, key;\n  for (i = 0, ilen = keys.length; i < ilen; ++i) {\n    key = keys[i];\n    adata[i] = {\n      x: key,\n      y: data[key]\n    };\n  }\n  return adata;\n}\n\nfunction isStacked(scale, meta) {\n  const stacked = scale && scale.options.stacked;\n  return stacked || (stacked === undefined && meta.stack !== undefined);\n}\n\nfunction getStackKey(indexScale, valueScale, meta) {\n  return `${indexScale.id}.${valueScale.id}.${meta.stack || meta.type}`;\n}\n\nfunction getUserBounds(scale) {\n  const {min, max, minDefined, maxDefined} = scale.getUserBounds();\n  return {\n    min: minDefined ? min : Number.NEGATIVE_INFINITY,\n    max: maxDefined ? max : Number.POSITIVE_INFINITY\n  };\n}\n\nfunction getOrCreateStack(stacks, stackKey, indexValue) {\n  const subStack = stacks[stackKey] || (stacks[stackKey] = {});\n  return subStack[indexValue] || (subStack[indexValue] = {});\n}\n\nfunction getLastIndexInStack(stack, vScale, positive, type) {\n  for (const meta of vScale.getMatchingVisibleMetas(type).reverse()) {\n    const value = stack[meta.index];\n    if ((positive && value > 0) || (!positive && value < 0)) {\n      return meta.index;\n    }\n  }\n\n  return null;\n}\n\nfunction updateStacks(controller, parsed) {\n  const {chart, _cachedMeta: meta} = controller;\n  const stacks = chart._stacks || (chart._stacks = {}); // map structure is {stackKey: {datasetIndex: value}}\n  const {iScale, vScale, index: datasetIndex} = meta;\n  const iAxis = iScale.axis;\n  const vAxis = vScale.axis;\n  const key = getStackKey(iScale, vScale, meta);\n  const ilen = parsed.length;\n  let stack;\n\n  for (let i = 0; i < ilen; ++i) {\n    const item = parsed[i];\n    const {[iAxis]: index, [vAxis]: value} = item;\n    const itemStacks = item._stacks || (item._stacks = {});\n    stack = itemStacks[vAxis] = getOrCreateStack(stacks, key, index);\n    stack[datasetIndex] = value;\n\n    stack._top = getLastIndexInStack(stack, vScale, true, meta.type);\n    stack._bottom = getLastIndexInStack(stack, vScale, false, meta.type);\n  }\n}\n\nfunction getFirstScaleId(chart, axis) {\n  const scales = chart.scales;\n  return Object.keys(scales).filter(key => scales[key].axis === axis).shift();\n}\n\nfunction createDatasetContext(parent, index) {\n  return createContext(parent,\n    {\n      active: false,\n      dataset: undefined,\n      datasetIndex: index,\n      index,\n      mode: 'default',\n      type: 'dataset'\n    }\n  );\n}\n\nfunction createDataContext(parent, index, element) {\n  return createContext(parent, {\n    active: false,\n    dataIndex: index,\n    parsed: undefined,\n    raw: undefined,\n    element,\n    index,\n    mode: 'default',\n    type: 'data'\n  });\n}\n\nfunction clearStacks(meta, items) {\n  // Not using meta.index here, because it might be already updated if the dataset changed location\n  const datasetIndex = meta.controller.index;\n  const axis = meta.vScale && meta.vScale.axis;\n  if (!axis) {\n    return;\n  }\n\n  items = items || meta._parsed;\n  for (const parsed of items) {\n    const stacks = parsed._stacks;\n    if (!stacks || stacks[axis] === undefined || stacks[axis][datasetIndex] === undefined) {\n      return;\n    }\n    delete stacks[axis][datasetIndex];\n  }\n}\n\nconst isDirectUpdateMode = (mode) => mode === 'reset' || mode === 'none';\nconst cloneIfNotShared = (cached, shared) => shared ? cached : Object.assign({}, cached);\nconst createStack = (canStack, meta, chart) => canStack && !meta.hidden && meta._stacked\n  && {keys: getSortedDatasetIndices(chart, true), values: null};\n\nexport default class DatasetController {\n\n  /**\n   * @type {any}\n   */\n  static defaults = {};\n\n  /**\n   * Element type used to generate a meta dataset (e.g. Chart.element.LineElement).\n   */\n  static datasetElementType = null;\n\n  /**\n   * Element type used to generate a meta data (e.g. Chart.element.PointElement).\n   */\n  static dataElementType = null;\n\n  /**\n\t * @param {Chart} chart\n\t * @param {number} datasetIndex\n\t */\n  constructor(chart, datasetIndex) {\n    this.chart = chart;\n    this._ctx = chart.ctx;\n    this.index = datasetIndex;\n    this._cachedDataOpts = {};\n    this._cachedMeta = this.getMeta();\n    this._type = this._cachedMeta.type;\n    this.options = undefined;\n    /** @type {boolean | object} */\n    this._parsing = false;\n    this._data = undefined;\n    this._objectData = undefined;\n    this._sharedOptions = undefined;\n    this._drawStart = undefined;\n    this._drawCount = undefined;\n    this.enableOptionSharing = false;\n    this.supportsDecimation = false;\n    this.$context = undefined;\n    this._syncList = [];\n    this.datasetElementType = new.target.datasetElementType;\n    this.dataElementType = new.target.dataElementType;\n\n    this.initialize();\n  }\n\n  initialize() {\n    const meta = this._cachedMeta;\n    this.configure();\n    this.linkScales();\n    meta._stacked = isStacked(meta.vScale, meta);\n    this.addElements();\n  }\n\n  updateIndex(datasetIndex) {\n    if (this.index !== datasetIndex) {\n      clearStacks(this._cachedMeta);\n    }\n    this.index = datasetIndex;\n  }\n\n  linkScales() {\n    const chart = this.chart;\n    const meta = this._cachedMeta;\n    const dataset = this.getDataset();\n\n    const chooseId = (axis, x, y, r) => axis === 'x' ? x : axis === 'r' ? r : y;\n\n    const xid = meta.xAxisID = valueOrDefault(dataset.xAxisID, getFirstScaleId(chart, 'x'));\n    const yid = meta.yAxisID = valueOrDefault(dataset.yAxisID, getFirstScaleId(chart, 'y'));\n    const rid = meta.rAxisID = valueOrDefault(dataset.rAxisID, getFirstScaleId(chart, 'r'));\n    const indexAxis = meta.indexAxis;\n    const iid = meta.iAxisID = chooseId(indexAxis, xid, yid, rid);\n    const vid = meta.vAxisID = chooseId(indexAxis, yid, xid, rid);\n    meta.xScale = this.getScaleForId(xid);\n    meta.yScale = this.getScaleForId(yid);\n    meta.rScale = this.getScaleForId(rid);\n    meta.iScale = this.getScaleForId(iid);\n    meta.vScale = this.getScaleForId(vid);\n  }\n\n  getDataset() {\n    return this.chart.data.datasets[this.index];\n  }\n\n  getMeta() {\n    return this.chart.getDatasetMeta(this.index);\n  }\n\n  /**\n\t * @param {string} scaleID\n\t * @return {Scale}\n\t */\n  getScaleForId(scaleID) {\n    return this.chart.scales[scaleID];\n  }\n\n  /**\n\t * @private\n\t */\n  _getOtherScale(scale) {\n    const meta = this._cachedMeta;\n    return scale === meta.iScale\n      ? meta.vScale\n      : meta.iScale;\n  }\n\n  reset() {\n    this._update('reset');\n  }\n\n  /**\n\t * @private\n\t */\n  _destroy() {\n    const meta = this._cachedMeta;\n    if (this._data) {\n      unlistenArrayEvents(this._data, this);\n    }\n    if (meta._stacked) {\n      clearStacks(meta);\n    }\n  }\n\n  /**\n\t * @private\n\t */\n  _dataCheck() {\n    const dataset = this.getDataset();\n    const data = dataset.data || (dataset.data = []);\n    const _data = this._data;\n\n    // In order to correctly handle data addition/deletion animation (an thus simulate\n    // real-time charts), we need to monitor these data modifications and synchronize\n    // the internal meta data accordingly.\n\n    if (isObject(data)) {\n      this._data = convertObjectDataToArray(data);\n    } else if (_data !== data) {\n      if (_data) {\n        // This case happens when the user replaced the data array instance.\n        unlistenArrayEvents(_data, this);\n        // Discard old parsed data and stacks\n        const meta = this._cachedMeta;\n        clearStacks(meta);\n        meta._parsed = [];\n      }\n      if (data && Object.isExtensible(data)) {\n        listenArrayEvents(data, this);\n      }\n      this._syncList = [];\n      this._data = data;\n    }\n  }\n\n  addElements() {\n    const meta = this._cachedMeta;\n\n    this._dataCheck();\n\n    if (this.datasetElementType) {\n      meta.dataset = new this.datasetElementType();\n    }\n  }\n\n  buildOrUpdateElements(resetNewElements) {\n    const meta = this._cachedMeta;\n    const dataset = this.getDataset();\n    let stackChanged = false;\n\n    this._dataCheck();\n\n    // make sure cached _stacked status is current\n    const oldStacked = meta._stacked;\n    meta._stacked = isStacked(meta.vScale, meta);\n\n    // detect change in stack option\n    if (meta.stack !== dataset.stack) {\n      stackChanged = true;\n      // remove values from old stack\n      clearStacks(meta);\n      meta.stack = dataset.stack;\n    }\n\n    // Re-sync meta data in case the user replaced the data array or if we missed\n    // any updates and so make sure that we handle number of datapoints changing.\n    this._resyncElements(resetNewElements);\n\n    // if stack changed, update stack values for the whole dataset\n    if (stackChanged || oldStacked !== meta._stacked) {\n      updateStacks(this, meta._parsed);\n    }\n  }\n\n  /**\n\t * Merges user-supplied and default dataset-level options\n\t * @private\n\t */\n  configure() {\n    const config = this.chart.config;\n    const scopeKeys = config.datasetScopeKeys(this._type);\n    const scopes = config.getOptionScopes(this.getDataset(), scopeKeys, true);\n    this.options = config.createResolver(scopes, this.getContext());\n    this._parsing = this.options.parsing;\n    this._cachedDataOpts = {};\n  }\n\n  /**\n\t * @param {number} start\n\t * @param {number} count\n\t */\n  parse(start, count) {\n    const {_cachedMeta: meta, _data: data} = this;\n    const {iScale, _stacked} = meta;\n    const iAxis = iScale.axis;\n\n    let sorted = start === 0 && count === data.length ? true : meta._sorted;\n    let prev = start > 0 && meta._parsed[start - 1];\n    let i, cur, parsed;\n\n    if (this._parsing === false) {\n      meta._parsed = data;\n      meta._sorted = true;\n      parsed = data;\n    } else {\n      if (isArray(data[start])) {\n        parsed = this.parseArrayData(meta, data, start, count);\n      } else if (isObject(data[start])) {\n        parsed = this.parseObjectData(meta, data, start, count);\n      } else {\n        parsed = this.parsePrimitiveData(meta, data, start, count);\n      }\n\n      const isNotInOrderComparedToPrev = () => cur[iAxis] === null || (prev && cur[iAxis] < prev[iAxis]);\n      for (i = 0; i < count; ++i) {\n        meta._parsed[i + start] = cur = parsed[i];\n        if (sorted) {\n          if (isNotInOrderComparedToPrev()) {\n            sorted = false;\n          }\n          prev = cur;\n        }\n      }\n      meta._sorted = sorted;\n    }\n\n    if (_stacked) {\n      updateStacks(this, parsed);\n    }\n  }\n\n  /**\n\t * Parse array of primitive values\n\t * @param {object} meta - dataset meta\n\t * @param {array} data - data array. Example [1,3,4]\n\t * @param {number} start - start index\n\t * @param {number} count - number of items to parse\n\t * @returns {object} parsed item - item containing index and a parsed value\n\t * for each scale id.\n\t * Example: {xScale0: 0, yScale0: 1}\n\t * @protected\n\t */\n  parsePrimitiveData(meta, data, start, count) {\n    const {iScale, vScale} = meta;\n    const iAxis = iScale.axis;\n    const vAxis = vScale.axis;\n    const labels = iScale.getLabels();\n    const singleScale = iScale === vScale;\n    const parsed = new Array(count);\n    let i, ilen, index;\n\n    for (i = 0, ilen = count; i < ilen; ++i) {\n      index = i + start;\n      parsed[i] = {\n        [iAxis]: singleScale || iScale.parse(labels[index], index),\n        [vAxis]: vScale.parse(data[index], index)\n      };\n    }\n    return parsed;\n  }\n\n  /**\n\t * Parse array of arrays\n\t * @param {object} meta - dataset meta\n\t * @param {array} data - data array. Example [[1,2],[3,4]]\n\t * @param {number} start - start index\n\t * @param {number} count - number of items to parse\n\t * @returns {object} parsed item - item containing index and a parsed value\n\t * for each scale id.\n\t * Example: {x: 0, y: 1}\n\t * @protected\n\t */\n  parseArrayData(meta, data, start, count) {\n    const {xScale, yScale} = meta;\n    const parsed = new Array(count);\n    let i, ilen, index, item;\n\n    for (i = 0, ilen = count; i < ilen; ++i) {\n      index = i + start;\n      item = data[index];\n      parsed[i] = {\n        x: xScale.parse(item[0], index),\n        y: yScale.parse(item[1], index)\n      };\n    }\n    return parsed;\n  }\n\n  /**\n\t * Parse array of objects\n\t * @param {object} meta - dataset meta\n\t * @param {array} data - data array. Example [{x:1, y:5}, {x:2, y:10}]\n\t * @param {number} start - start index\n\t * @param {number} count - number of items to parse\n\t * @returns {object} parsed item - item containing index and a parsed value\n\t * for each scale id. _custom is optional\n\t * Example: {xScale0: 0, yScale0: 1, _custom: {r: 10, foo: 'bar'}}\n\t * @protected\n\t */\n  parseObjectData(meta, data, start, count) {\n    const {xScale, yScale} = meta;\n    const {xAxisKey = 'x', yAxisKey = 'y'} = this._parsing;\n    const parsed = new Array(count);\n    let i, ilen, index, item;\n\n    for (i = 0, ilen = count; i < ilen; ++i) {\n      index = i + start;\n      item = data[index];\n      parsed[i] = {\n        x: xScale.parse(resolveObjectKey(item, xAxisKey), index),\n        y: yScale.parse(resolveObjectKey(item, yAxisKey), index)\n      };\n    }\n    return parsed;\n  }\n\n  /**\n\t * @protected\n\t */\n  getParsed(index) {\n    return this._cachedMeta._parsed[index];\n  }\n\n  /**\n\t * @protected\n\t */\n  getDataElement(index) {\n    return this._cachedMeta.data[index];\n  }\n\n  /**\n\t * @protected\n\t */\n  applyStack(scale, parsed, mode) {\n    const chart = this.chart;\n    const meta = this._cachedMeta;\n    const value = parsed[scale.axis];\n    const stack = {\n      keys: getSortedDatasetIndices(chart, true),\n      values: parsed._stacks[scale.axis]\n    };\n    return applyStack(stack, value, meta.index, {mode});\n  }\n\n  /**\n\t * @protected\n\t */\n  updateRangeFromParsed(range, scale, parsed, stack) {\n    const parsedValue = parsed[scale.axis];\n    let value = parsedValue === null ? NaN : parsedValue;\n    const values = stack && parsed._stacks[scale.axis];\n    if (stack && values) {\n      stack.values = values;\n      value = applyStack(stack, parsedValue, this._cachedMeta.index);\n    }\n    range.min = Math.min(range.min, value);\n    range.max = Math.max(range.max, value);\n  }\n\n  /**\n\t * @protected\n\t */\n  getMinMax(scale, canStack) {\n    const meta = this._cachedMeta;\n    const _parsed = meta._parsed;\n    const sorted = meta._sorted && scale === meta.iScale;\n    const ilen = _parsed.length;\n    const otherScale = this._getOtherScale(scale);\n    const stack = createStack(canStack, meta, this.chart);\n    const range = {min: Number.POSITIVE_INFINITY, max: Number.NEGATIVE_INFINITY};\n    const {min: otherMin, max: otherMax} = getUserBounds(otherScale);\n    let i, parsed;\n\n    function _skip() {\n      parsed = _parsed[i];\n      const otherValue = parsed[otherScale.axis];\n      return !isFinite(parsed[scale.axis]) || otherMin > otherValue || otherMax < otherValue;\n    }\n\n    for (i = 0; i < ilen; ++i) {\n      if (_skip()) {\n        continue;\n      }\n      this.updateRangeFromParsed(range, scale, parsed, stack);\n      if (sorted) {\n        // if the data is sorted, we don't need to check further from this end of array\n        break;\n      }\n    }\n    if (sorted) {\n      // in the sorted case, find first non-skipped value from other end of array\n      for (i = ilen - 1; i >= 0; --i) {\n        if (_skip()) {\n          continue;\n        }\n        this.updateRangeFromParsed(range, scale, parsed, stack);\n        break;\n      }\n    }\n    return range;\n  }\n\n  getAllParsedValues(scale) {\n    const parsed = this._cachedMeta._parsed;\n    const values = [];\n    let i, ilen, value;\n\n    for (i = 0, ilen = parsed.length; i < ilen; ++i) {\n      value = parsed[i][scale.axis];\n      if (isFinite(value)) {\n        values.push(value);\n      }\n    }\n    return values;\n  }\n\n  /**\n\t * @return {number|boolean}\n\t * @protected\n\t */\n  getMaxOverflow() {\n    return false;\n  }\n\n  /**\n\t * @protected\n\t */\n  getLabelAndValue(index) {\n    const meta = this._cachedMeta;\n    const iScale = meta.iScale;\n    const vScale = meta.vScale;\n    const parsed = this.getParsed(index);\n    return {\n      label: iScale ? '' + iScale.getLabelForValue(parsed[iScale.axis]) : '',\n      value: vScale ? '' + vScale.getLabelForValue(parsed[vScale.axis]) : ''\n    };\n  }\n\n  /**\n\t * @private\n\t */\n  _update(mode) {\n    const meta = this._cachedMeta;\n    this.update(mode || 'default');\n    meta._clip = toClip(valueOrDefault(this.options.clip, defaultClip(meta.xScale, meta.yScale, this.getMaxOverflow())));\n  }\n\n  /**\n\t * @param {string} mode\n\t */\n  update(mode) {} // eslint-disable-line no-unused-vars\n\n  draw() {\n    const ctx = this._ctx;\n    const chart = this.chart;\n    const meta = this._cachedMeta;\n    const elements = meta.data || [];\n    const area = chart.chartArea;\n    const active = [];\n    const start = this._drawStart || 0;\n    const count = this._drawCount || (elements.length - start);\n    const drawActiveElementsOnTop = this.options.drawActiveElementsOnTop;\n    let i;\n\n    if (meta.dataset) {\n      meta.dataset.draw(ctx, area, start, count);\n    }\n\n    for (i = start; i < start + count; ++i) {\n      const element = elements[i];\n      if (element.hidden) {\n        continue;\n      }\n      if (element.active && drawActiveElementsOnTop) {\n        active.push(element);\n      } else {\n        element.draw(ctx, area);\n      }\n    }\n\n    for (i = 0; i < active.length; ++i) {\n      active[i].draw(ctx, area);\n    }\n  }\n\n  /**\n\t * Returns a set of predefined style properties that should be used to represent the dataset\n\t * or the data if the index is specified\n\t * @param {number} index - data index\n\t * @param {boolean} [active] - true if hover\n\t * @return {object} style object\n\t */\n  getStyle(index, active) {\n    const mode = active ? 'active' : 'default';\n    return index === undefined && this._cachedMeta.dataset\n      ? this.resolveDatasetElementOptions(mode)\n      : this.resolveDataElementOptions(index || 0, mode);\n  }\n\n  /**\n\t * @protected\n\t */\n  getContext(index, active, mode) {\n    const dataset = this.getDataset();\n    let context;\n    if (index >= 0 && index < this._cachedMeta.data.length) {\n      const element = this._cachedMeta.data[index];\n      context = element.$context ||\n        (element.$context = createDataContext(this.getContext(), index, element));\n      context.parsed = this.getParsed(index);\n      context.raw = dataset.data[index];\n      context.index = context.dataIndex = index;\n    } else {\n      context = this.$context ||\n        (this.$context = createDatasetContext(this.chart.getContext(), this.index));\n      context.dataset = dataset;\n      context.index = context.datasetIndex = this.index;\n    }\n\n    context.active = !!active;\n    context.mode = mode;\n    return context;\n  }\n\n  /**\n\t * @param {string} [mode]\n\t * @protected\n\t */\n  resolveDatasetElementOptions(mode) {\n    return this._resolveElementOptions(this.datasetElementType.id, mode);\n  }\n\n  /**\n\t * @param {number} index\n\t * @param {string} [mode]\n\t * @protected\n\t */\n  resolveDataElementOptions(index, mode) {\n    return this._resolveElementOptions(this.dataElementType.id, mode, index);\n  }\n\n  /**\n\t * @private\n\t */\n  _resolveElementOptions(elementType, mode = 'default', index) {\n    const active = mode === 'active';\n    const cache = this._cachedDataOpts;\n    const cacheKey = elementType + '-' + mode;\n    const cached = cache[cacheKey];\n    const sharing = this.enableOptionSharing && defined(index);\n    if (cached) {\n      return cloneIfNotShared(cached, sharing);\n    }\n    const config = this.chart.config;\n    const scopeKeys = config.datasetElementScopeKeys(this._type, elementType);\n    const prefixes = active ? [`${elementType}Hover`, 'hover', elementType, ''] : [elementType, ''];\n    const scopes = config.getOptionScopes(this.getDataset(), scopeKeys);\n    const names = Object.keys(defaults.elements[elementType]);\n    // context is provided as a function, and is called only if needed,\n    // so we don't create a context for each element if not needed.\n    const context = () => this.getContext(index, active);\n    const values = config.resolveNamedOptions(scopes, names, context, prefixes);\n\n    if (values.$shared) {\n      // `$shared` indicates this set of options can be shared between multiple elements.\n      // Sharing is used to reduce number of properties to change during animation.\n      values.$shared = sharing;\n\n      // We cache options by `mode`, which can be 'active' for example. This enables us\n      // to have the 'active' element options and 'default' options to switch between\n      // when interacting.\n      cache[cacheKey] = Object.freeze(cloneIfNotShared(values, sharing));\n    }\n\n    return values;\n  }\n\n\n  /**\n\t * @private\n\t */\n  _resolveAnimations(index, transition, active) {\n    const chart = this.chart;\n    const cache = this._cachedDataOpts;\n    const cacheKey = `animation-${transition}`;\n    const cached = cache[cacheKey];\n    if (cached) {\n      return cached;\n    }\n    let options;\n    if (chart.options.animation !== false) {\n      const config = this.chart.config;\n      const scopeKeys = config.datasetAnimationScopeKeys(this._type, transition);\n      const scopes = config.getOptionScopes(this.getDataset(), scopeKeys);\n      options = config.createResolver(scopes, this.getContext(index, active, transition));\n    }\n    const animations = new Animations(chart, options && options.animations);\n    if (options && options._cacheable) {\n      cache[cacheKey] = Object.freeze(animations);\n    }\n    return animations;\n  }\n\n  /**\n\t * Utility for getting the options object shared between elements\n\t * @protected\n\t */\n  getSharedOptions(options) {\n    if (!options.$shared) {\n      return;\n    }\n    return this._sharedOptions || (this._sharedOptions = Object.assign({}, options));\n  }\n\n  /**\n\t * Utility for determining if `options` should be included in the updated properties\n\t * @protected\n\t */\n  includeOptions(mode, sharedOptions) {\n    return !sharedOptions || isDirectUpdateMode(mode) || this.chart._animationsDisabled;\n  }\n\n  /**\n   * @todo v4, rename to getSharedOptions and remove excess functions\n   */\n  _getSharedOptions(start, mode) {\n    const firstOpts = this.resolveDataElementOptions(start, mode);\n    const previouslySharedOptions = this._sharedOptions;\n    const sharedOptions = this.getSharedOptions(firstOpts);\n    const includeOptions = this.includeOptions(mode, sharedOptions) || (sharedOptions !== previouslySharedOptions);\n    this.updateSharedOptions(sharedOptions, mode, firstOpts);\n    return {sharedOptions, includeOptions};\n  }\n\n  /**\n\t * Utility for updating an element with new properties, using animations when appropriate.\n\t * @protected\n\t */\n  updateElement(element, index, properties, mode) {\n    if (isDirectUpdateMode(mode)) {\n      Object.assign(element, properties);\n    } else {\n      this._resolveAnimations(index, mode).update(element, properties);\n    }\n  }\n\n  /**\n\t * Utility to animate the shared options, that are potentially affecting multiple elements.\n\t * @protected\n\t */\n  updateSharedOptions(sharedOptions, mode, newOptions) {\n    if (sharedOptions && !isDirectUpdateMode(mode)) {\n      this._resolveAnimations(undefined, mode).update(sharedOptions, newOptions);\n    }\n  }\n\n  /**\n\t * @private\n\t */\n  _setStyle(element, index, mode, active) {\n    element.active = active;\n    const options = this.getStyle(index, active);\n    this._resolveAnimations(index, mode, active).update(element, {\n      // When going from active to inactive, we need to update to the shared options.\n      // This way the once hovered element will end up with the same original shared options instance, after animation.\n      options: (!active && this.getSharedOptions(options)) || options\n    });\n  }\n\n  removeHoverStyle(element, datasetIndex, index) {\n    this._setStyle(element, index, 'active', false);\n  }\n\n  setHoverStyle(element, datasetIndex, index) {\n    this._setStyle(element, index, 'active', true);\n  }\n\n  /**\n\t * @private\n\t */\n  _removeDatasetHoverStyle() {\n    const element = this._cachedMeta.dataset;\n\n    if (element) {\n      this._setStyle(element, undefined, 'active', false);\n    }\n  }\n\n  /**\n\t * @private\n\t */\n  _setDatasetHoverStyle() {\n    const element = this._cachedMeta.dataset;\n\n    if (element) {\n      this._setStyle(element, undefined, 'active', true);\n    }\n  }\n\n  /**\n\t * @private\n\t */\n  _resyncElements(resetNewElements) {\n    const data = this._data;\n    const elements = this._cachedMeta.data;\n\n    // Apply changes detected through array listeners\n    for (const [method, arg1, arg2] of this._syncList) {\n      this[method](arg1, arg2);\n    }\n    this._syncList = [];\n\n    const numMeta = elements.length;\n    const numData = data.length;\n    const count = Math.min(numData, numMeta);\n\n    if (count) {\n      // TODO: It is not optimal to always parse the old data\n      // This is done because we are not detecting direct assignments:\n      // chart.data.datasets[0].data[5] = 10;\n      // chart.data.datasets[0].data[5].y = 10;\n      this.parse(0, count);\n    }\n\n    if (numData > numMeta) {\n      this._insertElements(numMeta, numData - numMeta, resetNewElements);\n    } else if (numData < numMeta) {\n      this._removeElements(numData, numMeta - numData);\n    }\n  }\n\n  /**\n\t * @private\n\t */\n  _insertElements(start, count, resetNewElements = true) {\n    const meta = this._cachedMeta;\n    const data = meta.data;\n    const end = start + count;\n    let i;\n\n    const move = (arr) => {\n      arr.length += count;\n      for (i = arr.length - 1; i >= end; i--) {\n        arr[i] = arr[i - count];\n      }\n    };\n    move(data);\n\n    for (i = start; i < end; ++i) {\n      data[i] = new this.dataElementType();\n    }\n\n    if (this._parsing) {\n      move(meta._parsed);\n    }\n    this.parse(start, count);\n\n    if (resetNewElements) {\n      this.updateElements(data, start, count, 'reset');\n    }\n  }\n\n  updateElements(element, start, count, mode) {} // eslint-disable-line no-unused-vars\n\n  /**\n\t * @private\n\t */\n  _removeElements(start, count) {\n    const meta = this._cachedMeta;\n    if (this._parsing) {\n      const removed = meta._parsed.splice(start, count);\n      if (meta._stacked) {\n        clearStacks(meta, removed);\n      }\n    }\n    meta.data.splice(start, count);\n  }\n\n  /**\n\t * @private\n   */\n  _sync(args) {\n    if (this._parsing) {\n      this._syncList.push(args);\n    } else {\n      const [method, arg1, arg2] = args;\n      this[method](arg1, arg2);\n    }\n    this.chart._dataChanges.push([this.index, ...args]);\n  }\n\n  /**\n\t * @private\n\t */\n  _onDataPush() {\n    const count = arguments.length;\n    this._sync(['_insertElements', this.getDataset().data.length - count, count]);\n  }\n\n  /**\n\t * @private\n\t */\n  _onDataPop() {\n    this._sync(['_removeElements', this._cachedMeta.data.length - 1, 1]);\n  }\n\n  /**\n\t * @private\n\t */\n  _onDataShift() {\n    this._sync(['_removeElements', 0, 1]);\n  }\n\n  /**\n\t * @private\n\t */\n  _onDataSplice(start, count) {\n    if (count) {\n      this._sync(['_removeElements', start, count]);\n    }\n    const newCount = arguments.length - 2;\n    if (newCount) {\n      this._sync(['_insertElements', start, newCount]);\n    }\n  }\n\n  /**\n\t * @private\n\t */\n  _onDataUnshift() {\n    this._sync(['_insertElements', 0, arguments.length]);\n  }\n}\n","import {isNumber} from '../helpers/helpers.math';\n\nexport default class Element {\n\n  /**\n   * @type any\n   */\n  static defaults = {};\n\n  /**\n   * @type any\n   */\n  static defaultRoutes = undefined;\n\n  constructor() {\n    this.x = undefined;\n    this.y = undefined;\n    this.active = false;\n    this.options = undefined;\n    this.$animations = undefined;\n  }\n\n  /**\n\t * @param {boolean} [useFinalPosition]\n\t */\n  tooltipPosition(useFinalPosition) {\n    const {x, y} = this.getProps(['x', 'y'], useFinalPosition);\n    return {x, y};\n  }\n\n  hasValue() {\n    return isNumber(this.x) && isNumber(this.y);\n  }\n\n  /**\n\t * Gets the current or final value of each prop. Can return extra properties (whole object).\n\t * @param {string[]} props - properties to get\n\t * @param {boolean} [final] - get the final value (animation target)\n\t * @return {object}\n\t */\n  getProps(props, final) {\n    const anims = this.$animations;\n    if (!final || !anims) {\n      // let's not create an object, if not needed\n      return this;\n    }\n    const ret = {};\n    props.forEach(prop => {\n      ret[prop] = anims[prop] && anims[prop].active() ? anims[prop]._to : this[prop];\n    });\n    return ret;\n  }\n}\n","import {isNullOrUndef, valueOrDefault} from '../helpers/helpers.core';\nimport {_factorize} from '../helpers/helpers.math';\n\n\n/**\n * @typedef { import(\"./core.controller\").default } Chart\n * @typedef {{value:number | string, label?:string, major?:boolean, $context?:any}} Tick\n */\n\n/**\n * Returns a subset of ticks to be plotted to avoid overlapping labels.\n * @param {import('./core.scale').default} scale\n * @param {Tick[]} ticks\n * @return {Tick[]}\n * @private\n */\nexport function autoSkip(scale, ticks) {\n  const tickOpts = scale.options.ticks;\n  const ticksLimit = tickOpts.maxTicksLimit || determineMaxTicks(scale);\n  const majorIndices = tickOpts.major.enabled ? getMajorIndices(ticks) : [];\n  const numMajorIndices = majorIndices.length;\n  const first = majorIndices[0];\n  const last = majorIndices[numMajorIndices - 1];\n  const newTicks = [];\n\n  // If there are too many major ticks to display them all\n  if (numMajorIndices > ticksLimit) {\n    skipMajors(ticks, newTicks, majorIndices, numMajorIndices / ticksLimit);\n    return newTicks;\n  }\n\n  const spacing = calculateSpacing(majorIndices, ticks, ticksLimit);\n\n  if (numMajorIndices > 0) {\n    let i, ilen;\n    const avgMajorSpacing = numMajorIndices > 1 ? Math.round((last - first) / (numMajorIndices - 1)) : null;\n    skip(ticks, newTicks, spacing, isNullOrUndef(avgMajorSpacing) ? 0 : first - avgMajorSpacing, first);\n    for (i = 0, ilen = numMajorIndices - 1; i < ilen; i++) {\n      skip(ticks, newTicks, spacing, majorIndices[i], majorIndices[i + 1]);\n    }\n    skip(ticks, newTicks, spacing, last, isNullOrUndef(avgMajorSpacing) ? ticks.length : last + avgMajorSpacing);\n    return newTicks;\n  }\n  skip(ticks, newTicks, spacing);\n  return newTicks;\n}\n\nfunction determineMaxTicks(scale) {\n  const offset = scale.options.offset;\n  const tickLength = scale._tickSize();\n  const maxScale = scale._length / tickLength + (offset ? 0 : 1);\n  const maxChart = scale._maxLength / tickLength;\n  return Math.floor(Math.min(maxScale, maxChart));\n}\n\n/**\n * @param {number[]} majorIndices\n * @param {Tick[]} ticks\n * @param {number} ticksLimit\n */\nfunction calculateSpacing(majorIndices, ticks, ticksLimit) {\n  const evenMajorSpacing = getEvenSpacing(majorIndices);\n  const spacing = ticks.length / ticksLimit;\n\n  // If the major ticks are evenly spaced apart, place the minor ticks\n  // so that they divide the major ticks into even chunks\n  if (!evenMajorSpacing) {\n    return Math.max(spacing, 1);\n  }\n\n  const factors = _factorize(evenMajorSpacing);\n  for (let i = 0, ilen = factors.length - 1; i < ilen; i++) {\n    const factor = factors[i];\n    if (factor > spacing) {\n      return factor;\n    }\n  }\n  return Math.max(spacing, 1);\n}\n\n/**\n * @param {Tick[]} ticks\n */\nfunction getMajorIndices(ticks) {\n  const result = [];\n  let i, ilen;\n  for (i = 0, ilen = ticks.length; i < ilen; i++) {\n    if (ticks[i].major) {\n      result.push(i);\n    }\n  }\n  return result;\n}\n\n/**\n * @param {Tick[]} ticks\n * @param {Tick[]} newTicks\n * @param {number[]} majorIndices\n * @param {number} spacing\n */\nfunction skipMajors(ticks, newTicks, majorIndices, spacing) {\n  let count = 0;\n  let next = majorIndices[0];\n  let i;\n\n  spacing = Math.ceil(spacing);\n  for (i = 0; i < ticks.length; i++) {\n    if (i === next) {\n      newTicks.push(ticks[i]);\n      count++;\n      next = majorIndices[count * spacing];\n    }\n  }\n}\n\n/**\n * @param {Tick[]} ticks\n * @param {Tick[]} newTicks\n * @param {number} spacing\n * @param {number} [majorStart]\n * @param {number} [majorEnd]\n */\nfunction skip(ticks, newTicks, spacing, majorStart, majorEnd) {\n  const start = valueOrDefault(majorStart, 0);\n  const end = Math.min(valueOrDefault(majorEnd, ticks.length), ticks.length);\n  let count = 0;\n  let length, i, next;\n\n  spacing = Math.ceil(spacing);\n  if (majorEnd) {\n    length = majorEnd - majorStart;\n    spacing = length / Math.floor(length / spacing);\n  }\n\n  next = start;\n\n  while (next < 0) {\n    count++;\n    next = Math.round(start + count * spacing);\n  }\n\n  for (i = Math.max(start, 0); i < end; i++) {\n    if (i === next) {\n      newTicks.push(ticks[i]);\n      count++;\n      next = Math.round(start + count * spacing);\n    }\n  }\n}\n\n\n/**\n * @param {number[]} arr\n */\nfunction getEvenSpacing(arr) {\n  const len = arr.length;\n  let i, diff;\n\n  if (len < 2) {\n    return false;\n  }\n\n  for (diff = arr[0], i = 1; i < len; ++i) {\n    if (arr[i] - arr[i - 1] !== diff) {\n      return false;\n    }\n  }\n  return diff;\n}\n","import Element from './core.element';\nimport {_alignPixel, _measureText, renderText, clipArea, unclipArea} from '../helpers/helpers.canvas';\nimport {callback as call, each, finiteOrDefault, isArray, isFinite, isNullOrUndef, isObject, valueOrDefault} from '../helpers/helpers.core';\nimport {toDegrees, toRadians, _int16Range, _limitValue, HALF_PI} from '../helpers/helpers.math';\nimport {_alignStartEnd, _toLeftRightCenter} from '../helpers/helpers.extras';\nimport {createContext, toFont, toPadding, _addGrace} from '../helpers/helpers.options';\nimport {autoSkip} from './core.scale.autoskip';\n\nconst reverseAlign = (align) => align === 'left' ? 'right' : align === 'right' ? 'left' : align;\nconst offsetFromEdge = (scale, edge, offset) => edge === 'top' || edge === 'left' ? scale[edge] + offset : scale[edge] - offset;\n\n/**\n * @typedef { import(\"./core.controller\").default } Chart\n * @typedef {{value:number | string, label?:string, major?:boolean, $context?:any}} Tick\n */\n\n/**\n * Returns a new array containing numItems from arr\n * @param {any[]} arr\n * @param {number} numItems\n */\nfunction sample(arr, numItems) {\n  const result = [];\n  const increment = arr.length / numItems;\n  const len = arr.length;\n  let i = 0;\n\n  for (; i < len; i += increment) {\n    result.push(arr[Math.floor(i)]);\n  }\n  return result;\n}\n\n/**\n * @param {Scale} scale\n * @param {number} index\n * @param {boolean} offsetGridLines\n */\nfunction getPixelForGridLine(scale, index, offsetGridLines) {\n  const length = scale.ticks.length;\n  const validIndex = Math.min(index, length - 1);\n  const start = scale._startPixel;\n  const end = scale._endPixel;\n  const epsilon = 1e-6; // 1e-6 is margin in pixels for accumulated error.\n  let lineValue = scale.getPixelForTick(validIndex);\n  let offset;\n\n  if (offsetGridLines) {\n    if (length === 1) {\n      offset = Math.max(lineValue - start, end - lineValue);\n    } else if (index === 0) {\n      offset = (scale.getPixelForTick(1) - lineValue) / 2;\n    } else {\n      offset = (lineValue - scale.getPixelForTick(validIndex - 1)) / 2;\n    }\n    lineValue += validIndex < index ? offset : -offset;\n\n    // Return undefined if the pixel is out of the range\n    if (lineValue < start - epsilon || lineValue > end + epsilon) {\n      return;\n    }\n  }\n  return lineValue;\n}\n\n/**\n * @param {object} caches\n * @param {number} length\n */\nfunction garbageCollect(caches, length) {\n  each(caches, (cache) => {\n    const gc = cache.gc;\n    const gcLen = gc.length / 2;\n    let i;\n    if (gcLen > length) {\n      for (i = 0; i < gcLen; ++i) {\n        delete cache.data[gc[i]];\n      }\n      gc.splice(0, gcLen);\n    }\n  });\n}\n\n/**\n * @param {object} options\n */\nfunction getTickMarkLength(options) {\n  return options.drawTicks ? options.tickLength : 0;\n}\n\n/**\n * @param {object} options\n */\nfunction getTitleHeight(options, fallback) {\n  if (!options.display) {\n    return 0;\n  }\n\n  const font = toFont(options.font, fallback);\n  const padding = toPadding(options.padding);\n  const lines = isArray(options.text) ? options.text.length : 1;\n\n  return (lines * font.lineHeight) + padding.height;\n}\n\nfunction createScaleContext(parent, scale) {\n  return createContext(parent, {\n    scale,\n    type: 'scale'\n  });\n}\n\nfunction createTickContext(parent, index, tick) {\n  return createContext(parent, {\n    tick,\n    index,\n    type: 'tick'\n  });\n}\n\nfunction titleAlign(align, position, reverse) {\n  let ret = _toLeftRightCenter(align);\n  if ((reverse && position !== 'right') || (!reverse && position === 'right')) {\n    ret = reverseAlign(ret);\n  }\n  return ret;\n}\n\nfunction titleArgs(scale, offset, position, align) {\n  const {top, left, bottom, right, chart} = scale;\n  const {chartArea, scales} = chart;\n  let rotation = 0;\n  let maxWidth, titleX, titleY;\n  const height = bottom - top;\n  const width = right - left;\n\n  if (scale.isHorizontal()) {\n    titleX = _alignStartEnd(align, left, right);\n\n    if (isObject(position)) {\n      const positionAxisID = Object.keys(position)[0];\n      const value = position[positionAxisID];\n      titleY = scales[positionAxisID].getPixelForValue(value) + height - offset;\n    } else if (position === 'center') {\n      titleY = (chartArea.bottom + chartArea.top) / 2 + height - offset;\n    } else {\n      titleY = offsetFromEdge(scale, position, offset);\n    }\n    maxWidth = right - left;\n  } else {\n    if (isObject(position)) {\n      const positionAxisID = Object.keys(position)[0];\n      const value = position[positionAxisID];\n      titleX = scales[positionAxisID].getPixelForValue(value) - width + offset;\n    } else if (position === 'center') {\n      titleX = (chartArea.left + chartArea.right) / 2 - width + offset;\n    } else {\n      titleX = offsetFromEdge(scale, position, offset);\n    }\n    titleY = _alignStartEnd(align, bottom, top);\n    rotation = position === 'left' ? -HALF_PI : HALF_PI;\n  }\n  return {titleX, titleY, maxWidth, rotation};\n}\n\nexport default class Scale extends Element {\n\n  // eslint-disable-next-line max-statements\n  constructor(cfg) {\n    super();\n\n    /** @type {string} */\n    this.id = cfg.id;\n    /** @type {string} */\n    this.type = cfg.type;\n    /** @type {object} */\n    this.options = undefined;\n    /** @type {CanvasRenderingContext2D} */\n    this.ctx = cfg.ctx;\n    /** @type {Chart} */\n    this.chart = cfg.chart;\n\n    // implements box\n    /** @type {number} */\n    this.top = undefined;\n    /** @type {number} */\n    this.bottom = undefined;\n    /** @type {number} */\n    this.left = undefined;\n    /** @type {number} */\n    this.right = undefined;\n    /** @type {number} */\n    this.width = undefined;\n    /** @type {number} */\n    this.height = undefined;\n    this._margins = {\n      left: 0,\n      right: 0,\n      top: 0,\n      bottom: 0\n    };\n    /** @type {number} */\n    this.maxWidth = undefined;\n    /** @type {number} */\n    this.maxHeight = undefined;\n    /** @type {number} */\n    this.paddingTop = undefined;\n    /** @type {number} */\n    this.paddingBottom = undefined;\n    /** @type {number} */\n    this.paddingLeft = undefined;\n    /** @type {number} */\n    this.paddingRight = undefined;\n\n    // scale-specific properties\n    /** @type {string=} */\n    this.axis = undefined;\n    /** @type {number=} */\n    this.labelRotation = undefined;\n    this.min = undefined;\n    this.max = undefined;\n    this._range = undefined;\n    /** @type {Tick[]} */\n    this.ticks = [];\n    /** @type {object[]|null} */\n    this._gridLineItems = null;\n    /** @type {object[]|null} */\n    this._labelItems = null;\n    /** @type {object|null} */\n    this._labelSizes = null;\n    this._length = 0;\n    this._maxLength = 0;\n    this._longestTextCache = {};\n    /** @type {number} */\n    this._startPixel = undefined;\n    /** @type {number} */\n    this._endPixel = undefined;\n    this._reversePixels = false;\n    this._userMax = undefined;\n    this._userMin = undefined;\n    this._suggestedMax = undefined;\n    this._suggestedMin = undefined;\n    this._ticksLength = 0;\n    this._borderValue = 0;\n    this._cache = {};\n    this._dataLimitsCached = false;\n    this.$context = undefined;\n  }\n\n  /**\n\t * @param {object} options\n\t * @since 3.0\n\t */\n  init(options) {\n    this.options = options.setContext(this.getContext());\n\n    this.axis = options.axis;\n\n    // parse min/max value, so we can properly determine min/max for other scales\n    this._userMin = this.parse(options.min);\n    this._userMax = this.parse(options.max);\n    this._suggestedMin = this.parse(options.suggestedMin);\n    this._suggestedMax = this.parse(options.suggestedMax);\n  }\n\n  /**\n\t * Parse a supported input value to internal representation.\n\t * @param {*} raw\n\t * @param {number} [index]\n\t * @since 3.0\n\t */\n  parse(raw, index) { // eslint-disable-line no-unused-vars\n    return raw;\n  }\n\n  /**\n\t * @return {{min: number, max: number, minDefined: boolean, maxDefined: boolean}}\n\t * @protected\n\t * @since 3.0\n\t */\n  getUserBounds() {\n    let {_userMin, _userMax, _suggestedMin, _suggestedMax} = this;\n    _userMin = finiteOrDefault(_userMin, Number.POSITIVE_INFINITY);\n    _userMax = finiteOrDefault(_userMax, Number.NEGATIVE_INFINITY);\n    _suggestedMin = finiteOrDefault(_suggestedMin, Number.POSITIVE_INFINITY);\n    _suggestedMax = finiteOrDefault(_suggestedMax, Number.NEGATIVE_INFINITY);\n    return {\n      min: finiteOrDefault(_userMin, _suggestedMin),\n      max: finiteOrDefault(_userMax, _suggestedMax),\n      minDefined: isFinite(_userMin),\n      maxDefined: isFinite(_userMax)\n    };\n  }\n\n  /**\n\t * @param {boolean} canStack\n\t * @return {{min: number, max: number}}\n\t * @protected\n\t * @since 3.0\n\t */\n  getMinMax(canStack) {\n    // eslint-disable-next-line prefer-const\n    let {min, max, minDefined, maxDefined} = this.getUserBounds();\n    let range;\n\n    if (minDefined && maxDefined) {\n      return {min, max};\n    }\n\n    const metas = this.getMatchingVisibleMetas();\n    for (let i = 0, ilen = metas.length; i < ilen; ++i) {\n      range = metas[i].controller.getMinMax(this, canStack);\n      if (!minDefined) {\n        min = Math.min(min, range.min);\n      }\n      if (!maxDefined) {\n        max = Math.max(max, range.max);\n      }\n    }\n\n    // Make sure min <= max when only min or max is defined by user and the data is outside that range\n    min = maxDefined && min > max ? max : min;\n    max = minDefined && min > max ? min : max;\n\n    return {\n      min: finiteOrDefault(min, finiteOrDefault(max, min)),\n      max: finiteOrDefault(max, finiteOrDefault(min, max))\n    };\n  }\n\n  /**\n\t * Get the padding needed for the scale\n\t * @return {{top: number, left: number, bottom: number, right: number}} the necessary padding\n\t * @private\n\t */\n  getPadding() {\n    return {\n      left: this.paddingLeft || 0,\n      top: this.paddingTop || 0,\n      right: this.paddingRight || 0,\n      bottom: this.paddingBottom || 0\n    };\n  }\n\n  /**\n\t * Returns the scale tick objects\n\t * @return {Tick[]}\n\t * @since 2.7\n\t */\n  getTicks() {\n    return this.ticks;\n  }\n\n  /**\n\t * @return {string[]}\n\t */\n  getLabels() {\n    const data = this.chart.data;\n    return this.options.labels || (this.isHorizontal() ? data.xLabels : data.yLabels) || data.labels || [];\n  }\n\n  // When a new layout is created, reset the data limits cache\n  beforeLayout() {\n    this._cache = {};\n    this._dataLimitsCached = false;\n  }\n\n  // These methods are ordered by lifecycle. Utilities then follow.\n  // Any function defined here is inherited by all scale types.\n  // Any function can be extended by the scale type\n\n  beforeUpdate() {\n    call(this.options.beforeUpdate, [this]);\n  }\n\n  /**\n\t * @param {number} maxWidth - the max width in pixels\n\t * @param {number} maxHeight - the max height in pixels\n\t * @param {{top: number, left: number, bottom: number, right: number}} margins - the space between the edge of the other scales and edge of the chart\n\t *   This space comes from two sources:\n\t *     - padding - space that's required to show the labels at the edges of the scale\n\t *     - thickness of scales or legends in another orientation\n\t */\n  update(maxWidth, maxHeight, margins) {\n    const {beginAtZero, grace, ticks: tickOpts} = this.options;\n    const sampleSize = tickOpts.sampleSize;\n\n    // Update Lifecycle - Probably don't want to ever extend or overwrite this function ;)\n    this.beforeUpdate();\n\n    // Absorb the master measurements\n    this.maxWidth = maxWidth;\n    this.maxHeight = maxHeight;\n    this._margins = margins = Object.assign({\n      left: 0,\n      right: 0,\n      top: 0,\n      bottom: 0\n    }, margins);\n\n    this.ticks = null;\n    this._labelSizes = null;\n    this._gridLineItems = null;\n    this._labelItems = null;\n\n    // Dimensions\n    this.beforeSetDimensions();\n    this.setDimensions();\n    this.afterSetDimensions();\n\n    this._maxLength = this.isHorizontal()\n      ? this.width + margins.left + margins.right\n      : this.height + margins.top + margins.bottom;\n\n    // Data min/max\n    if (!this._dataLimitsCached) {\n      this.beforeDataLimits();\n      this.determineDataLimits();\n      this.afterDataLimits();\n      this._range = _addGrace(this, grace, beginAtZero);\n      this._dataLimitsCached = true;\n    }\n\n    this.beforeBuildTicks();\n\n    this.ticks = this.buildTicks() || [];\n\n    // Allow modification of ticks in callback.\n    this.afterBuildTicks();\n\n    // Compute tick rotation and fit using a sampled subset of labels\n    // We generally don't need to compute the size of every single label for determining scale size\n    const samplingEnabled = sampleSize < this.ticks.length;\n    this._convertTicksToLabels(samplingEnabled ? sample(this.ticks, sampleSize) : this.ticks);\n\n    // configure is called twice, once here, once from core.controller.updateLayout.\n    // Here we haven't been positioned yet, but dimensions are correct.\n    // Variables set in configure are needed for calculateLabelRotation, and\n    // it's ok that coordinates are not correct there, only dimensions matter.\n    this.configure();\n\n    // Tick Rotation\n    this.beforeCalculateLabelRotation();\n    this.calculateLabelRotation(); // Preconditions: number of ticks and sizes of largest labels must be calculated beforehand\n    this.afterCalculateLabelRotation();\n\n    // Auto-skip\n    if (tickOpts.display && (tickOpts.autoSkip || tickOpts.source === 'auto')) {\n      this.ticks = autoSkip(this, this.ticks);\n      this._labelSizes = null;\n      this.afterAutoSkip();\n    }\n\n    if (samplingEnabled) {\n      // Generate labels using all non-skipped ticks\n      this._convertTicksToLabels(this.ticks);\n    }\n\n    this.beforeFit();\n    this.fit(); // Preconditions: label rotation and label sizes must be calculated beforehand\n    this.afterFit();\n\n    // IMPORTANT: after this point, we consider that `this.ticks` will NEVER change!\n\n    this.afterUpdate();\n  }\n\n  /**\n\t * @protected\n\t */\n  configure() {\n    let reversePixels = this.options.reverse;\n    let startPixel, endPixel;\n\n    if (this.isHorizontal()) {\n      startPixel = this.left;\n      endPixel = this.right;\n    } else {\n      startPixel = this.top;\n      endPixel = this.bottom;\n      // by default vertical scales are from bottom to top, so pixels are reversed\n      reversePixels = !reversePixels;\n    }\n    this._startPixel = startPixel;\n    this._endPixel = endPixel;\n    this._reversePixels = reversePixels;\n    this._length = endPixel - startPixel;\n    this._alignToPixels = this.options.alignToPixels;\n  }\n\n  afterUpdate() {\n    call(this.options.afterUpdate, [this]);\n  }\n\n  //\n\n  beforeSetDimensions() {\n    call(this.options.beforeSetDimensions, [this]);\n  }\n  setDimensions() {\n    // Set the unconstrained dimension before label rotation\n    if (this.isHorizontal()) {\n      // Reset position before calculating rotation\n      this.width = this.maxWidth;\n      this.left = 0;\n      this.right = this.width;\n    } else {\n      this.height = this.maxHeight;\n\n      // Reset position before calculating rotation\n      this.top = 0;\n      this.bottom = this.height;\n    }\n\n    // Reset padding\n    this.paddingLeft = 0;\n    this.paddingTop = 0;\n    this.paddingRight = 0;\n    this.paddingBottom = 0;\n  }\n  afterSetDimensions() {\n    call(this.options.afterSetDimensions, [this]);\n  }\n\n  _callHooks(name) {\n    this.chart.notifyPlugins(name, this.getContext());\n    call(this.options[name], [this]);\n  }\n\n  // Data limits\n  beforeDataLimits() {\n    this._callHooks('beforeDataLimits');\n  }\n  determineDataLimits() {}\n  afterDataLimits() {\n    this._callHooks('afterDataLimits');\n  }\n\n  //\n  beforeBuildTicks() {\n    this._callHooks('beforeBuildTicks');\n  }\n  /**\n\t * @return {object[]} the ticks\n\t */\n  buildTicks() {\n    return [];\n  }\n  afterBuildTicks() {\n    this._callHooks('afterBuildTicks');\n  }\n\n  beforeTickToLabelConversion() {\n    call(this.options.beforeTickToLabelConversion, [this]);\n  }\n  /**\n\t * Convert ticks to label strings\n\t * @param {Tick[]} ticks\n\t */\n  generateTickLabels(ticks) {\n    const tickOpts = this.options.ticks;\n    let i, ilen, tick;\n    for (i = 0, ilen = ticks.length; i < ilen; i++) {\n      tick = ticks[i];\n      tick.label = call(tickOpts.callback, [tick.value, i, ticks], this);\n    }\n  }\n  afterTickToLabelConversion() {\n    call(this.options.afterTickToLabelConversion, [this]);\n  }\n\n  //\n\n  beforeCalculateLabelRotation() {\n    call(this.options.beforeCalculateLabelRotation, [this]);\n  }\n  calculateLabelRotation() {\n    const options = this.options;\n    const tickOpts = options.ticks;\n    const numTicks = this.ticks.length;\n    const minRotation = tickOpts.minRotation || 0;\n    const maxRotation = tickOpts.maxRotation;\n    let labelRotation = minRotation;\n    let tickWidth, maxHeight, maxLabelDiagonal;\n\n    if (!this._isVisible() || !tickOpts.display || minRotation >= maxRotation || numTicks <= 1 || !this.isHorizontal()) {\n      this.labelRotation = minRotation;\n      return;\n    }\n\n    const labelSizes = this._getLabelSizes();\n    const maxLabelWidth = labelSizes.widest.width;\n    const maxLabelHeight = labelSizes.highest.height;\n\n    // Estimate the width of each grid based on the canvas width, the maximum\n    // label width and the number of tick intervals\n    const maxWidth = _limitValue(this.chart.width - maxLabelWidth, 0, this.maxWidth);\n    tickWidth = options.offset ? this.maxWidth / numTicks : maxWidth / (numTicks - 1);\n\n    // Allow 3 pixels x2 padding either side for label readability\n    if (maxLabelWidth + 6 > tickWidth) {\n      tickWidth = maxWidth / (numTicks - (options.offset ? 0.5 : 1));\n      maxHeight = this.maxHeight - getTickMarkLength(options.grid)\n\t\t\t\t- tickOpts.padding - getTitleHeight(options.title, this.chart.options.font);\n      maxLabelDiagonal = Math.sqrt(maxLabelWidth * maxLabelWidth + maxLabelHeight * maxLabelHeight);\n      labelRotation = toDegrees(Math.min(\n        Math.asin(_limitValue((labelSizes.highest.height + 6) / tickWidth, -1, 1)),\n        Math.asin(_limitValue(maxHeight / maxLabelDiagonal, -1, 1)) - Math.asin(_limitValue(maxLabelHeight / maxLabelDiagonal, -1, 1))\n      ));\n      labelRotation = Math.max(minRotation, Math.min(maxRotation, labelRotation));\n    }\n\n    this.labelRotation = labelRotation;\n  }\n  afterCalculateLabelRotation() {\n    call(this.options.afterCalculateLabelRotation, [this]);\n  }\n  afterAutoSkip() {}\n\n  //\n\n  beforeFit() {\n    call(this.options.beforeFit, [this]);\n  }\n  fit() {\n    // Reset\n    const minSize = {\n      width: 0,\n      height: 0\n    };\n\n    const {chart, options: {ticks: tickOpts, title: titleOpts, grid: gridOpts}} = this;\n    const display = this._isVisible();\n    const isHorizontal = this.isHorizontal();\n\n    if (display) {\n      const titleHeight = getTitleHeight(titleOpts, chart.options.font);\n      if (isHorizontal) {\n        minSize.width = this.maxWidth;\n        minSize.height = getTickMarkLength(gridOpts) + titleHeight;\n      } else {\n        minSize.height = this.maxHeight; // fill all the height\n        minSize.width = getTickMarkLength(gridOpts) + titleHeight;\n      }\n\n      // Don't bother fitting the ticks if we are not showing the labels\n      if (tickOpts.display && this.ticks.length) {\n        const {first, last, widest, highest} = this._getLabelSizes();\n        const tickPadding = tickOpts.padding * 2;\n        const angleRadians = toRadians(this.labelRotation);\n        const cos = Math.cos(angleRadians);\n        const sin = Math.sin(angleRadians);\n\n        if (isHorizontal) {\n        // A horizontal axis is more constrained by the height.\n          const labelHeight = tickOpts.mirror ? 0 : sin * widest.width + cos * highest.height;\n          minSize.height = Math.min(this.maxHeight, minSize.height + labelHeight + tickPadding);\n        } else {\n        // A vertical axis is more constrained by the width. Labels are the\n        // dominant factor here, so get that length first and account for padding\n          const labelWidth = tickOpts.mirror ? 0 : cos * widest.width + sin * highest.height;\n\n          minSize.width = Math.min(this.maxWidth, minSize.width + labelWidth + tickPadding);\n        }\n        this._calculatePadding(first, last, sin, cos);\n      }\n    }\n\n    this._handleMargins();\n\n    if (isHorizontal) {\n      this.width = this._length = chart.width - this._margins.left - this._margins.right;\n      this.height = minSize.height;\n    } else {\n      this.width = minSize.width;\n      this.height = this._length = chart.height - this._margins.top - this._margins.bottom;\n    }\n  }\n\n  _calculatePadding(first, last, sin, cos) {\n    const {ticks: {align, padding}, position} = this.options;\n    const isRotated = this.labelRotation !== 0;\n    const labelsBelowTicks = position !== 'top' && this.axis === 'x';\n\n    if (this.isHorizontal()) {\n      const offsetLeft = this.getPixelForTick(0) - this.left;\n      const offsetRight = this.right - this.getPixelForTick(this.ticks.length - 1);\n      let paddingLeft = 0;\n      let paddingRight = 0;\n\n      // Ensure that our ticks are always inside the canvas. When rotated, ticks are right aligned\n      // which means that the right padding is dominated by the font height\n      if (isRotated) {\n        if (labelsBelowTicks) {\n          paddingLeft = cos * first.width;\n          paddingRight = sin * last.height;\n        } else {\n          paddingLeft = sin * first.height;\n          paddingRight = cos * last.width;\n        }\n      } else if (align === 'start') {\n        paddingRight = last.width;\n      } else if (align === 'end') {\n        paddingLeft = first.width;\n      } else if (align !== 'inner') {\n        paddingLeft = first.width / 2;\n        paddingRight = last.width / 2;\n      }\n\n      // Adjust padding taking into account changes in offsets\n      this.paddingLeft = Math.max((paddingLeft - offsetLeft + padding) * this.width / (this.width - offsetLeft), 0);\n      this.paddingRight = Math.max((paddingRight - offsetRight + padding) * this.width / (this.width - offsetRight), 0);\n    } else {\n      let paddingTop = last.height / 2;\n      let paddingBottom = first.height / 2;\n\n      if (align === 'start') {\n        paddingTop = 0;\n        paddingBottom = first.height;\n      } else if (align === 'end') {\n        paddingTop = last.height;\n        paddingBottom = 0;\n      }\n\n      this.paddingTop = paddingTop + padding;\n      this.paddingBottom = paddingBottom + padding;\n    }\n  }\n\n  /**\n\t * Handle margins and padding interactions\n\t * @private\n\t */\n  _handleMargins() {\n    if (this._margins) {\n      this._margins.left = Math.max(this.paddingLeft, this._margins.left);\n      this._margins.top = Math.max(this.paddingTop, this._margins.top);\n      this._margins.right = Math.max(this.paddingRight, this._margins.right);\n      this._margins.bottom = Math.max(this.paddingBottom, this._margins.bottom);\n    }\n  }\n\n  afterFit() {\n    call(this.options.afterFit, [this]);\n  }\n\n  // Shared Methods\n  /**\n\t * @return {boolean}\n\t */\n  isHorizontal() {\n    const {axis, position} = this.options;\n    return position === 'top' || position === 'bottom' || axis === 'x';\n  }\n  /**\n\t * @return {boolean}\n\t */\n  isFullSize() {\n    return this.options.fullSize;\n  }\n\n  /**\n\t * @param {Tick[]} ticks\n\t * @private\n\t */\n  _convertTicksToLabels(ticks) {\n    this.beforeTickToLabelConversion();\n\n    this.generateTickLabels(ticks);\n\n    // Ticks should be skipped when callback returns null or undef, so lets remove those.\n    let i, ilen;\n    for (i = 0, ilen = ticks.length; i < ilen; i++) {\n      if (isNullOrUndef(ticks[i].label)) {\n        ticks.splice(i, 1);\n        ilen--;\n        i--;\n      }\n    }\n\n    this.afterTickToLabelConversion();\n  }\n\n  /**\n\t * @return {{ first: object, last: object, widest: object, highest: object, widths: Array, heights: array }}\n\t * @private\n\t */\n  _getLabelSizes() {\n    let labelSizes = this._labelSizes;\n\n    if (!labelSizes) {\n      const sampleSize = this.options.ticks.sampleSize;\n      let ticks = this.ticks;\n      if (sampleSize < ticks.length) {\n        ticks = sample(ticks, sampleSize);\n      }\n\n      this._labelSizes = labelSizes = this._computeLabelSizes(ticks, ticks.length);\n    }\n\n    return labelSizes;\n  }\n\n  /**\n\t * Returns {width, height, offset} objects for the first, last, widest, highest tick\n\t * labels where offset indicates the anchor point offset from the top in pixels.\n\t * @return {{ first: object, last: object, widest: object, highest: object, widths: Array, heights: array }}\n\t * @private\n\t */\n  _computeLabelSizes(ticks, length) {\n    const {ctx, _longestTextCache: caches} = this;\n    const widths = [];\n    const heights = [];\n    let widestLabelSize = 0;\n    let highestLabelSize = 0;\n    let i, j, jlen, label, tickFont, fontString, cache, lineHeight, width, height, nestedLabel;\n\n    for (i = 0; i < length; ++i) {\n      label = ticks[i].label;\n      tickFont = this._resolveTickFontOptions(i);\n      ctx.font = fontString = tickFont.string;\n      cache = caches[fontString] = caches[fontString] || {data: {}, gc: []};\n      lineHeight = tickFont.lineHeight;\n      width = height = 0;\n      // Undefined labels and arrays should not be measured\n      if (!isNullOrUndef(label) && !isArray(label)) {\n        width = _measureText(ctx, cache.data, cache.gc, width, label);\n        height = lineHeight;\n      } else if (isArray(label)) {\n        // if it is an array let's measure each element\n        for (j = 0, jlen = label.length; j < jlen; ++j) {\n          nestedLabel = label[j];\n          // Undefined labels and arrays should not be measured\n          if (!isNullOrUndef(nestedLabel) && !isArray(nestedLabel)) {\n            width = _measureText(ctx, cache.data, cache.gc, width, nestedLabel);\n            height += lineHeight;\n          }\n        }\n      }\n      widths.push(width);\n      heights.push(height);\n      widestLabelSize = Math.max(width, widestLabelSize);\n      highestLabelSize = Math.max(height, highestLabelSize);\n    }\n    garbageCollect(caches, length);\n\n    const widest = widths.indexOf(widestLabelSize);\n    const highest = heights.indexOf(highestLabelSize);\n\n    const valueAt = (idx) => ({width: widths[idx] || 0, height: heights[idx] || 0});\n\n    return {\n      first: valueAt(0),\n      last: valueAt(length - 1),\n      widest: valueAt(widest),\n      highest: valueAt(highest),\n      widths,\n      heights,\n    };\n  }\n\n  /**\n\t * Used to get the label to display in the tooltip for the given value\n\t * @param {*} value\n\t * @return {string}\n\t */\n  getLabelForValue(value) {\n    return value;\n  }\n\n  /**\n\t * Returns the location of the given data point. Value can either be an index or a numerical value\n\t * The coordinate (0, 0) is at the upper-left corner of the canvas\n\t * @param {*} value\n\t * @param {number} [index]\n\t * @return {number}\n\t */\n  getPixelForValue(value, index) { // eslint-disable-line no-unused-vars\n    return NaN;\n  }\n\n  /**\n\t * Used to get the data value from a given pixel. This is the inverse of getPixelForValue\n\t * The coordinate (0, 0) is at the upper-left corner of the canvas\n\t * @param {number} pixel\n\t * @return {*}\n\t */\n  getValueForPixel(pixel) {} // eslint-disable-line no-unused-vars\n\n  /**\n\t * Returns the location of the tick at the given index\n\t * The coordinate (0, 0) is at the upper-left corner of the canvas\n\t * @param {number} index\n\t * @return {number}\n\t */\n  getPixelForTick(index) {\n    const ticks = this.ticks;\n    if (index < 0 || index > ticks.length - 1) {\n      return null;\n    }\n    return this.getPixelForValue(ticks[index].value);\n  }\n\n  /**\n\t * Utility for getting the pixel location of a percentage of scale\n\t * The coordinate (0, 0) is at the upper-left corner of the canvas\n\t * @param {number} decimal\n\t * @return {number}\n\t */\n  getPixelForDecimal(decimal) {\n    if (this._reversePixels) {\n      decimal = 1 - decimal;\n    }\n\n    const pixel = this._startPixel + decimal * this._length;\n    return _int16Range(this._alignToPixels ? _alignPixel(this.chart, pixel, 0) : pixel);\n  }\n\n  /**\n\t * @param {number} pixel\n\t * @return {number}\n\t */\n  getDecimalForPixel(pixel) {\n    const decimal = (pixel - this._startPixel) / this._length;\n    return this._reversePixels ? 1 - decimal : decimal;\n  }\n\n  /**\n\t * Returns the pixel for the minimum chart value\n\t * The coordinate (0, 0) is at the upper-left corner of the canvas\n\t * @return {number}\n\t */\n  getBasePixel() {\n    return this.getPixelForValue(this.getBaseValue());\n  }\n\n  /**\n\t * @return {number}\n\t */\n  getBaseValue() {\n    const {min, max} = this;\n\n    return min < 0 && max < 0 ? max :\n      min > 0 && max > 0 ? min :\n      0;\n  }\n\n  /**\n\t * @protected\n\t */\n  getContext(index) {\n    const ticks = this.ticks || [];\n\n    if (index >= 0 && index < ticks.length) {\n      const tick = ticks[index];\n      return tick.$context ||\n\t\t\t\t(tick.$context = createTickContext(this.getContext(), index, tick));\n    }\n    return this.$context ||\n\t\t\t(this.$context = createScaleContext(this.chart.getContext(), this));\n  }\n\n  /**\n\t * @return {number}\n\t * @private\n\t */\n  _tickSize() {\n    const optionTicks = this.options.ticks;\n\n    // Calculate space needed by label in axis direction.\n    const rot = toRadians(this.labelRotation);\n    const cos = Math.abs(Math.cos(rot));\n    const sin = Math.abs(Math.sin(rot));\n\n    const labelSizes = this._getLabelSizes();\n    const padding = optionTicks.autoSkipPadding || 0;\n    const w = labelSizes ? labelSizes.widest.width + padding : 0;\n    const h = labelSizes ? labelSizes.highest.height + padding : 0;\n\n    // Calculate space needed for 1 tick in axis direction.\n    return this.isHorizontal()\n      ? h * cos > w * sin ? w / cos : h / sin\n      : h * sin < w * cos ? h / cos : w / sin;\n  }\n\n  /**\n\t * @return {boolean}\n\t * @private\n\t */\n  _isVisible() {\n    const display = this.options.display;\n\n    if (display !== 'auto') {\n      return !!display;\n    }\n\n    return this.getMatchingVisibleMetas().length > 0;\n  }\n\n  /**\n\t * @private\n\t */\n  _computeGridLineItems(chartArea) {\n    const axis = this.axis;\n    const chart = this.chart;\n    const options = this.options;\n    const {grid, position} = options;\n    const offset = grid.offset;\n    const isHorizontal = this.isHorizontal();\n    const ticks = this.ticks;\n    const ticksLength = ticks.length + (offset ? 1 : 0);\n    const tl = getTickMarkLength(grid);\n    const items = [];\n\n    const borderOpts = grid.setContext(this.getContext());\n    const axisWidth = borderOpts.drawBorder ? borderOpts.borderWidth : 0;\n    const axisHalfWidth = axisWidth / 2;\n    const alignBorderValue = function(pixel) {\n      return _alignPixel(chart, pixel, axisWidth);\n    };\n    let borderValue, i, lineValue, alignedLineValue;\n    let tx1, ty1, tx2, ty2, x1, y1, x2, y2;\n\n    if (position === 'top') {\n      borderValue = alignBorderValue(this.bottom);\n      ty1 = this.bottom - tl;\n      ty2 = borderValue - axisHalfWidth;\n      y1 = alignBorderValue(chartArea.top) + axisHalfWidth;\n      y2 = chartArea.bottom;\n    } else if (position === 'bottom') {\n      borderValue = alignBorderValue(this.top);\n      y1 = chartArea.top;\n      y2 = alignBorderValue(chartArea.bottom) - axisHalfWidth;\n      ty1 = borderValue + axisHalfWidth;\n      ty2 = this.top + tl;\n    } else if (position === 'left') {\n      borderValue = alignBorderValue(this.right);\n      tx1 = this.right - tl;\n      tx2 = borderValue - axisHalfWidth;\n      x1 = alignBorderValue(chartArea.left) + axisHalfWidth;\n      x2 = chartArea.right;\n    } else if (position === 'right') {\n      borderValue = alignBorderValue(this.left);\n      x1 = chartArea.left;\n      x2 = alignBorderValue(chartArea.right) - axisHalfWidth;\n      tx1 = borderValue + axisHalfWidth;\n      tx2 = this.left + tl;\n    } else if (axis === 'x') {\n      if (position === 'center') {\n        borderValue = alignBorderValue((chartArea.top + chartArea.bottom) / 2 + 0.5);\n      } else if (isObject(position)) {\n        const positionAxisID = Object.keys(position)[0];\n        const value = position[positionAxisID];\n        borderValue = alignBorderValue(this.chart.scales[positionAxisID].getPixelForValue(value));\n      }\n\n      y1 = chartArea.top;\n      y2 = chartArea.bottom;\n      ty1 = borderValue + axisHalfWidth;\n      ty2 = ty1 + tl;\n    } else if (axis === 'y') {\n      if (position === 'center') {\n        borderValue = alignBorderValue((chartArea.left + chartArea.right) / 2);\n      } else if (isObject(position)) {\n        const positionAxisID = Object.keys(position)[0];\n        const value = position[positionAxisID];\n        borderValue = alignBorderValue(this.chart.scales[positionAxisID].getPixelForValue(value));\n      }\n\n      tx1 = borderValue - axisHalfWidth;\n      tx2 = tx1 - tl;\n      x1 = chartArea.left;\n      x2 = chartArea.right;\n    }\n\n    const limit = valueOrDefault(options.ticks.maxTicksLimit, ticksLength);\n    const step = Math.max(1, Math.ceil(ticksLength / limit));\n    for (i = 0; i < ticksLength; i += step) {\n      const optsAtIndex = grid.setContext(this.getContext(i));\n\n      const lineWidth = optsAtIndex.lineWidth;\n      const lineColor = optsAtIndex.color;\n      const borderDash = optsAtIndex.borderDash || [];\n      const borderDashOffset = optsAtIndex.borderDashOffset;\n\n      const tickWidth = optsAtIndex.tickWidth;\n      const tickColor = optsAtIndex.tickColor;\n      const tickBorderDash = optsAtIndex.tickBorderDash || [];\n      const tickBorderDashOffset = optsAtIndex.tickBorderDashOffset;\n\n      lineValue = getPixelForGridLine(this, i, offset);\n\n      // Skip if the pixel is out of the range\n      if (lineValue === undefined) {\n        continue;\n      }\n\n      alignedLineValue = _alignPixel(chart, lineValue, lineWidth);\n\n      if (isHorizontal) {\n        tx1 = tx2 = x1 = x2 = alignedLineValue;\n      } else {\n        ty1 = ty2 = y1 = y2 = alignedLineValue;\n      }\n\n      items.push({\n        tx1,\n        ty1,\n        tx2,\n        ty2,\n        x1,\n        y1,\n        x2,\n        y2,\n        width: lineWidth,\n        color: lineColor,\n        borderDash,\n        borderDashOffset,\n        tickWidth,\n        tickColor,\n        tickBorderDash,\n        tickBorderDashOffset,\n      });\n    }\n\n    this._ticksLength = ticksLength;\n    this._borderValue = borderValue;\n\n    return items;\n  }\n\n  /**\n\t * @private\n\t */\n  _computeLabelItems(chartArea) {\n    const axis = this.axis;\n    const options = this.options;\n    const {position, ticks: optionTicks} = options;\n    const isHorizontal = this.isHorizontal();\n    const ticks = this.ticks;\n    const {align, crossAlign, padding, mirror} = optionTicks;\n    const tl = getTickMarkLength(options.grid);\n    const tickAndPadding = tl + padding;\n    const hTickAndPadding = mirror ? -padding : tickAndPadding;\n    const rotation = -toRadians(this.labelRotation);\n    const items = [];\n    let i, ilen, tick, label, x, y, textAlign, pixel, font, lineHeight, lineCount, textOffset;\n    let textBaseline = 'middle';\n\n    if (position === 'top') {\n      y = this.bottom - hTickAndPadding;\n      textAlign = this._getXAxisLabelAlignment();\n    } else if (position === 'bottom') {\n      y = this.top + hTickAndPadding;\n      textAlign = this._getXAxisLabelAlignment();\n    } else if (position === 'left') {\n      const ret = this._getYAxisLabelAlignment(tl);\n      textAlign = ret.textAlign;\n      x = ret.x;\n    } else if (position === 'right') {\n      const ret = this._getYAxisLabelAlignment(tl);\n      textAlign = ret.textAlign;\n      x = ret.x;\n    } else if (axis === 'x') {\n      if (position === 'center') {\n        y = ((chartArea.top + chartArea.bottom) / 2) + tickAndPadding;\n      } else if (isObject(position)) {\n        const positionAxisID = Object.keys(position)[0];\n        const value = position[positionAxisID];\n        y = this.chart.scales[positionAxisID].getPixelForValue(value) + tickAndPadding;\n      }\n      textAlign = this._getXAxisLabelAlignment();\n    } else if (axis === 'y') {\n      if (position === 'center') {\n        x = ((chartArea.left + chartArea.right) / 2) - tickAndPadding;\n      } else if (isObject(position)) {\n        const positionAxisID = Object.keys(position)[0];\n        const value = position[positionAxisID];\n        x = this.chart.scales[positionAxisID].getPixelForValue(value);\n      }\n      textAlign = this._getYAxisLabelAlignment(tl).textAlign;\n    }\n\n    if (axis === 'y') {\n      if (align === 'start') {\n        textBaseline = 'top';\n      } else if (align === 'end') {\n        textBaseline = 'bottom';\n      }\n    }\n\n    const labelSizes = this._getLabelSizes();\n    for (i = 0, ilen = ticks.length; i < ilen; ++i) {\n      tick = ticks[i];\n      label = tick.label;\n\n      const optsAtIndex = optionTicks.setContext(this.getContext(i));\n      pixel = this.getPixelForTick(i) + optionTicks.labelOffset;\n      font = this._resolveTickFontOptions(i);\n      lineHeight = font.lineHeight;\n      lineCount = isArray(label) ? label.length : 1;\n      const halfCount = lineCount / 2;\n      const color = optsAtIndex.color;\n      const strokeColor = optsAtIndex.textStrokeColor;\n      const strokeWidth = optsAtIndex.textStrokeWidth;\n      let tickTextAlign = textAlign;\n\n      if (isHorizontal) {\n        x = pixel;\n\n        if (textAlign === 'inner') {\n          if (i === ilen - 1) {\n            tickTextAlign = !this.options.reverse ? 'right' : 'left';\n          } else if (i === 0) {\n            tickTextAlign = !this.options.reverse ? 'left' : 'right';\n          } else {\n            tickTextAlign = 'center';\n          }\n        }\n\n        if (position === 'top') {\n          if (crossAlign === 'near' || rotation !== 0) {\n            textOffset = -lineCount * lineHeight + lineHeight / 2;\n          } else if (crossAlign === 'center') {\n            textOffset = -labelSizes.highest.height / 2 - halfCount * lineHeight + lineHeight;\n          } else {\n            textOffset = -labelSizes.highest.height + lineHeight / 2;\n          }\n        } else {\n          // eslint-disable-next-line no-lonely-if\n          if (crossAlign === 'near' || rotation !== 0) {\n            textOffset = lineHeight / 2;\n          } else if (crossAlign === 'center') {\n            textOffset = labelSizes.highest.height / 2 - halfCount * lineHeight;\n          } else {\n            textOffset = labelSizes.highest.height - lineCount * lineHeight;\n          }\n        }\n        if (mirror) {\n          textOffset *= -1;\n        }\n      } else {\n        y = pixel;\n        textOffset = (1 - lineCount) * lineHeight / 2;\n      }\n\n      let backdrop;\n\n      if (optsAtIndex.showLabelBackdrop) {\n        const labelPadding = toPadding(optsAtIndex.backdropPadding);\n        const height = labelSizes.heights[i];\n        const width = labelSizes.widths[i];\n\n        let top = y + textOffset - labelPadding.top;\n        let left = x - labelPadding.left;\n\n        switch (textBaseline) {\n        case 'middle':\n          top -= height / 2;\n          break;\n        case 'bottom':\n          top -= height;\n          break;\n        default:\n          break;\n        }\n\n        switch (textAlign) {\n        case 'center':\n          left -= width / 2;\n          break;\n        case 'right':\n          left -= width;\n          break;\n        default:\n          break;\n        }\n\n        backdrop = {\n          left,\n          top,\n          width: width + labelPadding.width,\n          height: height + labelPadding.height,\n\n          color: optsAtIndex.backdropColor,\n        };\n      }\n\n      items.push({\n        rotation,\n        label,\n        font,\n        color,\n        strokeColor,\n        strokeWidth,\n        textOffset,\n        textAlign: tickTextAlign,\n        textBaseline,\n        translation: [x, y],\n        backdrop,\n      });\n    }\n\n    return items;\n  }\n\n  _getXAxisLabelAlignment() {\n    const {position, ticks} = this.options;\n    const rotation = -toRadians(this.labelRotation);\n\n    if (rotation) {\n      return position === 'top' ? 'left' : 'right';\n    }\n\n    let align = 'center';\n\n    if (ticks.align === 'start') {\n      align = 'left';\n    } else if (ticks.align === 'end') {\n      align = 'right';\n    } else if (ticks.align === 'inner') {\n      align = 'inner';\n    }\n\n    return align;\n  }\n\n  _getYAxisLabelAlignment(tl) {\n    const {position, ticks: {crossAlign, mirror, padding}} = this.options;\n    const labelSizes = this._getLabelSizes();\n    const tickAndPadding = tl + padding;\n    const widest = labelSizes.widest.width;\n\n    let textAlign;\n    let x;\n\n    if (position === 'left') {\n      if (mirror) {\n        x = this.right + padding;\n\n        if (crossAlign === 'near') {\n          textAlign = 'left';\n        } else if (crossAlign === 'center') {\n          textAlign = 'center';\n          x += (widest / 2);\n        } else {\n          textAlign = 'right';\n          x += widest;\n        }\n      } else {\n        x = this.right - tickAndPadding;\n\n        if (crossAlign === 'near') {\n          textAlign = 'right';\n        } else if (crossAlign === 'center') {\n          textAlign = 'center';\n          x -= (widest / 2);\n        } else {\n          textAlign = 'left';\n          x = this.left;\n        }\n      }\n    } else if (position === 'right') {\n      if (mirror) {\n        x = this.left + padding;\n\n        if (crossAlign === 'near') {\n          textAlign = 'right';\n        } else if (crossAlign === 'center') {\n          textAlign = 'center';\n          x -= (widest / 2);\n        } else {\n          textAlign = 'left';\n          x -= widest;\n        }\n      } else {\n        x = this.left + tickAndPadding;\n\n        if (crossAlign === 'near') {\n          textAlign = 'left';\n        } else if (crossAlign === 'center') {\n          textAlign = 'center';\n          x += widest / 2;\n        } else {\n          textAlign = 'right';\n          x = this.right;\n        }\n      }\n    } else {\n      textAlign = 'right';\n    }\n\n    return {textAlign, x};\n  }\n\n  /**\n\t * @private\n\t */\n  _computeLabelArea() {\n    if (this.options.ticks.mirror) {\n      return;\n    }\n\n    const chart = this.chart;\n    const position = this.options.position;\n\n    if (position === 'left' || position === 'right') {\n      return {top: 0, left: this.left, bottom: chart.height, right: this.right};\n    } if (position === 'top' || position === 'bottom') {\n      return {top: this.top, left: 0, bottom: this.bottom, right: chart.width};\n    }\n  }\n\n  /**\n   * @protected\n   */\n  drawBackground() {\n    const {ctx, options: {backgroundColor}, left, top, width, height} = this;\n    if (backgroundColor) {\n      ctx.save();\n      ctx.fillStyle = backgroundColor;\n      ctx.fillRect(left, top, width, height);\n      ctx.restore();\n    }\n  }\n\n  getLineWidthForValue(value) {\n    const grid = this.options.grid;\n    if (!this._isVisible() || !grid.display) {\n      return 0;\n    }\n    const ticks = this.ticks;\n    const index = ticks.findIndex(t => t.value === value);\n    if (index >= 0) {\n      const opts = grid.setContext(this.getContext(index));\n      return opts.lineWidth;\n    }\n    return 0;\n  }\n\n  /**\n\t * @protected\n\t */\n  drawGrid(chartArea) {\n    const grid = this.options.grid;\n    const ctx = this.ctx;\n    const items = this._gridLineItems || (this._gridLineItems = this._computeGridLineItems(chartArea));\n    let i, ilen;\n\n    const drawLine = (p1, p2, style) => {\n      if (!style.width || !style.color) {\n        return;\n      }\n      ctx.save();\n      ctx.lineWidth = style.width;\n      ctx.strokeStyle = style.color;\n      ctx.setLineDash(style.borderDash || []);\n      ctx.lineDashOffset = style.borderDashOffset;\n\n      ctx.beginPath();\n      ctx.moveTo(p1.x, p1.y);\n      ctx.lineTo(p2.x, p2.y);\n      ctx.stroke();\n      ctx.restore();\n    };\n\n    if (grid.display) {\n      for (i = 0, ilen = items.length; i < ilen; ++i) {\n        const item = items[i];\n\n        if (grid.drawOnChartArea) {\n          drawLine(\n            {x: item.x1, y: item.y1},\n            {x: item.x2, y: item.y2},\n            item\n          );\n        }\n\n        if (grid.drawTicks) {\n          drawLine(\n            {x: item.tx1, y: item.ty1},\n            {x: item.tx2, y: item.ty2},\n            {\n              color: item.tickColor,\n              width: item.tickWidth,\n              borderDash: item.tickBorderDash,\n              borderDashOffset: item.tickBorderDashOffset\n            }\n          );\n        }\n      }\n    }\n  }\n\n  /**\n\t * @protected\n\t */\n  drawBorder() {\n    const {chart, ctx, options: {grid}} = this;\n    const borderOpts = grid.setContext(this.getContext());\n    const axisWidth = grid.drawBorder ? borderOpts.borderWidth : 0;\n    if (!axisWidth) {\n      return;\n    }\n    const lastLineWidth = grid.setContext(this.getContext(0)).lineWidth;\n    const borderValue = this._borderValue;\n    let x1, x2, y1, y2;\n\n    if (this.isHorizontal()) {\n      x1 = _alignPixel(chart, this.left, axisWidth) - axisWidth / 2;\n      x2 = _alignPixel(chart, this.right, lastLineWidth) + lastLineWidth / 2;\n      y1 = y2 = borderValue;\n    } else {\n      y1 = _alignPixel(chart, this.top, axisWidth) - axisWidth / 2;\n      y2 = _alignPixel(chart, this.bottom, lastLineWidth) + lastLineWidth / 2;\n      x1 = x2 = borderValue;\n    }\n    ctx.save();\n    ctx.lineWidth = borderOpts.borderWidth;\n    ctx.strokeStyle = borderOpts.borderColor;\n\n    ctx.beginPath();\n    ctx.moveTo(x1, y1);\n    ctx.lineTo(x2, y2);\n    ctx.stroke();\n\n    ctx.restore();\n  }\n\n  /**\n\t * @protected\n\t */\n  drawLabels(chartArea) {\n    const optionTicks = this.options.ticks;\n\n    if (!optionTicks.display) {\n      return;\n    }\n\n    const ctx = this.ctx;\n\n    const area = this._computeLabelArea();\n    if (area) {\n      clipArea(ctx, area);\n    }\n\n    const items = this._labelItems || (this._labelItems = this._computeLabelItems(chartArea));\n    let i, ilen;\n\n    for (i = 0, ilen = items.length; i < ilen; ++i) {\n      const item = items[i];\n      const tickFont = item.font;\n      const label = item.label;\n\n      if (item.backdrop) {\n        ctx.fillStyle = item.backdrop.color;\n        ctx.fillRect(item.backdrop.left, item.backdrop.top, item.backdrop.width, item.backdrop.height);\n      }\n\n      let y = item.textOffset;\n      renderText(ctx, label, 0, y, tickFont, item);\n    }\n\n    if (area) {\n      unclipArea(ctx);\n    }\n  }\n\n  /**\n\t * @protected\n\t */\n  drawTitle() {\n    const {ctx, options: {position, title, reverse}} = this;\n\n    if (!title.display) {\n      return;\n    }\n\n    const font = toFont(title.font);\n    const padding = toPadding(title.padding);\n    const align = title.align;\n    let offset = font.lineHeight / 2;\n\n    if (position === 'bottom' || position === 'center' || isObject(position)) {\n      offset += padding.bottom;\n      if (isArray(title.text)) {\n        offset += font.lineHeight * (title.text.length - 1);\n      }\n    } else {\n      offset += padding.top;\n    }\n\n    const {titleX, titleY, maxWidth, rotation} = titleArgs(this, offset, position, align);\n\n    renderText(ctx, title.text, 0, 0, font, {\n      color: title.color,\n      maxWidth,\n      rotation,\n      textAlign: titleAlign(align, position, reverse),\n      textBaseline: 'middle',\n      translation: [titleX, titleY],\n    });\n  }\n\n  draw(chartArea) {\n    if (!this._isVisible()) {\n      return;\n    }\n\n    this.drawBackground();\n    this.drawGrid(chartArea);\n    this.drawBorder();\n    this.drawTitle();\n    this.drawLabels(chartArea);\n  }\n\n  /**\n\t * @return {object[]}\n\t * @private\n\t */\n  _layers() {\n    const opts = this.options;\n    const tz = opts.ticks && opts.ticks.z || 0;\n    const gz = valueOrDefault(opts.grid && opts.grid.z, -1);\n\n    if (!this._isVisible() || this.draw !== Scale.prototype.draw) {\n      // backward compatibility: draw has been overridden by custom scale\n      return [{\n        z: tz,\n        draw: (chartArea) => {\n          this.draw(chartArea);\n        }\n      }];\n    }\n\n    return [{\n      z: gz,\n      draw: (chartArea) => {\n        this.drawBackground();\n        this.drawGrid(chartArea);\n        this.drawTitle();\n      }\n    }, {\n      z: gz + 1, // TODO, v4 move border options to its own object and add z\n      draw: () => {\n        this.drawBorder();\n      }\n    }, {\n      z: tz,\n      draw: (chartArea) => {\n        this.drawLabels(chartArea);\n      }\n    }];\n  }\n\n  /**\n\t * Returns visible dataset metas that are attached to this scale\n\t * @param {string} [type] - if specified, also filter by dataset type\n\t * @return {object[]}\n\t */\n  getMatchingVisibleMetas(type) {\n    const metas = this.chart.getSortedVisibleDatasetMetas();\n    const axisID = this.axis + 'AxisID';\n    const result = [];\n    let i, ilen;\n\n    for (i = 0, ilen = metas.length; i < ilen; ++i) {\n      const meta = metas[i];\n      if (meta[axisID] === this.id && (!type || meta.type === type)) {\n        result.push(meta);\n      }\n    }\n    return result;\n  }\n\n  /**\n\t * @param {number} index\n\t * @return {object}\n\t * @protected\n \t */\n  _resolveTickFontOptions(index) {\n    const opts = this.options.ticks.setContext(this.getContext(index));\n    return toFont(opts.font);\n  }\n\n  /**\n   * @protected\n   */\n  _maxDigits() {\n    const fontSize = this._resolveTickFontOptions(0).lineHeight;\n    return (this.isHorizontal() ? this.width : this.height) / fontSize;\n  }\n}\n","import {merge} from '../helpers';\nimport defaults, {overrides} from './core.defaults';\n\n/**\n * @typedef {{id: string, defaults: any, overrides?: any, defaultRoutes: any}} IChartComponent\n */\n\nexport default class TypedRegistry {\n  constructor(type, scope, override) {\n    this.type = type;\n    this.scope = scope;\n    this.override = override;\n    this.items = Object.create(null);\n  }\n\n  isForType(type) {\n    return Object.prototype.isPrototypeOf.call(this.type.prototype, type.prototype);\n  }\n\n  /**\n\t * @param {IChartComponent} item\n\t * @returns {string} The scope where items defaults were registered to.\n\t */\n  register(item) {\n    const proto = Object.getPrototypeOf(item);\n    let parentScope;\n\n    if (isIChartComponent(proto)) {\n      // Make sure the parent is registered and note the scope where its defaults are.\n      parentScope = this.register(proto);\n    }\n\n    const items = this.items;\n    const id = item.id;\n    const scope = this.scope + '.' + id;\n\n    if (!id) {\n      throw new Error('class does not have id: ' + item);\n    }\n\n    if (id in items) {\n      // already registered\n      return scope;\n    }\n\n    items[id] = item;\n    registerDefaults(item, scope, parentScope);\n    if (this.override) {\n      defaults.override(item.id, item.overrides);\n    }\n\n    return scope;\n  }\n\n  /**\n\t * @param {string} id\n\t * @returns {object?}\n\t */\n  get(id) {\n    return this.items[id];\n  }\n\n  /**\n\t * @param {IChartComponent} item\n\t */\n  unregister(item) {\n    const items = this.items;\n    const id = item.id;\n    const scope = this.scope;\n\n    if (id in items) {\n      delete items[id];\n    }\n\n    if (scope && id in defaults[scope]) {\n      delete defaults[scope][id];\n      if (this.override) {\n        delete overrides[id];\n      }\n    }\n  }\n}\n\nfunction registerDefaults(item, scope, parentScope) {\n  // Inherit the parent's defaults and keep existing defaults\n  const itemDefaults = merge(Object.create(null), [\n    parentScope ? defaults.get(parentScope) : {},\n    defaults.get(scope),\n    item.defaults\n  ]);\n\n  defaults.set(scope, itemDefaults);\n\n  if (item.defaultRoutes) {\n    routeDefaults(scope, item.defaultRoutes);\n  }\n\n  if (item.descriptors) {\n    defaults.describe(scope, item.descriptors);\n  }\n}\n\nfunction routeDefaults(scope, routes) {\n  Object.keys(routes).forEach(property => {\n    const propertyParts = property.split('.');\n    const sourceName = propertyParts.pop();\n    const sourceScope = [scope].concat(propertyParts).join('.');\n    const parts = routes[property].split('.');\n    const targetName = parts.pop();\n    const targetScope = parts.join('.');\n    defaults.route(sourceScope, sourceName, targetScope, targetName);\n  });\n}\n\nfunction isIChartComponent(proto) {\n  return 'id' in proto && 'defaults' in proto;\n}\n","import DatasetController from './core.datasetController';\nimport Element from './core.element';\nimport Scale from './core.scale';\nimport TypedRegistry from './core.typedRegistry';\nimport {each, callback as call, _capitalize} from '../helpers/helpers.core';\n\n/**\n * Please use the module's default export which provides a singleton instance\n * Note: class is exported for typedoc\n */\nexport class Registry {\n  constructor() {\n    this.controllers = new TypedRegistry(DatasetController, 'datasets', true);\n    this.elements = new TypedRegistry(Element, 'elements');\n    this.plugins = new TypedRegistry(Object, 'plugins');\n    this.scales = new TypedRegistry(Scale, 'scales');\n    // Order is important, Scale has Element in prototype chain,\n    // so Scales must be before Elements. Plugins are a fallback, so not listed here.\n    this._typedRegistries = [this.controllers, this.scales, this.elements];\n  }\n\n  /**\n\t * @param  {...any} args\n\t */\n  add(...args) {\n    this._each('register', args);\n  }\n\n  remove(...args) {\n    this._each('unregister', args);\n  }\n\n  /**\n\t * @param  {...typeof DatasetController} args\n\t */\n  addControllers(...args) {\n    this._each('register', args, this.controllers);\n  }\n\n  /**\n\t * @param  {...typeof Element} args\n\t */\n  addElements(...args) {\n    this._each('register', args, this.elements);\n  }\n\n  /**\n\t * @param  {...any} args\n\t */\n  addPlugins(...args) {\n    this._each('register', args, this.plugins);\n  }\n\n  /**\n\t * @param  {...typeof Scale} args\n\t */\n  addScales(...args) {\n    this._each('register', args, this.scales);\n  }\n\n  /**\n\t * @param {string} id\n\t * @returns {typeof DatasetController}\n\t */\n  getController(id) {\n    return this._get(id, this.controllers, 'controller');\n  }\n\n  /**\n\t * @param {string} id\n\t * @returns {typeof Element}\n\t */\n  getElement(id) {\n    return this._get(id, this.elements, 'element');\n  }\n\n  /**\n\t * @param {string} id\n\t * @returns {object}\n\t */\n  getPlugin(id) {\n    return this._get(id, this.plugins, 'plugin');\n  }\n\n  /**\n\t * @param {string} id\n\t * @returns {typeof Scale}\n\t */\n  getScale(id) {\n    return this._get(id, this.scales, 'scale');\n  }\n\n  /**\n\t * @param  {...typeof DatasetController} args\n\t */\n  removeControllers(...args) {\n    this._each('unregister', args, this.controllers);\n  }\n\n  /**\n\t * @param  {...typeof Element} args\n\t */\n  removeElements(...args) {\n    this._each('unregister', args, this.elements);\n  }\n\n  /**\n\t * @param  {...any} args\n\t */\n  removePlugins(...args) {\n    this._each('unregister', args, this.plugins);\n  }\n\n  /**\n\t * @param  {...typeof Scale} args\n\t */\n  removeScales(...args) {\n    this._each('unregister', args, this.scales);\n  }\n\n  /**\n\t * @private\n\t */\n  _each(method, args, typedRegistry) {\n    [...args].forEach(arg => {\n      const reg = typedRegistry || this._getRegistryForType(arg);\n      if (typedRegistry || reg.isForType(arg) || (reg === this.plugins && arg.id)) {\n        this._exec(method, reg, arg);\n      } else {\n        // Handle loopable args\n        // Use case:\n        //  import * as plugins from './plugins';\n        //  Chart.register(plugins);\n        each(arg, item => {\n          // If there are mixed types in the loopable, make sure those are\n          // registered in correct registry\n          // Use case: (treemap exporting controller, elements etc)\n          //  import * as treemap from 'chartjs-chart-treemap';\n          //  Chart.register(treemap);\n\n          const itemReg = typedRegistry || this._getRegistryForType(item);\n          this._exec(method, itemReg, item);\n        });\n      }\n    });\n  }\n\n  /**\n\t * @private\n\t */\n  _exec(method, registry, component) {\n    const camelMethod = _capitalize(method);\n    call(component['before' + camelMethod], [], component); // beforeRegister / beforeUnregister\n    registry[method](component);\n    call(component['after' + camelMethod], [], component); // afterRegister / afterUnregister\n  }\n\n  /**\n\t * @private\n\t */\n  _getRegistryForType(type) {\n    for (let i = 0; i < this._typedRegistries.length; i++) {\n      const reg = this._typedRegistries[i];\n      if (reg.isForType(type)) {\n        return reg;\n      }\n    }\n    // plugins is the fallback registry\n    return this.plugins;\n  }\n\n  /**\n\t * @private\n\t */\n  _get(id, typedRegistry, type) {\n    const item = typedRegistry.get(id);\n    if (item === undefined) {\n      throw new Error('\"' + id + '\" is not a registered ' + type + '.');\n    }\n    return item;\n  }\n\n}\n\n// singleton instance\nexport default /* #__PURE__ */ new Registry();\n","import registry from './core.registry';\nimport {callback as callCallback, isNullOrUndef, valueOrDefault} from '../helpers/helpers.core';\n\n/**\n * @typedef { import(\"./core.controller\").default } Chart\n * @typedef { import(\"../../types\").ChartEvent } ChartEvent\n * @typedef { import(\"../plugins/plugin.tooltip\").default } Tooltip\n */\n\n/**\n * @callback filterCallback\n * @param {{plugin: object, options: object}} value\n * @param {number} [index]\n * @param {array} [array]\n * @param {object} [thisArg]\n * @return {boolean}\n */\n\n\nexport default class PluginService {\n  constructor() {\n    this._init = [];\n  }\n\n  /**\n\t * Calls enabled plugins for `chart` on the specified hook and with the given args.\n\t * This method immediately returns as soon as a plugin explicitly returns false. The\n\t * returned value can be used, for instance, to interrupt the current action.\n\t * @param {Chart} chart - The chart instance for which plugins should be called.\n\t * @param {string} hook - The name of the plugin method to call (e.g. 'beforeUpdate').\n\t * @param {object} [args] - Extra arguments to apply to the hook call.\n   * @param {filterCallback} [filter] - Filtering function for limiting which plugins are notified\n\t * @returns {boolean} false if any of the plugins return false, else returns true.\n\t */\n  notify(chart, hook, args, filter) {\n    if (hook === 'beforeInit') {\n      this._init = this._createDescriptors(chart, true);\n      this._notify(this._init, chart, 'install');\n    }\n\n    const descriptors = filter ? this._descriptors(chart).filter(filter) : this._descriptors(chart);\n    const result = this._notify(descriptors, chart, hook, args);\n\n    if (hook === 'afterDestroy') {\n      this._notify(descriptors, chart, 'stop');\n      this._notify(this._init, chart, 'uninstall');\n    }\n    return result;\n  }\n\n  /**\n\t * @private\n\t */\n  _notify(descriptors, chart, hook, args) {\n    args = args || {};\n    for (const descriptor of descriptors) {\n      const plugin = descriptor.plugin;\n      const method = plugin[hook];\n      const params = [chart, args, descriptor.options];\n      if (callCallback(method, params, plugin) === false && args.cancelable) {\n        return false;\n      }\n    }\n\n    return true;\n  }\n\n  invalidate() {\n    // When plugins are registered, there is the possibility of a double\n    // invalidate situation. In this case, we only want to invalidate once.\n    // If we invalidate multiple times, the `_oldCache` is lost and all of the\n    // plugins are restarted without being correctly stopped.\n    // See https://github.com/chartjs/Chart.js/issues/8147\n    if (!isNullOrUndef(this._cache)) {\n      this._oldCache = this._cache;\n      this._cache = undefined;\n    }\n  }\n\n  /**\n\t * @param {Chart} chart\n\t * @private\n\t */\n  _descriptors(chart) {\n    if (this._cache) {\n      return this._cache;\n    }\n\n    const descriptors = this._cache = this._createDescriptors(chart);\n\n    this._notifyStateChanges(chart);\n\n    return descriptors;\n  }\n\n  _createDescriptors(chart, all) {\n    const config = chart && chart.config;\n    const options = valueOrDefault(config.options && config.options.plugins, {});\n    const plugins = allPlugins(config);\n    // options === false => all plugins are disabled\n    return options === false && !all ? [] : createDescriptors(chart, plugins, options, all);\n  }\n\n  /**\n\t * @param {Chart} chart\n\t * @private\n\t */\n  _notifyStateChanges(chart) {\n    const previousDescriptors = this._oldCache || [];\n    const descriptors = this._cache;\n    const diff = (a, b) => a.filter(x => !b.some(y => x.plugin.id === y.plugin.id));\n    this._notify(diff(previousDescriptors, descriptors), chart, 'stop');\n    this._notify(diff(descriptors, previousDescriptors), chart, 'start');\n  }\n}\n\n/**\n * @param {import(\"./core.config\").default} config\n */\nfunction allPlugins(config) {\n  const localIds = {};\n  const plugins = [];\n  const keys = Object.keys(registry.plugins.items);\n  for (let i = 0; i < keys.length; i++) {\n    plugins.push(registry.getPlugin(keys[i]));\n  }\n\n  const local = config.plugins || [];\n  for (let i = 0; i < local.length; i++) {\n    const plugin = local[i];\n\n    if (plugins.indexOf(plugin) === -1) {\n      plugins.push(plugin);\n      localIds[plugin.id] = true;\n    }\n  }\n\n  return {plugins, localIds};\n}\n\nfunction getOpts(options, all) {\n  if (!all && options === false) {\n    return null;\n  }\n  if (options === true) {\n    return {};\n  }\n  return options;\n}\n\nfunction createDescriptors(chart, {plugins, localIds}, options, all) {\n  const result = [];\n  const context = chart.getContext();\n\n  for (const plugin of plugins) {\n    const id = plugin.id;\n    const opts = getOpts(options[id], all);\n    if (opts === null) {\n      continue;\n    }\n    result.push({\n      plugin,\n      options: pluginOpts(chart.config, {plugin, local: localIds[id]}, opts, context)\n    });\n  }\n\n  return result;\n}\n\nfunction pluginOpts(config, {plugin, local}, opts, context) {\n  const keys = config.pluginScopeKeys(plugin);\n  const scopes = config.getOptionScopes(opts, keys);\n  if (local && plugin.defaults) {\n    // make sure plugin defaults are in scopes for local (not registered) plugins\n    scopes.push(plugin.defaults);\n  }\n  return config.createResolver(scopes, context, [''], {\n    // These are just defaults that plugins can override\n    scriptable: false,\n    indexable: false,\n    allKeys: true\n  });\n}\n","import defaults, {overrides, descriptors} from './core.defaults';\nimport {mergeIf, resolveObjectKey, isArray, isFunction, valueOrDefault, isObject} from '../helpers/helpers.core';\nimport {_attachContext, _createResolver, _descriptors} from '../helpers/helpers.config';\n\nexport function getIndexAxis(type, options) {\n  const datasetDefaults = defaults.datasets[type] || {};\n  const datasetOptions = (options.datasets || {})[type] || {};\n  return datasetOptions.indexAxis || options.indexAxis || datasetDefaults.indexAxis || 'x';\n}\n\nfunction getAxisFromDefaultScaleID(id, indexAxis) {\n  let axis = id;\n  if (id === '_index_') {\n    axis = indexAxis;\n  } else if (id === '_value_') {\n    axis = indexAxis === 'x' ? 'y' : 'x';\n  }\n  return axis;\n}\n\nfunction getDefaultScaleIDFromAxis(axis, indexAxis) {\n  return axis === indexAxis ? '_index_' : '_value_';\n}\n\nfunction axisFromPosition(position) {\n  if (position === 'top' || position === 'bottom') {\n    return 'x';\n  }\n  if (position === 'left' || position === 'right') {\n    return 'y';\n  }\n}\n\nexport function determineAxis(id, scaleOptions) {\n  if (id === 'x' || id === 'y') {\n    return id;\n  }\n  return scaleOptions.axis || axisFromPosition(scaleOptions.position) || id.charAt(0).toLowerCase();\n}\n\nfunction mergeScaleConfig(config, options) {\n  const chartDefaults = overrides[config.type] || {scales: {}};\n  const configScales = options.scales || {};\n  const chartIndexAxis = getIndexAxis(config.type, options);\n  const firstIDs = Object.create(null);\n  const scales = Object.create(null);\n\n  // First figure out first scale id's per axis.\n  Object.keys(configScales).forEach(id => {\n    const scaleConf = configScales[id];\n    if (!isObject(scaleConf)) {\n      return console.error(`Invalid scale configuration for scale: ${id}`);\n    }\n    if (scaleConf._proxy) {\n      return console.warn(`Ignoring resolver passed as options for scale: ${id}`);\n    }\n    const axis = determineAxis(id, scaleConf);\n    const defaultId = getDefaultScaleIDFromAxis(axis, chartIndexAxis);\n    const defaultScaleOptions = chartDefaults.scales || {};\n    firstIDs[axis] = firstIDs[axis] || id;\n    scales[id] = mergeIf(Object.create(null), [{axis}, scaleConf, defaultScaleOptions[axis], defaultScaleOptions[defaultId]]);\n  });\n\n  // Then merge dataset defaults to scale configs\n  config.data.datasets.forEach(dataset => {\n    const type = dataset.type || config.type;\n    const indexAxis = dataset.indexAxis || getIndexAxis(type, options);\n    const datasetDefaults = overrides[type] || {};\n    const defaultScaleOptions = datasetDefaults.scales || {};\n    Object.keys(defaultScaleOptions).forEach(defaultID => {\n      const axis = getAxisFromDefaultScaleID(defaultID, indexAxis);\n      const id = dataset[axis + 'AxisID'] || firstIDs[axis] || axis;\n      scales[id] = scales[id] || Object.create(null);\n      mergeIf(scales[id], [{axis}, configScales[id], defaultScaleOptions[defaultID]]);\n    });\n  });\n\n  // apply scale defaults, if not overridden by dataset defaults\n  Object.keys(scales).forEach(key => {\n    const scale = scales[key];\n    mergeIf(scale, [defaults.scales[scale.type], defaults.scale]);\n  });\n\n  return scales;\n}\n\nfunction initOptions(config) {\n  const options = config.options || (config.options = {});\n\n  options.plugins = valueOrDefault(options.plugins, {});\n  options.scales = mergeScaleConfig(config, options);\n}\n\nfunction initData(data) {\n  data = data || {};\n  data.datasets = data.datasets || [];\n  data.labels = data.labels || [];\n  return data;\n}\n\nfunction initConfig(config) {\n  config = config || {};\n  config.data = initData(config.data);\n\n  initOptions(config);\n\n  return config;\n}\n\nconst keyCache = new Map();\nconst keysCached = new Set();\n\nfunction cachedKeys(cacheKey, generate) {\n  let keys = keyCache.get(cacheKey);\n  if (!keys) {\n    keys = generate();\n    keyCache.set(cacheKey, keys);\n    keysCached.add(keys);\n  }\n  return keys;\n}\n\nconst addIfFound = (set, obj, key) => {\n  const opts = resolveObjectKey(obj, key);\n  if (opts !== undefined) {\n    set.add(opts);\n  }\n};\n\nexport default class Config {\n  constructor(config) {\n    this._config = initConfig(config);\n    this._scopeCache = new Map();\n    this._resolverCache = new Map();\n  }\n\n  get platform() {\n    return this._config.platform;\n  }\n\n  get type() {\n    return this._config.type;\n  }\n\n  set type(type) {\n    this._config.type = type;\n  }\n\n  get data() {\n    return this._config.data;\n  }\n\n  set data(data) {\n    this._config.data = initData(data);\n  }\n\n  get options() {\n    return this._config.options;\n  }\n\n  set options(options) {\n    this._config.options = options;\n  }\n\n  get plugins() {\n    return this._config.plugins;\n  }\n\n  update() {\n    const config = this._config;\n    this.clearCache();\n    initOptions(config);\n  }\n\n  clearCache() {\n    this._scopeCache.clear();\n    this._resolverCache.clear();\n  }\n\n  /**\n   * Returns the option scope keys for resolving dataset options.\n   * These keys do not include the dataset itself, because it is not under options.\n   * @param {string} datasetType\n   * @return {string[][]}\n   */\n  datasetScopeKeys(datasetType) {\n    return cachedKeys(datasetType,\n      () => [[\n        `datasets.${datasetType}`,\n        ''\n      ]]);\n  }\n\n  /**\n   * Returns the option scope keys for resolving dataset animation options.\n   * These keys do not include the dataset itself, because it is not under options.\n   * @param {string} datasetType\n   * @param {string} transition\n   * @return {string[][]}\n   */\n  datasetAnimationScopeKeys(datasetType, transition) {\n    return cachedKeys(`${datasetType}.transition.${transition}`,\n      () => [\n        [\n          `datasets.${datasetType}.transitions.${transition}`,\n          `transitions.${transition}`,\n        ],\n        // The following are used for looking up the `animations` and `animation` keys\n        [\n          `datasets.${datasetType}`,\n          ''\n        ]\n      ]);\n  }\n\n  /**\n   * Returns the options scope keys for resolving element options that belong\n   * to an dataset. These keys do not include the dataset itself, because it\n   * is not under options.\n   * @param {string} datasetType\n   * @param {string} elementType\n   * @return {string[][]}\n   */\n  datasetElementScopeKeys(datasetType, elementType) {\n    return cachedKeys(`${datasetType}-${elementType}`,\n      () => [[\n        `datasets.${datasetType}.elements.${elementType}`,\n        `datasets.${datasetType}`,\n        `elements.${elementType}`,\n        ''\n      ]]);\n  }\n\n  /**\n   * Returns the options scope keys for resolving plugin options.\n   * @param {{id: string, additionalOptionScopes?: string[]}} plugin\n   * @return {string[][]}\n   */\n  pluginScopeKeys(plugin) {\n    const id = plugin.id;\n    const type = this.type;\n    return cachedKeys(`${type}-plugin-${id}`,\n      () => [[\n        `plugins.${id}`,\n        ...plugin.additionalOptionScopes || [],\n      ]]);\n  }\n\n  /**\n   * @private\n   */\n  _cachedScopes(mainScope, resetCache) {\n    const _scopeCache = this._scopeCache;\n    let cache = _scopeCache.get(mainScope);\n    if (!cache || resetCache) {\n      cache = new Map();\n      _scopeCache.set(mainScope, cache);\n    }\n    return cache;\n  }\n\n  /**\n   * Resolves the objects from options and defaults for option value resolution.\n   * @param {object} mainScope - The main scope object for options\n   * @param {string[][]} keyLists - The arrays of keys in resolution order\n   * @param {boolean} [resetCache] - reset the cache for this mainScope\n   */\n  getOptionScopes(mainScope, keyLists, resetCache) {\n    const {options, type} = this;\n    const cache = this._cachedScopes(mainScope, resetCache);\n    const cached = cache.get(keyLists);\n    if (cached) {\n      return cached;\n    }\n\n    const scopes = new Set();\n\n    keyLists.forEach(keys => {\n      if (mainScope) {\n        scopes.add(mainScope);\n        keys.forEach(key => addIfFound(scopes, mainScope, key));\n      }\n      keys.forEach(key => addIfFound(scopes, options, key));\n      keys.forEach(key => addIfFound(scopes, overrides[type] || {}, key));\n      keys.forEach(key => addIfFound(scopes, defaults, key));\n      keys.forEach(key => addIfFound(scopes, descriptors, key));\n    });\n\n    const array = Array.from(scopes);\n    if (array.length === 0) {\n      array.push(Object.create(null));\n    }\n    if (keysCached.has(keyLists)) {\n      cache.set(keyLists, array);\n    }\n    return array;\n  }\n\n  /**\n   * Returns the option scopes for resolving chart options\n   * @return {object[]}\n   */\n  chartOptionScopes() {\n    const {options, type} = this;\n\n    return [\n      options,\n      overrides[type] || {},\n      defaults.datasets[type] || {}, // https://github.com/chartjs/Chart.js/issues/8531\n      {type},\n      defaults,\n      descriptors\n    ];\n  }\n\n  /**\n   * @param {object[]} scopes\n   * @param {string[]} names\n   * @param {function|object} context\n   * @param {string[]} [prefixes]\n   * @return {object}\n   */\n  resolveNamedOptions(scopes, names, context, prefixes = ['']) {\n    const result = {$shared: true};\n    const {resolver, subPrefixes} = getResolver(this._resolverCache, scopes, prefixes);\n    let options = resolver;\n    if (needContext(resolver, names)) {\n      result.$shared = false;\n      context = isFunction(context) ? context() : context;\n      // subResolver is passed to scriptable options. It should not resolve to hover options.\n      const subResolver = this.createResolver(scopes, context, subPrefixes);\n      options = _attachContext(resolver, context, subResolver);\n    }\n\n    for (const prop of names) {\n      result[prop] = options[prop];\n    }\n    return result;\n  }\n\n  /**\n   * @param {object[]} scopes\n   * @param {object} [context]\n   * @param {string[]} [prefixes]\n   * @param {{scriptable: boolean, indexable: boolean, allKeys?: boolean}} [descriptorDefaults]\n   */\n  createResolver(scopes, context, prefixes = [''], descriptorDefaults) {\n    const {resolver} = getResolver(this._resolverCache, scopes, prefixes);\n    return isObject(context)\n      ? _attachContext(resolver, context, undefined, descriptorDefaults)\n      : resolver;\n  }\n}\n\nfunction getResolver(resolverCache, scopes, prefixes) {\n  let cache = resolverCache.get(scopes);\n  if (!cache) {\n    cache = new Map();\n    resolverCache.set(scopes, cache);\n  }\n  const cacheKey = prefixes.join();\n  let cached = cache.get(cacheKey);\n  if (!cached) {\n    const resolver = _createResolver(scopes, prefixes);\n    cached = {\n      resolver,\n      subPrefixes: prefixes.filter(p => !p.toLowerCase().includes('hover'))\n    };\n    cache.set(cacheKey, cached);\n  }\n  return cached;\n}\n\nconst hasFunction = value => isObject(value)\n  && Object.getOwnPropertyNames(value).reduce((acc, key) => acc || isFunction(value[key]), false);\n\nfunction needContext(proxy, names) {\n  const {isScriptable, isIndexable} = _descriptors(proxy);\n\n  for (const prop of names) {\n    const scriptable = isScriptable(prop);\n    const indexable = isIndexable(prop);\n    const value = (indexable || scriptable) && proxy[prop];\n    if ((scriptable && (isFunction(value) || hasFunction(value)))\n      || (indexable && isArray(value))) {\n      return true;\n    }\n  }\n  return false;\n}\n","import animator from './core.animator';\nimport defaults, {overrides} from './core.defaults';\nimport Interaction from './core.interaction';\nimport layouts from './core.layouts';\nimport {_detectPlatform} from '../platform';\nimport PluginService from './core.plugins';\nimport registry from './core.registry';\nimport Config, {determineAxis, getIndexAxis} from './core.config';\nimport {retinaScale, _isDomSupported} from '../helpers/helpers.dom';\nimport {each, callback as callCallback, uid, valueOrDefault, _elementsEqual, isNullOrUndef, setsEqual, defined, isFunction, _isClickEvent} from '../helpers/helpers.core';\nimport {clearCanvas, clipArea, createContext, unclipArea, _isPointInArea} from '../helpers';\n// @ts-ignore\nimport {version} from '../../package.json';\nimport {debounce} from '../helpers/helpers.extras';\n\n/**\n * @typedef { import('../../types').ChartEvent } ChartEvent\n * @typedef { import(\"../../types\").Point } Point\n */\n\nconst KNOWN_POSITIONS = ['top', 'bottom', 'left', 'right', 'chartArea'];\nfunction positionIsHorizontal(position, axis) {\n  return position === 'top' || position === 'bottom' || (KNOWN_POSITIONS.indexOf(position) === -1 && axis === 'x');\n}\n\nfunction compare2Level(l1, l2) {\n  return function(a, b) {\n    return a[l1] === b[l1]\n      ? a[l2] - b[l2]\n      : a[l1] - b[l1];\n  };\n}\n\nfunction onAnimationsComplete(context) {\n  const chart = context.chart;\n  const animationOptions = chart.options.animation;\n\n  chart.notifyPlugins('afterRender');\n  callCallback(animationOptions && animationOptions.onComplete, [context], chart);\n}\n\nfunction onAnimationProgress(context) {\n  const chart = context.chart;\n  const animationOptions = chart.options.animation;\n  callCallback(animationOptions && animationOptions.onProgress, [context], chart);\n}\n\n/**\n * Chart.js can take a string id of a canvas element, a 2d context, or a canvas element itself.\n * Attempt to unwrap the item passed into the chart constructor so that it is a canvas element (if possible).\n */\nfunction getCanvas(item) {\n  if (_isDomSupported() && typeof item === 'string') {\n    item = document.getElementById(item);\n  } else if (item && item.length) {\n    // Support for array based queries (such as jQuery)\n    item = item[0];\n  }\n\n  if (item && item.canvas) {\n    // Support for any object associated to a canvas (including a context2d)\n    item = item.canvas;\n  }\n  return item;\n}\n\nconst instances = {};\nconst getChart = (key) => {\n  const canvas = getCanvas(key);\n  return Object.values(instances).filter((c) => c.canvas === canvas).pop();\n};\n\nfunction moveNumericKeys(obj, start, move) {\n  const keys = Object.keys(obj);\n  for (const key of keys) {\n    const intKey = +key;\n    if (intKey >= start) {\n      const value = obj[key];\n      delete obj[key];\n      if (move > 0 || intKey > start) {\n        obj[intKey + move] = value;\n      }\n    }\n  }\n}\n\n/**\n * @param {ChartEvent} e\n * @param {ChartEvent|null} lastEvent\n * @param {boolean} inChartArea\n * @param {boolean} isClick\n * @returns {ChartEvent|null}\n */\nfunction determineLastEvent(e, lastEvent, inChartArea, isClick) {\n  if (!inChartArea || e.type === 'mouseout') {\n    return null;\n  }\n  if (isClick) {\n    return lastEvent;\n  }\n  return e;\n}\n\nclass Chart {\n\n  static defaults = defaults;\n  static instances = instances;\n  static overrides = overrides;\n  static registry = registry;\n  static version = version;\n  static getChart = getChart;\n\n  static register(...items) {\n    registry.add(...items);\n    invalidatePlugins();\n  }\n\n  static unregister(...items) {\n    registry.remove(...items);\n    invalidatePlugins();\n  }\n\n  // eslint-disable-next-line max-statements\n  constructor(item, userConfig) {\n    const config = this.config = new Config(userConfig);\n    const initialCanvas = getCanvas(item);\n    const existingChart = getChart(initialCanvas);\n    if (existingChart) {\n      throw new Error(\n        'Canvas is already in use. Chart with ID \\'' + existingChart.id + '\\'' +\n\t\t\t\t' must be destroyed before the canvas with ID \\'' + existingChart.canvas.id + '\\' can be reused.'\n      );\n    }\n\n    const options = config.createResolver(config.chartOptionScopes(), this.getContext());\n\n    this.platform = new (config.platform || _detectPlatform(initialCanvas))();\n    this.platform.updateConfig(config);\n\n    const context = this.platform.acquireContext(initialCanvas, options.aspectRatio);\n    const canvas = context && context.canvas;\n    const height = canvas && canvas.height;\n    const width = canvas && canvas.width;\n\n    this.id = uid();\n    this.ctx = context;\n    this.canvas = canvas;\n    this.width = width;\n    this.height = height;\n    this._options = options;\n    // Store the previously used aspect ratio to determine if a resize\n    // is needed during updates. Do this after _options is set since\n    // aspectRatio uses a getter\n    this._aspectRatio = this.aspectRatio;\n    this._layers = [];\n    this._metasets = [];\n    this._stacks = undefined;\n    this.boxes = [];\n    this.currentDevicePixelRatio = undefined;\n    this.chartArea = undefined;\n    this._active = [];\n    this._lastEvent = undefined;\n    this._listeners = {};\n    /** @type {?{attach?: function, detach?: function, resize?: function}} */\n    this._responsiveListeners = undefined;\n    this._sortedMetasets = [];\n    this.scales = {};\n    this._plugins = new PluginService();\n    this.$proxies = {};\n    this._hiddenIndices = {};\n    this.attached = false;\n    this._animationsDisabled = undefined;\n    this.$context = undefined;\n    this._doResize = debounce(mode => this.update(mode), options.resizeDelay || 0);\n    this._dataChanges = [];\n\n    // Add the chart instance to the global namespace\n    instances[this.id] = this;\n\n    if (!context || !canvas) {\n      // The given item is not a compatible context2d element, let's return before finalizing\n      // the chart initialization but after setting basic chart / controller properties that\n      // can help to figure out that the chart is not valid (e.g chart.canvas !== null);\n      // https://github.com/chartjs/Chart.js/issues/2807\n      console.error(\"Failed to create chart: can't acquire context from the given item\");\n      return;\n    }\n\n    animator.listen(this, 'complete', onAnimationsComplete);\n    animator.listen(this, 'progress', onAnimationProgress);\n\n    this._initialize();\n    if (this.attached) {\n      this.update();\n    }\n  }\n\n  get aspectRatio() {\n    const {options: {aspectRatio, maintainAspectRatio}, width, height, _aspectRatio} = this;\n    if (!isNullOrUndef(aspectRatio)) {\n      // If aspectRatio is defined in options, use that.\n      return aspectRatio;\n    }\n\n    if (maintainAspectRatio && _aspectRatio) {\n      // If maintainAspectRatio is truthly and we had previously determined _aspectRatio, use that\n      return _aspectRatio;\n    }\n\n    // Calculate\n    return height ? width / height : null;\n  }\n\n  get data() {\n    return this.config.data;\n  }\n\n  set data(data) {\n    this.config.data = data;\n  }\n\n  get options() {\n    return this._options;\n  }\n\n  set options(options) {\n    this.config.options = options;\n  }\n\n  get registry() {\n    return registry;\n  }\n\n  /**\n\t * @private\n\t */\n  _initialize() {\n    // Before init plugin notification\n    this.notifyPlugins('beforeInit');\n\n    if (this.options.responsive) {\n      this.resize();\n    } else {\n      retinaScale(this, this.options.devicePixelRatio);\n    }\n\n    this.bindEvents();\n\n    // After init plugin notification\n    this.notifyPlugins('afterInit');\n\n    return this;\n  }\n\n  clear() {\n    clearCanvas(this.canvas, this.ctx);\n    return this;\n  }\n\n  stop() {\n    animator.stop(this);\n    return this;\n  }\n\n  /**\n\t * Resize the chart to its container or to explicit dimensions.\n\t * @param {number} [width]\n\t * @param {number} [height]\n\t */\n  resize(width, height) {\n    if (!animator.running(this)) {\n      this._resize(width, height);\n    } else {\n      this._resizeBeforeDraw = {width, height};\n    }\n  }\n\n  _resize(width, height) {\n    const options = this.options;\n    const canvas = this.canvas;\n    const aspectRatio = options.maintainAspectRatio && this.aspectRatio;\n    const newSize = this.platform.getMaximumSize(canvas, width, height, aspectRatio);\n    const newRatio = options.devicePixelRatio || this.platform.getDevicePixelRatio();\n    const mode = this.width ? 'resize' : 'attach';\n\n    this.width = newSize.width;\n    this.height = newSize.height;\n    this._aspectRatio = this.aspectRatio;\n    if (!retinaScale(this, newRatio, true)) {\n      return;\n    }\n\n    this.notifyPlugins('resize', {size: newSize});\n\n    callCallback(options.onResize, [this, newSize], this);\n\n    if (this.attached) {\n      if (this._doResize(mode)) {\n        // The resize update is delayed, only draw without updating.\n        this.render();\n      }\n    }\n  }\n\n  ensureScalesHaveIDs() {\n    const options = this.options;\n    const scalesOptions = options.scales || {};\n\n    each(scalesOptions, (axisOptions, axisID) => {\n      axisOptions.id = axisID;\n    });\n  }\n\n  /**\n\t * Builds a map of scale ID to scale object for future lookup.\n\t */\n  buildOrUpdateScales() {\n    const options = this.options;\n    const scaleOpts = options.scales;\n    const scales = this.scales;\n    const updated = Object.keys(scales).reduce((obj, id) => {\n      obj[id] = false;\n      return obj;\n    }, {});\n    let items = [];\n\n    if (scaleOpts) {\n      items = items.concat(\n        Object.keys(scaleOpts).map((id) => {\n          const scaleOptions = scaleOpts[id];\n          const axis = determineAxis(id, scaleOptions);\n          const isRadial = axis === 'r';\n          const isHorizontal = axis === 'x';\n          return {\n            options: scaleOptions,\n            dposition: isRadial ? 'chartArea' : isHorizontal ? 'bottom' : 'left',\n            dtype: isRadial ? 'radialLinear' : isHorizontal ? 'category' : 'linear'\n          };\n        })\n      );\n    }\n\n    each(items, (item) => {\n      const scaleOptions = item.options;\n      const id = scaleOptions.id;\n      const axis = determineAxis(id, scaleOptions);\n      const scaleType = valueOrDefault(scaleOptions.type, item.dtype);\n\n      if (scaleOptions.position === undefined || positionIsHorizontal(scaleOptions.position, axis) !== positionIsHorizontal(item.dposition)) {\n        scaleOptions.position = item.dposition;\n      }\n\n      updated[id] = true;\n      let scale = null;\n      if (id in scales && scales[id].type === scaleType) {\n        scale = scales[id];\n      } else {\n        const scaleClass = registry.getScale(scaleType);\n        scale = new scaleClass({\n          id,\n          type: scaleType,\n          ctx: this.ctx,\n          chart: this\n        });\n        scales[scale.id] = scale;\n      }\n\n      scale.init(scaleOptions, options);\n    });\n    // clear up discarded scales\n    each(updated, (hasUpdated, id) => {\n      if (!hasUpdated) {\n        delete scales[id];\n      }\n    });\n\n    each(scales, (scale) => {\n      layouts.configure(this, scale, scale.options);\n      layouts.addBox(this, scale);\n    });\n  }\n\n  /**\n\t * @private\n\t */\n  _updateMetasets() {\n    const metasets = this._metasets;\n    const numData = this.data.datasets.length;\n    const numMeta = metasets.length;\n\n    metasets.sort((a, b) => a.index - b.index);\n    if (numMeta > numData) {\n      for (let i = numData; i < numMeta; ++i) {\n        this._destroyDatasetMeta(i);\n      }\n      metasets.splice(numData, numMeta - numData);\n    }\n    this._sortedMetasets = metasets.slice(0).sort(compare2Level('order', 'index'));\n  }\n\n  /**\n\t * @private\n\t */\n  _removeUnreferencedMetasets() {\n    const {_metasets: metasets, data: {datasets}} = this;\n    if (metasets.length > datasets.length) {\n      delete this._stacks;\n    }\n    metasets.forEach((meta, index) => {\n      if (datasets.filter(x => x === meta._dataset).length === 0) {\n        this._destroyDatasetMeta(index);\n      }\n    });\n  }\n\n  buildOrUpdateControllers() {\n    const newControllers = [];\n    const datasets = this.data.datasets;\n    let i, ilen;\n\n    this._removeUnreferencedMetasets();\n\n    for (i = 0, ilen = datasets.length; i < ilen; i++) {\n      const dataset = datasets[i];\n      let meta = this.getDatasetMeta(i);\n      const type = dataset.type || this.config.type;\n\n      if (meta.type && meta.type !== type) {\n        this._destroyDatasetMeta(i);\n        meta = this.getDatasetMeta(i);\n      }\n      meta.type = type;\n      meta.indexAxis = dataset.indexAxis || getIndexAxis(type, this.options);\n      meta.order = dataset.order || 0;\n      meta.index = i;\n      meta.label = '' + dataset.label;\n      meta.visible = this.isDatasetVisible(i);\n\n      if (meta.controller) {\n        meta.controller.updateIndex(i);\n        meta.controller.linkScales();\n      } else {\n        const ControllerClass = registry.getController(type);\n        const {datasetElementType, dataElementType} = defaults.datasets[type];\n        Object.assign(ControllerClass, {\n          dataElementType: registry.getElement(dataElementType),\n          datasetElementType: datasetElementType && registry.getElement(datasetElementType)\n        });\n        meta.controller = new ControllerClass(this, i);\n        newControllers.push(meta.controller);\n      }\n    }\n\n    this._updateMetasets();\n    return newControllers;\n  }\n\n  /**\n\t * Reset the elements of all datasets\n\t * @private\n\t */\n  _resetElements() {\n    each(this.data.datasets, (dataset, datasetIndex) => {\n      this.getDatasetMeta(datasetIndex).controller.reset();\n    }, this);\n  }\n\n  /**\n\t* Resets the chart back to its state before the initial animation\n\t*/\n  reset() {\n    this._resetElements();\n    this.notifyPlugins('reset');\n  }\n\n  update(mode) {\n    const config = this.config;\n\n    config.update();\n    const options = this._options = config.createResolver(config.chartOptionScopes(), this.getContext());\n    const animsDisabled = this._animationsDisabled = !options.animation;\n\n    this._updateScales();\n    this._checkEventBindings();\n    this._updateHiddenIndices();\n\n    // plugins options references might have change, let's invalidate the cache\n    // https://github.com/chartjs/Chart.js/issues/5111#issuecomment-355934167\n    this._plugins.invalidate();\n\n    if (this.notifyPlugins('beforeUpdate', {mode, cancelable: true}) === false) {\n      return;\n    }\n\n    // Make sure dataset controllers are updated and new controllers are reset\n    const newControllers = this.buildOrUpdateControllers();\n\n    this.notifyPlugins('beforeElementsUpdate');\n\n    // Make sure all dataset controllers have correct meta data counts\n    let minPadding = 0;\n    for (let i = 0, ilen = this.data.datasets.length; i < ilen; i++) {\n      const {controller} = this.getDatasetMeta(i);\n      const reset = !animsDisabled && newControllers.indexOf(controller) === -1;\n      // New controllers will be reset after the layout pass, so we only want to modify\n      // elements added to new datasets\n      controller.buildOrUpdateElements(reset);\n      minPadding = Math.max(+controller.getMaxOverflow(), minPadding);\n    }\n    minPadding = this._minPadding = options.layout.autoPadding ? minPadding : 0;\n    this._updateLayout(minPadding);\n\n    // Only reset the controllers if we have animations\n    if (!animsDisabled) {\n      // Can only reset the new controllers after the scales have been updated\n      // Reset is done to get the starting point for the initial animation\n      each(newControllers, (controller) => {\n        controller.reset();\n      });\n    }\n\n    this._updateDatasets(mode);\n\n    // Do this before render so that any plugins that need final scale updates can use it\n    this.notifyPlugins('afterUpdate', {mode});\n\n    this._layers.sort(compare2Level('z', '_idx'));\n\n    // Replay last event from before update, or set hover styles on active elements\n    const {_active, _lastEvent} = this;\n    if (_lastEvent) {\n      this._eventHandler(_lastEvent, true);\n    } else if (_active.length) {\n      this._updateHoverStyles(_active, _active, true);\n    }\n\n    this.render();\n  }\n\n  /**\n   * @private\n   */\n  _updateScales() {\n    each(this.scales, (scale) => {\n      layouts.removeBox(this, scale);\n    });\n\n    this.ensureScalesHaveIDs();\n    this.buildOrUpdateScales();\n  }\n\n  /**\n   * @private\n   */\n  _checkEventBindings() {\n    const options = this.options;\n    const existingEvents = new Set(Object.keys(this._listeners));\n    const newEvents = new Set(options.events);\n\n    if (!setsEqual(existingEvents, newEvents) || !!this._responsiveListeners !== options.responsive) {\n      // The configured events have changed. Rebind.\n      this.unbindEvents();\n      this.bindEvents();\n    }\n  }\n\n  /**\n   * @private\n   */\n  _updateHiddenIndices() {\n    const {_hiddenIndices} = this;\n    const changes = this._getUniformDataChanges() || [];\n    for (const {method, start, count} of changes) {\n      const move = method === '_removeElements' ? -count : count;\n      moveNumericKeys(_hiddenIndices, start, move);\n    }\n  }\n\n  /**\n   * @private\n   */\n  _getUniformDataChanges() {\n    const _dataChanges = this._dataChanges;\n    if (!_dataChanges || !_dataChanges.length) {\n      return;\n    }\n\n    this._dataChanges = [];\n    const datasetCount = this.data.datasets.length;\n    const makeSet = (idx) => new Set(\n      _dataChanges\n        .filter(c => c[0] === idx)\n        .map((c, i) => i + ',' + c.splice(1).join(','))\n    );\n\n    const changeSet = makeSet(0);\n    for (let i = 1; i < datasetCount; i++) {\n      if (!setsEqual(changeSet, makeSet(i))) {\n        return;\n      }\n    }\n    return Array.from(changeSet)\n      .map(c => c.split(','))\n      .map(a => ({method: a[1], start: +a[2], count: +a[3]}));\n  }\n\n  /**\n\t * Updates the chart layout unless a plugin returns `false` to the `beforeLayout`\n\t * hook, in which case, plugins will not be called on `afterLayout`.\n\t * @private\n\t */\n  _updateLayout(minPadding) {\n    if (this.notifyPlugins('beforeLayout', {cancelable: true}) === false) {\n      return;\n    }\n\n    layouts.update(this, this.width, this.height, minPadding);\n\n    const area = this.chartArea;\n    const noArea = area.width <= 0 || area.height <= 0;\n\n    this._layers = [];\n    each(this.boxes, (box) => {\n      if (noArea && box.position === 'chartArea') {\n        // Skip drawing and configuring chartArea boxes when chartArea is zero or negative\n        return;\n      }\n\n      // configure is called twice, once in core.scale.update and once here.\n      // Here the boxes are fully updated and at their final positions.\n      if (box.configure) {\n        box.configure();\n      }\n      this._layers.push(...box._layers());\n    }, this);\n\n    this._layers.forEach((item, index) => {\n      item._idx = index;\n    });\n\n    this.notifyPlugins('afterLayout');\n  }\n\n  /**\n\t * Updates all datasets unless a plugin returns `false` to the `beforeDatasetsUpdate`\n\t * hook, in which case, plugins will not be called on `afterDatasetsUpdate`.\n\t * @private\n\t */\n  _updateDatasets(mode) {\n    if (this.notifyPlugins('beforeDatasetsUpdate', {mode, cancelable: true}) === false) {\n      return;\n    }\n\n    for (let i = 0, ilen = this.data.datasets.length; i < ilen; ++i) {\n      this.getDatasetMeta(i).controller.configure();\n    }\n\n    for (let i = 0, ilen = this.data.datasets.length; i < ilen; ++i) {\n      this._updateDataset(i, isFunction(mode) ? mode({datasetIndex: i}) : mode);\n    }\n\n    this.notifyPlugins('afterDatasetsUpdate', {mode});\n  }\n\n  /**\n\t * Updates dataset at index unless a plugin returns `false` to the `beforeDatasetUpdate`\n\t * hook, in which case, plugins will not be called on `afterDatasetUpdate`.\n\t * @private\n\t */\n  _updateDataset(index, mode) {\n    const meta = this.getDatasetMeta(index);\n    const args = {meta, index, mode, cancelable: true};\n\n    if (this.notifyPlugins('beforeDatasetUpdate', args) === false) {\n      return;\n    }\n\n    meta.controller._update(mode);\n\n    args.cancelable = false;\n    this.notifyPlugins('afterDatasetUpdate', args);\n  }\n\n  render() {\n    if (this.notifyPlugins('beforeRender', {cancelable: true}) === false) {\n      return;\n    }\n\n    if (animator.has(this)) {\n      if (this.attached && !animator.running(this)) {\n        animator.start(this);\n      }\n    } else {\n      this.draw();\n      onAnimationsComplete({chart: this});\n    }\n  }\n\n  draw() {\n    let i;\n    if (this._resizeBeforeDraw) {\n      const {width, height} = this._resizeBeforeDraw;\n      this._resize(width, height);\n      this._resizeBeforeDraw = null;\n    }\n    this.clear();\n\n    if (this.width <= 0 || this.height <= 0) {\n      return;\n    }\n\n    if (this.notifyPlugins('beforeDraw', {cancelable: true}) === false) {\n      return;\n    }\n\n    // Because of plugin hooks (before/afterDatasetsDraw), datasets can't\n    // currently be part of layers. Instead, we draw\n    // layers <= 0 before(default, backward compat), and the rest after\n    const layers = this._layers;\n    for (i = 0; i < layers.length && layers[i].z <= 0; ++i) {\n      layers[i].draw(this.chartArea);\n    }\n\n    this._drawDatasets();\n\n    // Rest of layers\n    for (; i < layers.length; ++i) {\n      layers[i].draw(this.chartArea);\n    }\n\n    this.notifyPlugins('afterDraw');\n  }\n\n  /**\n\t * @private\n\t */\n  _getSortedDatasetMetas(filterVisible) {\n    const metasets = this._sortedMetasets;\n    const result = [];\n    let i, ilen;\n\n    for (i = 0, ilen = metasets.length; i < ilen; ++i) {\n      const meta = metasets[i];\n      if (!filterVisible || meta.visible) {\n        result.push(meta);\n      }\n    }\n\n    return result;\n  }\n\n  /**\n\t * Gets the visible dataset metas in drawing order\n\t * @return {object[]}\n\t */\n  getSortedVisibleDatasetMetas() {\n    return this._getSortedDatasetMetas(true);\n  }\n\n  /**\n\t * Draws all datasets unless a plugin returns `false` to the `beforeDatasetsDraw`\n\t * hook, in which case, plugins will not be called on `afterDatasetsDraw`.\n\t * @private\n\t */\n  _drawDatasets() {\n    if (this.notifyPlugins('beforeDatasetsDraw', {cancelable: true}) === false) {\n      return;\n    }\n\n    const metasets = this.getSortedVisibleDatasetMetas();\n    for (let i = metasets.length - 1; i >= 0; --i) {\n      this._drawDataset(metasets[i]);\n    }\n\n    this.notifyPlugins('afterDatasetsDraw');\n  }\n\n  /**\n\t * Draws dataset at index unless a plugin returns `false` to the `beforeDatasetDraw`\n\t * hook, in which case, plugins will not be called on `afterDatasetDraw`.\n\t * @private\n\t */\n  _drawDataset(meta) {\n    const ctx = this.ctx;\n    const clip = meta._clip;\n    const useClip = !clip.disabled;\n    const area = this.chartArea;\n    const args = {\n      meta,\n      index: meta.index,\n      cancelable: true\n    };\n\n    if (this.notifyPlugins('beforeDatasetDraw', args) === false) {\n      return;\n    }\n\n    if (useClip) {\n      clipArea(ctx, {\n        left: clip.left === false ? 0 : area.left - clip.left,\n        right: clip.right === false ? this.width : area.right + clip.right,\n        top: clip.top === false ? 0 : area.top - clip.top,\n        bottom: clip.bottom === false ? this.height : area.bottom + clip.bottom\n      });\n    }\n\n    meta.controller.draw();\n\n    if (useClip) {\n      unclipArea(ctx);\n    }\n\n    args.cancelable = false;\n    this.notifyPlugins('afterDatasetDraw', args);\n  }\n\n  /**\n   * Checks whether the given point is in the chart area.\n   * @param {Point} point - in relative coordinates (see, e.g., getRelativePosition)\n   * @returns {boolean}\n   */\n  isPointInArea(point) {\n    return _isPointInArea(point, this.chartArea, this._minPadding);\n  }\n\n  getElementsAtEventForMode(e, mode, options, useFinalPosition) {\n    const method = Interaction.modes[mode];\n    if (typeof method === 'function') {\n      return method(this, e, options, useFinalPosition);\n    }\n\n    return [];\n  }\n\n  getDatasetMeta(datasetIndex) {\n    const dataset = this.data.datasets[datasetIndex];\n    const metasets = this._metasets;\n    let meta = metasets.filter(x => x && x._dataset === dataset).pop();\n\n    if (!meta) {\n      meta = {\n        type: null,\n        data: [],\n        dataset: null,\n        controller: null,\n        hidden: null,\t\t\t// See isDatasetVisible() comment\n        xAxisID: null,\n        yAxisID: null,\n        order: dataset && dataset.order || 0,\n        index: datasetIndex,\n        _dataset: dataset,\n        _parsed: [],\n        _sorted: false\n      };\n      metasets.push(meta);\n    }\n\n    return meta;\n  }\n\n  getContext() {\n    return this.$context || (this.$context = createContext(null, {chart: this, type: 'chart'}));\n  }\n\n  getVisibleDatasetCount() {\n    return this.getSortedVisibleDatasetMetas().length;\n  }\n\n  isDatasetVisible(datasetIndex) {\n    const dataset = this.data.datasets[datasetIndex];\n    if (!dataset) {\n      return false;\n    }\n\n    const meta = this.getDatasetMeta(datasetIndex);\n\n    // meta.hidden is a per chart dataset hidden flag override with 3 states: if true or false,\n    // the dataset.hidden value is ignored, else if null, the dataset hidden state is returned.\n    return typeof meta.hidden === 'boolean' ? !meta.hidden : !dataset.hidden;\n  }\n\n  setDatasetVisibility(datasetIndex, visible) {\n    const meta = this.getDatasetMeta(datasetIndex);\n    meta.hidden = !visible;\n  }\n\n  toggleDataVisibility(index) {\n    this._hiddenIndices[index] = !this._hiddenIndices[index];\n  }\n\n  getDataVisibility(index) {\n    return !this._hiddenIndices[index];\n  }\n\n  /**\n\t * @private\n\t */\n  _updateVisibility(datasetIndex, dataIndex, visible) {\n    const mode = visible ? 'show' : 'hide';\n    const meta = this.getDatasetMeta(datasetIndex);\n    const anims = meta.controller._resolveAnimations(undefined, mode);\n\n    if (defined(dataIndex)) {\n      meta.data[dataIndex].hidden = !visible;\n      this.update();\n    } else {\n      this.setDatasetVisibility(datasetIndex, visible);\n      // Animate visible state, so hide animation can be seen. This could be handled better if update / updateDataset returned a Promise.\n      anims.update(meta, {visible});\n      this.update((ctx) => ctx.datasetIndex === datasetIndex ? mode : undefined);\n    }\n  }\n\n  hide(datasetIndex, dataIndex) {\n    this._updateVisibility(datasetIndex, dataIndex, false);\n  }\n\n  show(datasetIndex, dataIndex) {\n    this._updateVisibility(datasetIndex, dataIndex, true);\n  }\n\n  /**\n\t * @private\n\t */\n  _destroyDatasetMeta(datasetIndex) {\n    const meta = this._metasets[datasetIndex];\n    if (meta && meta.controller) {\n      meta.controller._destroy();\n    }\n    delete this._metasets[datasetIndex];\n  }\n\n  _stop() {\n    let i, ilen;\n    this.stop();\n    animator.remove(this);\n\n    for (i = 0, ilen = this.data.datasets.length; i < ilen; ++i) {\n      this._destroyDatasetMeta(i);\n    }\n  }\n\n  destroy() {\n    this.notifyPlugins('beforeDestroy');\n    const {canvas, ctx} = this;\n\n    this._stop();\n    this.config.clearCache();\n\n    if (canvas) {\n      this.unbindEvents();\n      clearCanvas(canvas, ctx);\n      this.platform.releaseContext(ctx);\n      this.canvas = null;\n      this.ctx = null;\n    }\n\n    delete instances[this.id];\n\n    this.notifyPlugins('afterDestroy');\n  }\n\n  toBase64Image(...args) {\n    return this.canvas.toDataURL(...args);\n  }\n\n  /**\n\t * @private\n\t */\n  bindEvents() {\n    this.bindUserEvents();\n    if (this.options.responsive) {\n      this.bindResponsiveEvents();\n    } else {\n      this.attached = true;\n    }\n  }\n\n  /**\n   * @private\n   */\n  bindUserEvents() {\n    const listeners = this._listeners;\n    const platform = this.platform;\n\n    const _add = (type, listener) => {\n      platform.addEventListener(this, type, listener);\n      listeners[type] = listener;\n    };\n\n    const listener = (e, x, y) => {\n      e.offsetX = x;\n      e.offsetY = y;\n      this._eventHandler(e);\n    };\n\n    each(this.options.events, (type) => _add(type, listener));\n  }\n\n  /**\n   * @private\n   */\n  bindResponsiveEvents() {\n    if (!this._responsiveListeners) {\n      this._responsiveListeners = {};\n    }\n    const listeners = this._responsiveListeners;\n    const platform = this.platform;\n\n    const _add = (type, listener) => {\n      platform.addEventListener(this, type, listener);\n      listeners[type] = listener;\n    };\n    const _remove = (type, listener) => {\n      if (listeners[type]) {\n        platform.removeEventListener(this, type, listener);\n        delete listeners[type];\n      }\n    };\n\n    const listener = (width, height) => {\n      if (this.canvas) {\n        this.resize(width, height);\n      }\n    };\n\n    let detached; // eslint-disable-line prefer-const\n    const attached = () => {\n      _remove('attach', attached);\n\n      this.attached = true;\n      this.resize();\n\n      _add('resize', listener);\n      _add('detach', detached);\n    };\n\n    detached = () => {\n      this.attached = false;\n\n      _remove('resize', listener);\n\n      // Stop animating and remove metasets, so when re-attached, the animations start from beginning.\n      this._stop();\n      this._resize(0, 0);\n\n      _add('attach', attached);\n    };\n\n    if (platform.isAttached(this.canvas)) {\n      attached();\n    } else {\n      detached();\n    }\n  }\n\n  /**\n\t * @private\n\t */\n  unbindEvents() {\n    each(this._listeners, (listener, type) => {\n      this.platform.removeEventListener(this, type, listener);\n    });\n    this._listeners = {};\n\n    each(this._responsiveListeners, (listener, type) => {\n      this.platform.removeEventListener(this, type, listener);\n    });\n    this._responsiveListeners = undefined;\n  }\n\n  updateHoverStyle(items, mode, enabled) {\n    const prefix = enabled ? 'set' : 'remove';\n    let meta, item, i, ilen;\n\n    if (mode === 'dataset') {\n      meta = this.getDatasetMeta(items[0].datasetIndex);\n      meta.controller['_' + prefix + 'DatasetHoverStyle']();\n    }\n\n    for (i = 0, ilen = items.length; i < ilen; ++i) {\n      item = items[i];\n      const controller = item && this.getDatasetMeta(item.datasetIndex).controller;\n      if (controller) {\n        controller[prefix + 'HoverStyle'](item.element, item.datasetIndex, item.index);\n      }\n    }\n  }\n\n  /**\n\t * Get active (hovered) elements\n\t * @returns array\n\t */\n  getActiveElements() {\n    return this._active || [];\n  }\n\n  /**\n\t * Set active (hovered) elements\n\t * @param {array} activeElements New active data points\n\t */\n  setActiveElements(activeElements) {\n    const lastActive = this._active || [];\n    const active = activeElements.map(({datasetIndex, index}) => {\n      const meta = this.getDatasetMeta(datasetIndex);\n      if (!meta) {\n        throw new Error('No dataset found at index ' + datasetIndex);\n      }\n\n      return {\n        datasetIndex,\n        element: meta.data[index],\n        index,\n      };\n    });\n    const changed = !_elementsEqual(active, lastActive);\n\n    if (changed) {\n      this._active = active;\n      // Make sure we don't use the previous mouse event to override the active elements in update.\n      this._lastEvent = null;\n      this._updateHoverStyles(active, lastActive);\n    }\n  }\n\n  /**\n\t * Calls enabled plugins on the specified hook and with the given args.\n\t * This method immediately returns as soon as a plugin explicitly returns false. The\n\t * returned value can be used, for instance, to interrupt the current action.\n\t * @param {string} hook - The name of the plugin method to call (e.g. 'beforeUpdate').\n\t * @param {Object} [args] - Extra arguments to apply to the hook call.\n   * @param {import('./core.plugins').filterCallback} [filter] - Filtering function for limiting which plugins are notified\n\t * @returns {boolean} false if any of the plugins return false, else returns true.\n\t */\n  notifyPlugins(hook, args, filter) {\n    return this._plugins.notify(this, hook, args, filter);\n  }\n\n  /**\n\t * @private\n\t */\n  _updateHoverStyles(active, lastActive, replay) {\n    const hoverOptions = this.options.hover;\n    const diff = (a, b) => a.filter(x => !b.some(y => x.datasetIndex === y.datasetIndex && x.index === y.index));\n    const deactivated = diff(lastActive, active);\n    const activated = replay ? active : diff(active, lastActive);\n\n    if (deactivated.length) {\n      this.updateHoverStyle(deactivated, hoverOptions.mode, false);\n    }\n\n    if (activated.length && hoverOptions.mode) {\n      this.updateHoverStyle(activated, hoverOptions.mode, true);\n    }\n  }\n\n  /**\n\t * @private\n\t */\n  _eventHandler(e, replay) {\n    const args = {\n      event: e,\n      replay,\n      cancelable: true,\n      inChartArea: this.isPointInArea(e)\n    };\n    const eventFilter = (plugin) => (plugin.options.events || this.options.events).includes(e.native.type);\n\n    if (this.notifyPlugins('beforeEvent', args, eventFilter) === false) {\n      return;\n    }\n\n    const changed = this._handleEvent(e, replay, args.inChartArea);\n\n    args.cancelable = false;\n    this.notifyPlugins('afterEvent', args, eventFilter);\n\n    if (changed || args.changed) {\n      this.render();\n    }\n\n    return this;\n  }\n\n  /**\n\t * Handle an event\n\t * @param {ChartEvent} e the event to handle\n\t * @param {boolean} [replay] - true if the event was replayed by `update`\n   * @param {boolean} [inChartArea] - true if the event is inside chartArea\n\t * @return {boolean} true if the chart needs to re-render\n\t * @private\n\t */\n  _handleEvent(e, replay, inChartArea) {\n    const {_active: lastActive = [], options} = this;\n\n    // If the event is replayed from `update`, we should evaluate with the final positions.\n    //\n    // The `replay`:\n    // It's the last event (excluding click) that has occurred before `update`.\n    // So mouse has not moved. It's also over the chart, because there is a `replay`.\n    //\n    // The why:\n    // If animations are active, the elements haven't moved yet compared to state before update.\n    // But if they will, we are activating the elements that would be active, if this check\n    // was done after the animations have completed. => \"final positions\".\n    // If there is no animations, the \"final\" and \"current\" positions are equal.\n    // This is done so we do not have to evaluate the active elements each animation frame\n    // - it would be expensive.\n    const useFinalPosition = replay;\n    const active = this._getActiveElements(e, lastActive, inChartArea, useFinalPosition);\n    const isClick = _isClickEvent(e);\n    const lastEvent = determineLastEvent(e, this._lastEvent, inChartArea, isClick);\n\n    if (inChartArea) {\n      // Set _lastEvent to null while we are processing the event handlers.\n      // This prevents recursion if the handler calls chart.update()\n      this._lastEvent = null;\n\n      // Invoke onHover hook\n      callCallback(options.onHover, [e, active, this], this);\n\n      if (isClick) {\n        callCallback(options.onClick, [e, active, this], this);\n      }\n    }\n\n    const changed = !_elementsEqual(active, lastActive);\n    if (changed || replay) {\n      this._active = active;\n      this._updateHoverStyles(active, lastActive, replay);\n    }\n\n    this._lastEvent = lastEvent;\n\n    return changed;\n  }\n\n  /**\n   * @param {ChartEvent} e - The event\n   * @param {import('../../types').ActiveElement[]} lastActive - Previously active elements\n   * @param {boolean} inChartArea - Is the envent inside chartArea\n   * @param {boolean} useFinalPosition - Should the evaluation be done with current or final (after animation) element positions\n   * @returns {import('../../types').ActiveElement[]} - The active elements\n   * @pravate\n   */\n  _getActiveElements(e, lastActive, inChartArea, useFinalPosition) {\n    if (e.type === 'mouseout') {\n      return [];\n    }\n\n    if (!inChartArea) {\n      // Let user control the active elements outside chartArea. Eg. using Legend.\n      return lastActive;\n    }\n\n    const hoverOptions = this.options.hover;\n    return this.getElementsAtEventForMode(e, hoverOptions.mode, hoverOptions, useFinalPosition);\n  }\n}\n\n// @ts-ignore\nfunction invalidatePlugins() {\n  return each(Chart.instances, (chart) => chart._plugins.invalidate());\n}\n\nexport default Chart;\n","/**\n * @namespace Chart._adapters\n * @since 2.8.0\n * @private\n */\n\n/**\n * @typedef { import(\"../../types\").ChartOptions } ChartOptions\n */\n\n/**\n * @return {*}\n */\nfunction abstract() {\n  throw new Error('This method is not implemented: Check that a complete date adapter is provided.');\n}\n\n/**\n * Date adapter (current used by the time scale)\n * @namespace Chart._adapters._date\n * @memberof Chart._adapters\n * @private\n */\n\n/**\n * Currently supported unit string values.\n * @typedef {('millisecond'|'second'|'minute'|'hour'|'day'|'week'|'month'|'quarter'|'year')} Unit\n * @memberof Chart._adapters._date\n */\n\nexport class DateAdapter {\n\n  static override(members) {\n    Object.assign(DateAdapter.prototype, members);\n  }\n\n  constructor(options) {\n    this.options = options || {};\n  }\n\n  /**\n   * Will called with chart options after adapter creation.\n   * @param {ChartOptions} chartOptions\n   */\n  // eslint-disable-next-line no-unused-vars\n  init(chartOptions) {}\n\n  /**\n\t * Returns a map of time formats for the supported formatting units defined\n\t * in Unit as well as 'datetime' representing a detailed date/time string.\n\t * @returns {{string: string}}\n\t */\n  formats() {\n    return abstract();\n  }\n\n  /**\n\t * Parses the given `value` and return the associated timestamp.\n\t * @param {any} value - the value to parse (usually comes from the data)\n\t * @param {string} [format] - the expected data format\n\t * @returns {(number|null)}\n\t */\n  parse(value, format) { // eslint-disable-line no-unused-vars\n    return abstract();\n  }\n\n  /**\n\t * Returns the formatted date in the specified `format` for a given `timestamp`.\n\t * @param {number} timestamp - the timestamp to format\n\t * @param {string} format - the date/time token\n\t * @return {string}\n\t */\n  format(timestamp, format) { // eslint-disable-line no-unused-vars\n    return abstract();\n  }\n\n  /**\n\t * Adds the specified `amount` of `unit` to the given `timestamp`.\n\t * @param {number} timestamp - the input timestamp\n\t * @param {number} amount - the amount to add\n\t * @param {Unit} unit - the unit as string\n\t * @return {number}\n\t */\n  add(timestamp, amount, unit) { // eslint-disable-line no-unused-vars\n    return abstract();\n  }\n\n  /**\n\t * Returns the number of `unit` between the given timestamps.\n\t * @param {number} a - the input timestamp (reference)\n\t * @param {number} b - the timestamp to subtract\n\t * @param {Unit} unit - the unit as string\n\t * @return {number}\n\t */\n  diff(a, b, unit) { // eslint-disable-line no-unused-vars\n    return abstract();\n  }\n\n  /**\n\t * Returns start of `unit` for the given `timestamp`.\n\t * @param {number} timestamp - the input timestamp\n\t * @param {Unit|'isoWeek'} unit - the unit as string\n\t * @param {number} [weekday] - the ISO day of the week with 1 being Monday\n\t * and 7 being Sunday (only needed if param *unit* is `isoWeek`).\n\t * @return {number}\n\t */\n  startOf(timestamp, unit, weekday) { // eslint-disable-line no-unused-vars\n    return abstract();\n  }\n\n  /**\n\t * Returns end of `unit` for the given `timestamp`.\n\t * @param {number} timestamp - the input timestamp\n\t * @param {Unit|'isoWeek'} unit - the unit as string\n\t * @return {number}\n\t */\n  endOf(timestamp, unit) { // eslint-disable-line no-unused-vars\n    return abstract();\n  }\n\n}\n\nexport default {\n  _date: DateAdapter\n};\n","import DatasetController from '../core/core.datasetController';\nimport {\n  _arrayUnique, isArray, isNullOrUndef,\n  valueOrDefault, resolveObjectKey, sign, defined\n} from '../helpers';\n\nfunction getAllScaleValues(scale, type) {\n  if (!scale._cache.$bar) {\n    const visibleMetas = scale.getMatchingVisibleMetas(type);\n    let values = [];\n\n    for (let i = 0, ilen = visibleMetas.length; i < ilen; i++) {\n      values = values.concat(visibleMetas[i].controller.getAllParsedValues(scale));\n    }\n    scale._cache.$bar = _arrayUnique(values.sort((a, b) => a - b));\n  }\n  return scale._cache.$bar;\n}\n\n/**\n * Computes the \"optimal\" sample size to maintain bars equally sized while preventing overlap.\n * @private\n */\nfunction computeMinSampleSize(meta) {\n  const scale = meta.iScale;\n  const values = getAllScaleValues(scale, meta.type);\n  let min = scale._length;\n  let i, ilen, curr, prev;\n  const updateMinAndPrev = () => {\n    if (curr === 32767 || curr === -32768) {\n      // Ignore truncated pixels\n      return;\n    }\n    if (defined(prev)) {\n      // curr - prev === 0 is ignored\n      min = Math.min(min, Math.abs(curr - prev) || min);\n    }\n    prev = curr;\n  };\n\n  for (i = 0, ilen = values.length; i < ilen; ++i) {\n    curr = scale.getPixelForValue(values[i]);\n    updateMinAndPrev();\n  }\n\n  prev = undefined;\n  for (i = 0, ilen = scale.ticks.length; i < ilen; ++i) {\n    curr = scale.getPixelForTick(i);\n    updateMinAndPrev();\n  }\n\n  return min;\n}\n\n/**\n * Computes an \"ideal\" category based on the absolute bar thickness or, if undefined or null,\n * uses the smallest interval (see computeMinSampleSize) that prevents bar overlapping. This\n * mode currently always generates bars equally sized (until we introduce scriptable options?).\n * @private\n */\nfunction computeFitCategoryTraits(index, ruler, options, stackCount) {\n  const thickness = options.barThickness;\n  let size, ratio;\n\n  if (isNullOrUndef(thickness)) {\n    size = ruler.min * options.categoryPercentage;\n    ratio = options.barPercentage;\n  } else {\n    // When bar thickness is enforced, category and bar percentages are ignored.\n    // Note(SB): we could add support for relative bar thickness (e.g. barThickness: '50%')\n    // and deprecate barPercentage since this value is ignored when thickness is absolute.\n    size = thickness * stackCount;\n    ratio = 1;\n  }\n\n  return {\n    chunk: size / stackCount,\n    ratio,\n    start: ruler.pixels[index] - (size / 2)\n  };\n}\n\n/**\n * Computes an \"optimal\" category that globally arranges bars side by side (no gap when\n * percentage options are 1), based on the previous and following categories. This mode\n * generates bars with different widths when data are not evenly spaced.\n * @private\n */\nfunction computeFlexCategoryTraits(index, ruler, options, stackCount) {\n  const pixels = ruler.pixels;\n  const curr = pixels[index];\n  let prev = index > 0 ? pixels[index - 1] : null;\n  let next = index < pixels.length - 1 ? pixels[index + 1] : null;\n  const percent = options.categoryPercentage;\n\n  if (prev === null) {\n    // first data: its size is double based on the next point or,\n    // if it's also the last data, we use the scale size.\n    prev = curr - (next === null ? ruler.end - ruler.start : next - curr);\n  }\n\n  if (next === null) {\n    // last data: its size is also double based on the previous point.\n    next = curr + curr - prev;\n  }\n\n  const start = curr - (curr - Math.min(prev, next)) / 2 * percent;\n  const size = Math.abs(next - prev) / 2 * percent;\n\n  return {\n    chunk: size / stackCount,\n    ratio: options.barPercentage,\n    start\n  };\n}\n\nfunction parseFloatBar(entry, item, vScale, i) {\n  const startValue = vScale.parse(entry[0], i);\n  const endValue = vScale.parse(entry[1], i);\n  const min = Math.min(startValue, endValue);\n  const max = Math.max(startValue, endValue);\n  let barStart = min;\n  let barEnd = max;\n\n  if (Math.abs(min) > Math.abs(max)) {\n    barStart = max;\n    barEnd = min;\n  }\n\n  // Store `barEnd` (furthest away from origin) as parsed value,\n  // to make stacking straight forward\n  item[vScale.axis] = barEnd;\n\n  item._custom = {\n    barStart,\n    barEnd,\n    start: startValue,\n    end: endValue,\n    min,\n    max\n  };\n}\n\nfunction parseValue(entry, item, vScale, i) {\n  if (isArray(entry)) {\n    parseFloatBar(entry, item, vScale, i);\n  } else {\n    item[vScale.axis] = vScale.parse(entry, i);\n  }\n  return item;\n}\n\nfunction parseArrayOrPrimitive(meta, data, start, count) {\n  const iScale = meta.iScale;\n  const vScale = meta.vScale;\n  const labels = iScale.getLabels();\n  const singleScale = iScale === vScale;\n  const parsed = [];\n  let i, ilen, item, entry;\n\n  for (i = start, ilen = start + count; i < ilen; ++i) {\n    entry = data[i];\n    item = {};\n    item[iScale.axis] = singleScale || iScale.parse(labels[i], i);\n    parsed.push(parseValue(entry, item, vScale, i));\n  }\n  return parsed;\n}\n\nfunction isFloatBar(custom) {\n  return custom && custom.barStart !== undefined && custom.barEnd !== undefined;\n}\n\nfunction barSign(size, vScale, actualBase) {\n  if (size !== 0) {\n    return sign(size);\n  }\n  return (vScale.isHorizontal() ? 1 : -1) * (vScale.min >= actualBase ? 1 : -1);\n}\n\nfunction borderProps(properties) {\n  let reverse, start, end, top, bottom;\n  if (properties.horizontal) {\n    reverse = properties.base > properties.x;\n    start = 'left';\n    end = 'right';\n  } else {\n    reverse = properties.base < properties.y;\n    start = 'bottom';\n    end = 'top';\n  }\n  if (reverse) {\n    top = 'end';\n    bottom = 'start';\n  } else {\n    top = 'start';\n    bottom = 'end';\n  }\n  return {start, end, reverse, top, bottom};\n}\n\nfunction setBorderSkipped(properties, options, stack, index) {\n  let edge = options.borderSkipped;\n  const res = {};\n\n  if (!edge) {\n    properties.borderSkipped = res;\n    return;\n  }\n\n  if (edge === true) {\n    properties.borderSkipped = {top: true, right: true, bottom: true, left: true};\n    return;\n  }\n\n  const {start, end, reverse, top, bottom} = borderProps(properties);\n\n  if (edge === 'middle' && stack) {\n    properties.enableBorderRadius = true;\n    if ((stack._top || 0) === index) {\n      edge = top;\n    } else if ((stack._bottom || 0) === index) {\n      edge = bottom;\n    } else {\n      res[parseEdge(bottom, start, end, reverse)] = true;\n      edge = top;\n    }\n  }\n\n  res[parseEdge(edge, start, end, reverse)] = true;\n  properties.borderSkipped = res;\n}\n\nfunction parseEdge(edge, a, b, reverse) {\n  if (reverse) {\n    edge = swap(edge, a, b);\n    edge = startEnd(edge, b, a);\n  } else {\n    edge = startEnd(edge, a, b);\n  }\n  return edge;\n}\n\nfunction swap(orig, v1, v2) {\n  return orig === v1 ? v2 : orig === v2 ? v1 : orig;\n}\n\nfunction startEnd(v, start, end) {\n  return v === 'start' ? start : v === 'end' ? end : v;\n}\n\nfunction setInflateAmount(properties, {inflateAmount}, ratio) {\n  properties.inflateAmount = inflateAmount === 'auto'\n    ? ratio === 1 ? 0.33 : 0\n    : inflateAmount;\n}\n\nexport default class BarController extends DatasetController {\n\n  static id = 'bar';\n\n  /**\n   * @type {any}\n   */\n  static defaults = {\n    datasetElementType: false,\n    dataElementType: 'bar',\n\n    categoryPercentage: 0.8,\n    barPercentage: 0.9,\n    grouped: true,\n\n    animations: {\n      numbers: {\n        type: 'number',\n        properties: ['x', 'y', 'base', 'width', 'height']\n      }\n    }\n  };\n\n  /**\n   * @type {any}\n   */\n  static overrides = {\n    scales: {\n      _index_: {\n        type: 'category',\n        offset: true,\n        grid: {\n          offset: true\n        }\n      },\n      _value_: {\n        type: 'linear',\n        beginAtZero: true,\n      }\n    }\n  };\n\n\n  /**\n\t * Overriding primitive data parsing since we support mixed primitive/array\n\t * data for float bars\n\t * @protected\n\t */\n  parsePrimitiveData(meta, data, start, count) {\n    return parseArrayOrPrimitive(meta, data, start, count);\n  }\n\n  /**\n\t * Overriding array data parsing since we support mixed primitive/array\n\t * data for float bars\n\t * @protected\n\t */\n  parseArrayData(meta, data, start, count) {\n    return parseArrayOrPrimitive(meta, data, start, count);\n  }\n\n  /**\n\t * Overriding object data parsing since we support mixed primitive/array\n\t * value-scale data for float bars\n\t * @protected\n\t */\n  parseObjectData(meta, data, start, count) {\n    const {iScale, vScale} = meta;\n    const {xAxisKey = 'x', yAxisKey = 'y'} = this._parsing;\n    const iAxisKey = iScale.axis === 'x' ? xAxisKey : yAxisKey;\n    const vAxisKey = vScale.axis === 'x' ? xAxisKey : yAxisKey;\n    const parsed = [];\n    let i, ilen, item, obj;\n    for (i = start, ilen = start + count; i < ilen; ++i) {\n      obj = data[i];\n      item = {};\n      item[iScale.axis] = iScale.parse(resolveObjectKey(obj, iAxisKey), i);\n      parsed.push(parseValue(resolveObjectKey(obj, vAxisKey), item, vScale, i));\n    }\n    return parsed;\n  }\n\n  /**\n\t * @protected\n\t */\n  updateRangeFromParsed(range, scale, parsed, stack) {\n    super.updateRangeFromParsed(range, scale, parsed, stack);\n    const custom = parsed._custom;\n    if (custom && scale === this._cachedMeta.vScale) {\n      // float bar: only one end of the bar is considered by `super`\n      range.min = Math.min(range.min, custom.min);\n      range.max = Math.max(range.max, custom.max);\n    }\n  }\n\n  /**\n\t * @return {number|boolean}\n\t * @protected\n\t */\n  getMaxOverflow() {\n    return 0;\n  }\n\n  /**\n\t * @protected\n\t */\n  getLabelAndValue(index) {\n    const meta = this._cachedMeta;\n    const {iScale, vScale} = meta;\n    const parsed = this.getParsed(index);\n    const custom = parsed._custom;\n    const value = isFloatBar(custom)\n      ? '[' + custom.start + ', ' + custom.end + ']'\n      : '' + vScale.getLabelForValue(parsed[vScale.axis]);\n\n    return {\n      label: '' + iScale.getLabelForValue(parsed[iScale.axis]),\n      value\n    };\n  }\n\n  initialize() {\n    this.enableOptionSharing = true;\n\n    super.initialize();\n\n    const meta = this._cachedMeta;\n    meta.stack = this.getDataset().stack;\n  }\n\n  update(mode) {\n    const meta = this._cachedMeta;\n    this.updateElements(meta.data, 0, meta.data.length, mode);\n  }\n\n  updateElements(bars, start, count, mode) {\n    const reset = mode === 'reset';\n    const {index, _cachedMeta: {vScale}} = this;\n    const base = vScale.getBasePixel();\n    const horizontal = vScale.isHorizontal();\n    const ruler = this._getRuler();\n    const {sharedOptions, includeOptions} = this._getSharedOptions(start, mode);\n\n    for (let i = start; i < start + count; i++) {\n      const parsed = this.getParsed(i);\n      const vpixels = reset || isNullOrUndef(parsed[vScale.axis]) ? {base, head: base} : this._calculateBarValuePixels(i);\n      const ipixels = this._calculateBarIndexPixels(i, ruler);\n      const stack = (parsed._stacks || {})[vScale.axis];\n\n      const properties = {\n        horizontal,\n        base: vpixels.base,\n        enableBorderRadius: !stack || isFloatBar(parsed._custom) || (index === stack._top || index === stack._bottom),\n        x: horizontal ? vpixels.head : ipixels.center,\n        y: horizontal ? ipixels.center : vpixels.head,\n        height: horizontal ? ipixels.size : Math.abs(vpixels.size),\n        width: horizontal ? Math.abs(vpixels.size) : ipixels.size\n      };\n\n      if (includeOptions) {\n        properties.options = sharedOptions || this.resolveDataElementOptions(i, bars[i].active ? 'active' : mode);\n      }\n      const options = properties.options || bars[i].options;\n      setBorderSkipped(properties, options, stack, index);\n      setInflateAmount(properties, options, ruler.ratio);\n      this.updateElement(bars[i], i, properties, mode);\n    }\n  }\n\n  /**\n\t * Returns the stacks based on groups and bar visibility.\n\t * @param {number} [last] - The dataset index\n\t * @param {number} [dataIndex] - The data index of the ruler\n\t * @returns {string[]} The list of stack IDs\n\t * @private\n\t */\n  _getStacks(last, dataIndex) {\n    const {iScale} = this._cachedMeta;\n    const metasets = iScale.getMatchingVisibleMetas(this._type)\n      .filter(meta => meta.controller.options.grouped);\n    const stacked = iScale.options.stacked;\n    const stacks = [];\n\n    const skipNull = (meta) => {\n      const parsed = meta.controller.getParsed(dataIndex);\n      const val = parsed && parsed[meta.vScale.axis];\n\n      if (isNullOrUndef(val) || isNaN(val)) {\n        return true;\n      }\n    };\n\n    for (const meta of metasets) {\n      if (dataIndex !== undefined && skipNull(meta)) {\n        continue;\n      }\n\n      // stacked   | meta.stack\n      //           | found | not found | undefined\n      // false     |   x   |     x     |     x\n      // true      |       |     x     |\n      // undefined |       |     x     |     x\n      if (stacked === false || stacks.indexOf(meta.stack) === -1 ||\n\t\t\t\t(stacked === undefined && meta.stack === undefined)) {\n        stacks.push(meta.stack);\n      }\n      if (meta.index === last) {\n        break;\n      }\n    }\n\n    // No stacks? that means there is no visible data. Let's still initialize an `undefined`\n    // stack where possible invisible bars will be located.\n    // https://github.com/chartjs/Chart.js/issues/6368\n    if (!stacks.length) {\n      stacks.push(undefined);\n    }\n\n    return stacks;\n  }\n\n  /**\n\t * Returns the effective number of stacks based on groups and bar visibility.\n\t * @private\n\t */\n  _getStackCount(index) {\n    return this._getStacks(undefined, index).length;\n  }\n\n  /**\n\t * Returns the stack index for the given dataset based on groups and bar visibility.\n\t * @param {number} [datasetIndex] - The dataset index\n\t * @param {string} [name] - The stack name to find\n   * @param {number} [dataIndex]\n\t * @returns {number} The stack index\n\t * @private\n\t */\n  _getStackIndex(datasetIndex, name, dataIndex) {\n    const stacks = this._getStacks(datasetIndex, dataIndex);\n    const index = (name !== undefined)\n      ? stacks.indexOf(name)\n      : -1; // indexOf returns -1 if element is not present\n\n    return (index === -1)\n      ? stacks.length - 1\n      : index;\n  }\n\n  /**\n\t * @private\n\t */\n  _getRuler() {\n    const opts = this.options;\n    const meta = this._cachedMeta;\n    const iScale = meta.iScale;\n    const pixels = [];\n    let i, ilen;\n\n    for (i = 0, ilen = meta.data.length; i < ilen; ++i) {\n      pixels.push(iScale.getPixelForValue(this.getParsed(i)[iScale.axis], i));\n    }\n\n    const barThickness = opts.barThickness;\n    const min = barThickness || computeMinSampleSize(meta);\n\n    return {\n      min,\n      pixels,\n      start: iScale._startPixel,\n      end: iScale._endPixel,\n      stackCount: this._getStackCount(),\n      scale: iScale,\n      grouped: opts.grouped,\n      // bar thickness ratio used for non-grouped bars\n      ratio: barThickness ? 1 : opts.categoryPercentage * opts.barPercentage\n    };\n  }\n\n  /**\n\t * Note: pixel values are not clamped to the scale area.\n\t * @private\n\t */\n  _calculateBarValuePixels(index) {\n    const {_cachedMeta: {vScale, _stacked}, options: {base: baseValue, minBarLength}} = this;\n    const actualBase = baseValue || 0;\n    const parsed = this.getParsed(index);\n    const custom = parsed._custom;\n    const floating = isFloatBar(custom);\n    let value = parsed[vScale.axis];\n    let start = 0;\n    let length = _stacked ? this.applyStack(vScale, parsed, _stacked) : value;\n    let head, size;\n\n    if (length !== value) {\n      start = length - value;\n      length = value;\n    }\n\n    if (floating) {\n      value = custom.barStart;\n      length = custom.barEnd - custom.barStart;\n      // bars crossing origin are not stacked\n      if (value !== 0 && sign(value) !== sign(custom.barEnd)) {\n        start = 0;\n      }\n      start += value;\n    }\n\n    const startValue = !isNullOrUndef(baseValue) && !floating ? baseValue : start;\n    let base = vScale.getPixelForValue(startValue);\n\n    if (this.chart.getDataVisibility(index)) {\n      head = vScale.getPixelForValue(start + length);\n    } else {\n      // When not visible, no height\n      head = base;\n    }\n\n    size = head - base;\n\n    if (Math.abs(size) < minBarLength) {\n      size = barSign(size, vScale, actualBase) * minBarLength;\n      if (value === actualBase) {\n        base -= size / 2;\n      }\n      const startPixel = vScale.getPixelForDecimal(0);\n      const endPixel = vScale.getPixelForDecimal(1);\n      const min = Math.min(startPixel, endPixel);\n      const max = Math.max(startPixel, endPixel);\n      base = Math.max(Math.min(base, max), min);\n      head = base + size;\n    }\n\n    if (base === vScale.getPixelForValue(actualBase)) {\n      const halfGrid = sign(size) * vScale.getLineWidthForValue(actualBase) / 2;\n      base += halfGrid;\n      size -= halfGrid;\n    }\n\n    return {\n      size,\n      base,\n      head,\n      center: head + size / 2\n    };\n  }\n\n  /**\n\t * @private\n\t */\n  _calculateBarIndexPixels(index, ruler) {\n    const scale = ruler.scale;\n    const options = this.options;\n    const skipNull = options.skipNull;\n    const maxBarThickness = valueOrDefault(options.maxBarThickness, Infinity);\n    let center, size;\n    if (ruler.grouped) {\n      const stackCount = skipNull ? this._getStackCount(index) : ruler.stackCount;\n      const range = options.barThickness === 'flex'\n        ? computeFlexCategoryTraits(index, ruler, options, stackCount)\n        : computeFitCategoryTraits(index, ruler, options, stackCount);\n\n      const stackIndex = this._getStackIndex(this.index, this._cachedMeta.stack, skipNull ? index : undefined);\n      center = range.start + (range.chunk * stackIndex) + (range.chunk / 2);\n      size = Math.min(maxBarThickness, range.chunk * range.ratio);\n    } else {\n      // For non-grouped bar charts, exact pixel values are used\n      center = scale.getPixelForValue(this.getParsed(index)[scale.axis], index);\n      size = Math.min(maxBarThickness, ruler.min * ruler.ratio);\n    }\n\n    return {\n      base: center - size / 2,\n      head: center + size / 2,\n      center,\n      size\n    };\n  }\n\n  draw() {\n    const meta = this._cachedMeta;\n    const vScale = meta.vScale;\n    const rects = meta.data;\n    const ilen = rects.length;\n    let i = 0;\n\n    for (; i < ilen; ++i) {\n      if (this.getParsed(i)[vScale.axis] !== null) {\n        rects[i].draw(this._ctx);\n      }\n    }\n  }\n\n}\n","import DatasetController from '../core/core.datasetController';\nimport {isArray, isObject, resolveObjectKey, toPercentage, toDimension, valueOrDefault} from '../helpers/helpers.core';\nimport {formatNumber} from '../helpers/helpers.intl';\nimport {toRadians, PI, TAU, HALF_PI, _angleBetween} from '../helpers/helpers.math';\n\n/**\n * @typedef { import(\"../core/core.controller\").default } Chart\n */\n\nfunction getRatioAndOffset(rotation, circumference, cutout) {\n  let ratioX = 1;\n  let ratioY = 1;\n  let offsetX = 0;\n  let offsetY = 0;\n  // If the chart's circumference isn't a full circle, calculate size as a ratio of the width/height of the arc\n  if (circumference < TAU) {\n    const startAngle = rotation;\n    const endAngle = startAngle + circumference;\n    const startX = Math.cos(startAngle);\n    const startY = Math.sin(startAngle);\n    const endX = Math.cos(endAngle);\n    const endY = Math.sin(endAngle);\n    const calcMax = (angle, a, b) => _angleBetween(angle, startAngle, endAngle, true) ? 1 : Math.max(a, a * cutout, b, b * cutout);\n    const calcMin = (angle, a, b) => _angleBetween(angle, startAngle, endAngle, true) ? -1 : Math.min(a, a * cutout, b, b * cutout);\n    const maxX = calcMax(0, startX, endX);\n    const maxY = calcMax(HALF_PI, startY, endY);\n    const minX = calcMin(PI, startX, endX);\n    const minY = calcMin(PI + HALF_PI, startY, endY);\n    ratioX = (maxX - minX) / 2;\n    ratioY = (maxY - minY) / 2;\n    offsetX = -(maxX + minX) / 2;\n    offsetY = -(maxY + minY) / 2;\n  }\n  return {ratioX, ratioY, offsetX, offsetY};\n}\n\nexport default class DoughnutController extends DatasetController {\n\n  static id = 'doughnut';\n\n  /**\n   * @type {any}\n   */\n  static defaults = {\n    datasetElementType: false,\n    dataElementType: 'arc',\n    animation: {\n      // Boolean - Whether we animate the rotation of the Doughnut\n      animateRotate: true,\n      // Boolean - Whether we animate scaling the Doughnut from the centre\n      animateScale: false\n    },\n    animations: {\n      numbers: {\n        type: 'number',\n        properties: ['circumference', 'endAngle', 'innerRadius', 'outerRadius', 'startAngle', 'x', 'y', 'offset', 'borderWidth', 'spacing']\n      },\n    },\n    // The percentage of the chart that we cut out of the middle.\n    cutout: '50%',\n\n    // The rotation of the chart, where the first data arc begins.\n    rotation: 0,\n\n    // The total circumference of the chart.\n    circumference: 360,\n\n    // The outr radius of the chart\n    radius: '100%',\n\n    // Spacing between arcs\n    spacing: 0,\n\n    indexAxis: 'r',\n  };\n\n  static descriptors = {\n    _scriptable: (name) => name !== 'spacing',\n    _indexable: (name) => name !== 'spacing',\n  };\n\n  /**\n   * @type {any}\n   */\n  static overrides = {\n    aspectRatio: 1,\n\n    // Need to override these to give a nice default\n    plugins: {\n      legend: {\n        labels: {\n          generateLabels(chart) {\n            const data = chart.data;\n            if (data.labels.length && data.datasets.length) {\n              const {labels: {pointStyle}} = chart.legend.options;\n\n              return data.labels.map((label, i) => {\n                const meta = chart.getDatasetMeta(0);\n                const style = meta.controller.getStyle(i);\n\n                return {\n                  text: label,\n                  fillStyle: style.backgroundColor,\n                  strokeStyle: style.borderColor,\n                  lineWidth: style.borderWidth,\n                  pointStyle: pointStyle,\n                  hidden: !chart.getDataVisibility(i),\n\n                  // Extra data used for toggling the correct item\n                  index: i\n                };\n              });\n            }\n            return [];\n          }\n        },\n\n        onClick(e, legendItem, legend) {\n          legend.chart.toggleDataVisibility(legendItem.index);\n          legend.chart.update();\n        }\n      },\n      tooltip: {\n        callbacks: {\n          title() {\n            return '';\n          },\n          label(tooltipItem) {\n            let dataLabel = tooltipItem.label;\n            const value = ': ' + tooltipItem.formattedValue;\n\n            if (isArray(dataLabel)) {\n              // show value on first line of multiline label\n              // need to clone because we are changing the value\n              dataLabel = dataLabel.slice();\n              dataLabel[0] += value;\n            } else {\n              dataLabel += value;\n            }\n\n            return dataLabel;\n          }\n        }\n      }\n    }\n  };\n\n  constructor(chart, datasetIndex) {\n    super(chart, datasetIndex);\n\n    this.enableOptionSharing = true;\n    this.innerRadius = undefined;\n    this.outerRadius = undefined;\n    this.offsetX = undefined;\n    this.offsetY = undefined;\n  }\n\n  linkScales() {}\n\n  /**\n\t * Override data parsing, since we are not using scales\n\t */\n  parse(start, count) {\n    const data = this.getDataset().data;\n    const meta = this._cachedMeta;\n\n    if (this._parsing === false) {\n      meta._parsed = data;\n    } else {\n      let getter = (i) => +data[i];\n\n      if (isObject(data[start])) {\n        const {key = 'value'} = this._parsing;\n        getter = (i) => +resolveObjectKey(data[i], key);\n      }\n\n      let i, ilen;\n      for (i = start, ilen = start + count; i < ilen; ++i) {\n        meta._parsed[i] = getter(i);\n      }\n    }\n  }\n\n  /**\n\t * @private\n\t */\n  _getRotation() {\n    return toRadians(this.options.rotation - 90);\n  }\n\n  /**\n\t * @private\n\t */\n  _getCircumference() {\n    return toRadians(this.options.circumference);\n  }\n\n  /**\n\t * Get the maximal rotation & circumference extents\n\t * across all visible datasets.\n\t */\n  _getRotationExtents() {\n    let min = TAU;\n    let max = -TAU;\n\n    for (let i = 0; i < this.chart.data.datasets.length; ++i) {\n      if (this.chart.isDatasetVisible(i)) {\n        const controller = this.chart.getDatasetMeta(i).controller;\n        const rotation = controller._getRotation();\n        const circumference = controller._getCircumference();\n\n        min = Math.min(min, rotation);\n        max = Math.max(max, rotation + circumference);\n      }\n    }\n\n    return {\n      rotation: min,\n      circumference: max - min,\n    };\n  }\n\n  /**\n\t * @param {string} mode\n\t */\n  update(mode) {\n    const chart = this.chart;\n    const {chartArea} = chart;\n    const meta = this._cachedMeta;\n    const arcs = meta.data;\n    const spacing = this.getMaxBorderWidth() + this.getMaxOffset(arcs) + this.options.spacing;\n    const maxSize = Math.max((Math.min(chartArea.width, chartArea.height) - spacing) / 2, 0);\n    const cutout = Math.min(toPercentage(this.options.cutout, maxSize), 1);\n    const chartWeight = this._getRingWeight(this.index);\n\n    // Compute the maximal rotation & circumference limits.\n    // If we only consider our dataset, this can cause problems when two datasets\n    // are both less than a circle with different rotations (starting angles)\n    const {circumference, rotation} = this._getRotationExtents();\n    const {ratioX, ratioY, offsetX, offsetY} = getRatioAndOffset(rotation, circumference, cutout);\n    const maxWidth = (chartArea.width - spacing) / ratioX;\n    const maxHeight = (chartArea.height - spacing) / ratioY;\n    const maxRadius = Math.max(Math.min(maxWidth, maxHeight) / 2, 0);\n    const outerRadius = toDimension(this.options.radius, maxRadius);\n    const innerRadius = Math.max(outerRadius * cutout, 0);\n    const radiusLength = (outerRadius - innerRadius) / this._getVisibleDatasetWeightTotal();\n    this.offsetX = offsetX * outerRadius;\n    this.offsetY = offsetY * outerRadius;\n\n    meta.total = this.calculateTotal();\n\n    this.outerRadius = outerRadius - radiusLength * this._getRingWeightOffset(this.index);\n    this.innerRadius = Math.max(this.outerRadius - radiusLength * chartWeight, 0);\n\n    this.updateElements(arcs, 0, arcs.length, mode);\n  }\n\n  /**\n   * @private\n   */\n  _circumference(i, reset) {\n    const opts = this.options;\n    const meta = this._cachedMeta;\n    const circumference = this._getCircumference();\n    if ((reset && opts.animation.animateRotate) || !this.chart.getDataVisibility(i) || meta._parsed[i] === null || meta.data[i].hidden) {\n      return 0;\n    }\n    return this.calculateCircumference(meta._parsed[i] * circumference / TAU);\n  }\n\n  updateElements(arcs, start, count, mode) {\n    const reset = mode === 'reset';\n    const chart = this.chart;\n    const chartArea = chart.chartArea;\n    const opts = chart.options;\n    const animationOpts = opts.animation;\n    const centerX = (chartArea.left + chartArea.right) / 2;\n    const centerY = (chartArea.top + chartArea.bottom) / 2;\n    const animateScale = reset && animationOpts.animateScale;\n    const innerRadius = animateScale ? 0 : this.innerRadius;\n    const outerRadius = animateScale ? 0 : this.outerRadius;\n    const {sharedOptions, includeOptions} = this._getSharedOptions(start, mode);\n    let startAngle = this._getRotation();\n    let i;\n\n    for (i = 0; i < start; ++i) {\n      startAngle += this._circumference(i, reset);\n    }\n\n    for (i = start; i < start + count; ++i) {\n      const circumference = this._circumference(i, reset);\n      const arc = arcs[i];\n      const properties = {\n        x: centerX + this.offsetX,\n        y: centerY + this.offsetY,\n        startAngle,\n        endAngle: startAngle + circumference,\n        circumference,\n        outerRadius,\n        innerRadius\n      };\n      if (includeOptions) {\n        properties.options = sharedOptions || this.resolveDataElementOptions(i, arc.active ? 'active' : mode);\n      }\n      startAngle += circumference;\n\n      this.updateElement(arc, i, properties, mode);\n    }\n  }\n\n  calculateTotal() {\n    const meta = this._cachedMeta;\n    const metaData = meta.data;\n    let total = 0;\n    let i;\n\n    for (i = 0; i < metaData.length; i++) {\n      const value = meta._parsed[i];\n      if (value !== null && !isNaN(value) && this.chart.getDataVisibility(i) && !metaData[i].hidden) {\n        total += Math.abs(value);\n      }\n    }\n\n    return total;\n  }\n\n  calculateCircumference(value) {\n    const total = this._cachedMeta.total;\n    if (total > 0 && !isNaN(value)) {\n      return TAU * (Math.abs(value) / total);\n    }\n    return 0;\n  }\n\n  getLabelAndValue(index) {\n    const meta = this._cachedMeta;\n    const chart = this.chart;\n    const labels = chart.data.labels || [];\n    const value = formatNumber(meta._parsed[index], chart.options.locale);\n\n    return {\n      label: labels[index] || '',\n      value,\n    };\n  }\n\n  getMaxBorderWidth(arcs) {\n    let max = 0;\n    const chart = this.chart;\n    let i, ilen, meta, controller, options;\n\n    if (!arcs) {\n      // Find the outmost visible dataset\n      for (i = 0, ilen = chart.data.datasets.length; i < ilen; ++i) {\n        if (chart.isDatasetVisible(i)) {\n          meta = chart.getDatasetMeta(i);\n          arcs = meta.data;\n          controller = meta.controller;\n          break;\n        }\n      }\n    }\n\n    if (!arcs) {\n      return 0;\n    }\n\n    for (i = 0, ilen = arcs.length; i < ilen; ++i) {\n      options = controller.resolveDataElementOptions(i);\n      if (options.borderAlign !== 'inner') {\n        max = Math.max(max, options.borderWidth || 0, options.hoverBorderWidth || 0);\n      }\n    }\n    return max;\n  }\n\n  getMaxOffset(arcs) {\n    let max = 0;\n\n    for (let i = 0, ilen = arcs.length; i < ilen; ++i) {\n      const options = this.resolveDataElementOptions(i);\n      max = Math.max(max, options.offset || 0, options.hoverOffset || 0);\n    }\n    return max;\n  }\n\n  /**\n\t * Get radius length offset of the dataset in relation to the visible datasets weights. This allows determining the inner and outer radius correctly\n\t * @private\n\t */\n  _getRingWeightOffset(datasetIndex) {\n    let ringWeightOffset = 0;\n\n    for (let i = 0; i < datasetIndex; ++i) {\n      if (this.chart.isDatasetVisible(i)) {\n        ringWeightOffset += this._getRingWeight(i);\n      }\n    }\n\n    return ringWeightOffset;\n  }\n\n  /**\n\t * @private\n\t */\n  _getRingWeight(datasetIndex) {\n    return Math.max(valueOrDefault(this.chart.data.datasets[datasetIndex].weight, 1), 0);\n  }\n\n  /**\n\t * Returns the sum of all visible data set weights.\n\t * @private\n\t */\n  _getVisibleDatasetWeightTotal() {\n    return this._getRingWeightOffset(this.chart.data.datasets.length) || 1;\n  }\n}\n","import DatasetController from '../core/core.datasetController';\nimport {valueOrDefault} from '../helpers/helpers.core';\n\nexport default class BubbleController extends DatasetController {\n\n  static id = 'bubble';\n\n  /**\n   * @type {any}\n   */\n  static defaults = {\n    datasetElementType: false,\n    dataElementType: 'point',\n\n    animations: {\n      numbers: {\n        type: 'number',\n        properties: ['x', 'y', 'borderWidth', 'radius']\n      }\n    }\n  };\n\n  /**\n   * @type {any}\n   */\n  static overrides = {\n    scales: {\n      x: {\n        type: 'linear'\n      },\n      y: {\n        type: 'linear'\n      }\n    },\n    plugins: {\n      tooltip: {\n        callbacks: {\n          title() {\n            // Title doesn't make sense for scatter since we format the data as a point\n            return '';\n          }\n        }\n      }\n    }\n  };\n\n  initialize() {\n    this.enableOptionSharing = true;\n    super.initialize();\n  }\n\n  /**\n\t * Parse array of primitive values\n\t * @protected\n\t */\n  parsePrimitiveData(meta, data, start, count) {\n    const parsed = super.parsePrimitiveData(meta, data, start, count);\n    for (let i = 0; i < parsed.length; i++) {\n      parsed[i]._custom = this.resolveDataElementOptions(i + start).radius;\n    }\n    return parsed;\n  }\n\n  /**\n\t * Parse array of arrays\n\t * @protected\n\t */\n  parseArrayData(meta, data, start, count) {\n    const parsed = super.parseArrayData(meta, data, start, count);\n    for (let i = 0; i < parsed.length; i++) {\n      const item = data[start + i];\n      parsed[i]._custom = valueOrDefault(item[2], this.resolveDataElementOptions(i + start).radius);\n    }\n    return parsed;\n  }\n\n  /**\n\t * Parse array of objects\n\t * @protected\n\t */\n  parseObjectData(meta, data, start, count) {\n    const parsed = super.parseObjectData(meta, data, start, count);\n    for (let i = 0; i < parsed.length; i++) {\n      const item = data[start + i];\n      parsed[i]._custom = valueOrDefault(item && item.r && +item.r, this.resolveDataElementOptions(i + start).radius);\n    }\n    return parsed;\n  }\n\n  /**\n\t * @protected\n\t */\n  getMaxOverflow() {\n    const data = this._cachedMeta.data;\n\n    let max = 0;\n    for (let i = data.length - 1; i >= 0; --i) {\n      max = Math.max(max, data[i].size(this.resolveDataElementOptions(i)) / 2);\n    }\n    return max > 0 && max;\n  }\n\n  /**\n\t * @protected\n\t */\n  getLabelAndValue(index) {\n    const meta = this._cachedMeta;\n    const {xScale, yScale} = meta;\n    const parsed = this.getParsed(index);\n    const x = xScale.getLabelForValue(parsed.x);\n    const y = yScale.getLabelForValue(parsed.y);\n    const r = parsed._custom;\n\n    return {\n      label: meta.label,\n      value: '(' + x + ', ' + y + (r ? ', ' + r : '') + ')'\n    };\n  }\n\n  update(mode) {\n    const points = this._cachedMeta.data;\n\n    // Update Points\n    this.updateElements(points, 0, points.length, mode);\n  }\n\n  updateElements(points, start, count, mode) {\n    const reset = mode === 'reset';\n    const {iScale, vScale} = this._cachedMeta;\n    const {sharedOptions, includeOptions} = this._getSharedOptions(start, mode);\n    const iAxis = iScale.axis;\n    const vAxis = vScale.axis;\n\n    for (let i = start; i < start + count; i++) {\n      const point = points[i];\n      const parsed = !reset && this.getParsed(i);\n      const properties = {};\n      const iPixel = properties[iAxis] = reset ? iScale.getPixelForDecimal(0.5) : iScale.getPixelForValue(parsed[iAxis]);\n      const vPixel = properties[vAxis] = reset ? vScale.getBasePixel() : vScale.getPixelForValue(parsed[vAxis]);\n\n      properties.skip = isNaN(iPixel) || isNaN(vPixel);\n\n      if (includeOptions) {\n        properties.options = sharedOptions || this.resolveDataElementOptions(i, point.active ? 'active' : mode);\n\n        if (reset) {\n          properties.options.radius = 0;\n        }\n      }\n\n      this.updateElement(point, i, properties, mode);\n    }\n  }\n\n  /**\n\t * @param {number} index\n\t * @param {string} [mode]\n\t * @protected\n\t */\n  resolveDataElementOptions(index, mode) {\n    const parsed = this.getParsed(index);\n    let values = super.resolveDataElementOptions(index, mode);\n\n    // In case values were cached (and thus frozen), we need to clone the values\n    if (values.$shared) {\n      values = Object.assign({}, values, {$shared: false});\n    }\n\n    // Custom radius resolution\n    const radius = values.radius;\n    if (mode !== 'active') {\n      values.radius = 0;\n    }\n    values.radius += valueOrDefault(parsed && parsed._custom, radius);\n\n    return values;\n  }\n}\n","import DatasetController from '../core/core.datasetController';\nimport {isNullOrUndef} from '../helpers';\nimport {isNumber} from '../helpers/helpers.math';\nimport {_getStartAndCountOfVisiblePoints, _scaleRangesChanged} from '../helpers/helpers.extras';\n\nexport default class LineController extends DatasetController {\n\n  static id = 'line';\n\n  /**\n   * @type {any}\n   */\n  static defaults = {\n    datasetElementType: 'line',\n    dataElementType: 'point',\n\n    showLine: true,\n    spanGaps: false,\n  };\n\n  /**\n   * @type {any}\n   */\n  static overrides = {\n    scales: {\n      _index_: {\n        type: 'category',\n      },\n      _value_: {\n        type: 'linear',\n      },\n    }\n  };\n\n  initialize() {\n    this.enableOptionSharing = true;\n    this.supportsDecimation = true;\n    super.initialize();\n  }\n\n  update(mode) {\n    const meta = this._cachedMeta;\n    const {dataset: line, data: points = [], _dataset} = meta;\n    // @ts-ignore\n    const animationsDisabled = this.chart._animationsDisabled;\n    let {start, count} = _getStartAndCountOfVisiblePoints(meta, points, animationsDisabled);\n\n    this._drawStart = start;\n    this._drawCount = count;\n\n    if (_scaleRangesChanged(meta)) {\n      start = 0;\n      count = points.length;\n    }\n\n    // Update Line\n    line._chart = this.chart;\n    line._datasetIndex = this.index;\n    line._decimated = !!_dataset._decimated;\n    line.points = points;\n\n    const options = this.resolveDatasetElementOptions(mode);\n    if (!this.options.showLine) {\n      options.borderWidth = 0;\n    }\n    options.segment = this.options.segment;\n    this.updateElement(line, undefined, {\n      animated: !animationsDisabled,\n      options\n    }, mode);\n\n    // Update Points\n    this.updateElements(points, start, count, mode);\n  }\n\n  updateElements(points, start, count, mode) {\n    const reset = mode === 'reset';\n    const {iScale, vScale, _stacked, _dataset} = this._cachedMeta;\n    const {sharedOptions, includeOptions} = this._getSharedOptions(start, mode);\n    const iAxis = iScale.axis;\n    const vAxis = vScale.axis;\n    const {spanGaps, segment} = this.options;\n    const maxGapLength = isNumber(spanGaps) ? spanGaps : Number.POSITIVE_INFINITY;\n    const directUpdate = this.chart._animationsDisabled || reset || mode === 'none';\n    let prevParsed = start > 0 && this.getParsed(start - 1);\n\n    for (let i = start; i < start + count; ++i) {\n      const point = points[i];\n      const parsed = this.getParsed(i);\n      const properties = directUpdate ? point : {};\n      const nullData = isNullOrUndef(parsed[vAxis]);\n      const iPixel = properties[iAxis] = iScale.getPixelForValue(parsed[iAxis], i);\n      const vPixel = properties[vAxis] = reset || nullData ? vScale.getBasePixel() : vScale.getPixelForValue(_stacked ? this.applyStack(vScale, parsed, _stacked) : parsed[vAxis], i);\n\n      properties.skip = isNaN(iPixel) || isNaN(vPixel) || nullData;\n      properties.stop = i > 0 && (Math.abs(parsed[iAxis] - prevParsed[iAxis])) > maxGapLength;\n      if (segment) {\n        properties.parsed = parsed;\n        properties.raw = _dataset.data[i];\n      }\n\n      if (includeOptions) {\n        properties.options = sharedOptions || this.resolveDataElementOptions(i, point.active ? 'active' : mode);\n      }\n\n      if (!directUpdate) {\n        this.updateElement(point, i, properties, mode);\n      }\n\n      prevParsed = parsed;\n    }\n  }\n\n  /**\n\t * @protected\n\t */\n  getMaxOverflow() {\n    const meta = this._cachedMeta;\n    const dataset = meta.dataset;\n    const border = dataset.options && dataset.options.borderWidth || 0;\n    const data = meta.data || [];\n    if (!data.length) {\n      return border;\n    }\n    const firstPoint = data[0].size(this.resolveDataElementOptions(0));\n    const lastPoint = data[data.length - 1].size(this.resolveDataElementOptions(data.length - 1));\n    return Math.max(border, firstPoint, lastPoint) / 2;\n  }\n\n  draw() {\n    const meta = this._cachedMeta;\n    meta.dataset.updateControlPoints(this.chart.chartArea, meta.iScale.axis);\n    super.draw();\n  }\n}\n","import DatasetController from '../core/core.datasetController';\nimport {toRadians, PI, formatNumber, _parseObjectDataRadialScale} from '../helpers/index';\n\nexport default class PolarAreaController extends DatasetController {\n\n  static id = 'polarArea';\n\n  /**\n   * @type {any}\n   */\n  static defaults = {\n    dataElementType: 'arc',\n    animation: {\n      animateRotate: true,\n      animateScale: true\n    },\n    animations: {\n      numbers: {\n        type: 'number',\n        properties: ['x', 'y', 'startAngle', 'endAngle', 'innerRadius', 'outerRadius']\n      },\n    },\n    indexAxis: 'r',\n    startAngle: 0,\n  };\n\n  /**\n   * @type {any}\n   */\n  static overrides = {\n    aspectRatio: 1,\n\n    plugins: {\n      legend: {\n        labels: {\n          generateLabels(chart) {\n            const data = chart.data;\n            if (data.labels.length && data.datasets.length) {\n              const {labels: {pointStyle}} = chart.legend.options;\n\n              return data.labels.map((label, i) => {\n                const meta = chart.getDatasetMeta(0);\n                const style = meta.controller.getStyle(i);\n\n                return {\n                  text: label,\n                  fillStyle: style.backgroundColor,\n                  strokeStyle: style.borderColor,\n                  lineWidth: style.borderWidth,\n                  pointStyle: pointStyle,\n                  hidden: !chart.getDataVisibility(i),\n\n                  // Extra data used for toggling the correct item\n                  index: i\n                };\n              });\n            }\n            return [];\n          }\n        },\n\n        onClick(e, legendItem, legend) {\n          legend.chart.toggleDataVisibility(legendItem.index);\n          legend.chart.update();\n        }\n      },\n\n      // Need to override these to give a nice default\n      tooltip: {\n        callbacks: {\n          title() {\n            return '';\n          },\n          label(context) {\n            return context.chart.data.labels[context.dataIndex] + ': ' + context.formattedValue;\n          }\n        }\n      }\n    },\n\n    scales: {\n      r: {\n        type: 'radialLinear',\n        angleLines: {\n          display: false\n        },\n        beginAtZero: true,\n        grid: {\n          circular: true\n        },\n        pointLabels: {\n          display: false\n        },\n        startAngle: 0\n      }\n    }\n  };\n\n  constructor(chart, datasetIndex) {\n    super(chart, datasetIndex);\n\n    this.innerRadius = undefined;\n    this.outerRadius = undefined;\n  }\n\n  getLabelAndValue(index) {\n    const meta = this._cachedMeta;\n    const chart = this.chart;\n    const labels = chart.data.labels || [];\n    const value = formatNumber(meta._parsed[index].r, chart.options.locale);\n\n    return {\n      label: labels[index] || '',\n      value,\n    };\n  }\n\n  parseObjectData(meta, data, start, count) {\n    return _parseObjectDataRadialScale.bind(this)(meta, data, start, count);\n  }\n\n  update(mode) {\n    const arcs = this._cachedMeta.data;\n\n    this._updateRadius();\n    this.updateElements(arcs, 0, arcs.length, mode);\n  }\n\n  /**\n   * @protected\n   */\n  getMinMax() {\n    const meta = this._cachedMeta;\n    const range = {min: Number.POSITIVE_INFINITY, max: Number.NEGATIVE_INFINITY};\n\n    meta.data.forEach((element, index) => {\n      const parsed = this.getParsed(index).r;\n\n      if (!isNaN(parsed) && this.chart.getDataVisibility(index)) {\n        if (parsed < range.min) {\n          range.min = parsed;\n        }\n\n        if (parsed > range.max) {\n          range.max = parsed;\n        }\n      }\n    });\n\n    return range;\n  }\n\n  /**\n\t * @private\n\t */\n  _updateRadius() {\n    const chart = this.chart;\n    const chartArea = chart.chartArea;\n    const opts = chart.options;\n    const minSize = Math.min(chartArea.right - chartArea.left, chartArea.bottom - chartArea.top);\n\n    const outerRadius = Math.max(minSize / 2, 0);\n    const innerRadius = Math.max(opts.cutoutPercentage ? (outerRadius / 100) * (opts.cutoutPercentage) : 1, 0);\n    const radiusLength = (outerRadius - innerRadius) / chart.getVisibleDatasetCount();\n\n    this.outerRadius = outerRadius - (radiusLength * this.index);\n    this.innerRadius = this.outerRadius - radiusLength;\n  }\n\n  updateElements(arcs, start, count, mode) {\n    const reset = mode === 'reset';\n    const chart = this.chart;\n    const opts = chart.options;\n    const animationOpts = opts.animation;\n    const scale = this._cachedMeta.rScale;\n    const centerX = scale.xCenter;\n    const centerY = scale.yCenter;\n    const datasetStartAngle = scale.getIndexAngle(0) - 0.5 * PI;\n    let angle = datasetStartAngle;\n    let i;\n\n    const defaultAngle = 360 / this.countVisibleElements();\n\n    for (i = 0; i < start; ++i) {\n      angle += this._computeAngle(i, mode, defaultAngle);\n    }\n    for (i = start; i < start + count; i++) {\n      const arc = arcs[i];\n      let startAngle = angle;\n      let endAngle = angle + this._computeAngle(i, mode, defaultAngle);\n      let outerRadius = chart.getDataVisibility(i) ? scale.getDistanceFromCenterForValue(this.getParsed(i).r) : 0;\n      angle = endAngle;\n\n      if (reset) {\n        if (animationOpts.animateScale) {\n          outerRadius = 0;\n        }\n        if (animationOpts.animateRotate) {\n          startAngle = endAngle = datasetStartAngle;\n        }\n      }\n\n      const properties = {\n        x: centerX,\n        y: centerY,\n        innerRadius: 0,\n        outerRadius,\n        startAngle,\n        endAngle,\n        options: this.resolveDataElementOptions(i, arc.active ? 'active' : mode)\n      };\n\n      this.updateElement(arc, i, properties, mode);\n    }\n  }\n\n  countVisibleElements() {\n    const meta = this._cachedMeta;\n    let count = 0;\n\n    meta.data.forEach((element, index) => {\n      if (!isNaN(this.getParsed(index).r) && this.chart.getDataVisibility(index)) {\n        count++;\n      }\n    });\n\n    return count;\n  }\n\n  /**\n\t * @private\n\t */\n  _computeAngle(index, mode, defaultAngle) {\n    return this.chart.getDataVisibility(index)\n      ? toRadians(this.resolveDataElementOptions(index, mode).angle || defaultAngle)\n      : 0;\n  }\n}\n","import DoughnutController from './controller.doughnut';\n\n// Pie charts are Doughnut chart with different defaults\nexport default class PieController extends DoughnutController {\n\n  static id = 'pie';\n\n  /**\n   * @type {any}\n   */\n  static defaults = {\n    // The percentage of the chart that we cut out of the middle.\n    cutout: 0,\n\n    // The rotation of the chart, where the first data arc begins.\n    rotation: 0,\n\n    // The total circumference of the chart.\n    circumference: 360,\n\n    // The outr radius of the chart\n    radius: '100%'\n  };\n}\n","import DatasetController from '../core/core.datasetController';\nimport {_parseObjectDataRadialScale} from '../helpers/index';\n\nexport default class RadarController extends DatasetController {\n\n  static id = 'radar';\n\n  /**\n   * @type {any}\n   */\n  static defaults = {\n    datasetElementType: 'line',\n    dataElementType: 'point',\n    indexAxis: 'r',\n    showLine: true,\n    elements: {\n      line: {\n        fill: 'start'\n      }\n    },\n  };\n\n  /**\n   * @type {any}\n   */\n  static overrides = {\n    aspectRatio: 1,\n\n    scales: {\n      r: {\n        type: 'radialLinear',\n      }\n    }\n  };\n\n  /**\n\t * @protected\n\t */\n  getLabelAndValue(index) {\n    const vScale = this._cachedMeta.vScale;\n    const parsed = this.getParsed(index);\n\n    return {\n      label: vScale.getLabels()[index],\n      value: '' + vScale.getLabelForValue(parsed[vScale.axis])\n    };\n  }\n\n  parseObjectData(meta, data, start, count) {\n    return _parseObjectDataRadialScale.bind(this)(meta, data, start, count);\n  }\n\n  update(mode) {\n    const meta = this._cachedMeta;\n    const line = meta.dataset;\n    const points = meta.data || [];\n    const labels = meta.iScale.getLabels();\n\n    // Update Line\n    line.points = points;\n    // In resize mode only point locations change, so no need to set the points or options.\n    if (mode !== 'resize') {\n      const options = this.resolveDatasetElementOptions(mode);\n      if (!this.options.showLine) {\n        options.borderWidth = 0;\n      }\n\n      const properties = {\n        _loop: true,\n        _fullLoop: labels.length === points.length,\n        options\n      };\n\n      this.updateElement(line, undefined, properties, mode);\n    }\n\n    // Update Points\n    this.updateElements(points, 0, points.length, mode);\n  }\n\n  updateElements(points, start, count, mode) {\n    const scale = this._cachedMeta.rScale;\n    const reset = mode === 'reset';\n\n    for (let i = start; i < start + count; i++) {\n      const point = points[i];\n      const options = this.resolveDataElementOptions(i, point.active ? 'active' : mode);\n      const pointPosition = scale.getPointPositionForValue(i, this.getParsed(i).r);\n\n      const x = reset ? scale.xCenter : pointPosition.x;\n      const y = reset ? scale.yCenter : pointPosition.y;\n\n      const properties = {\n        x,\n        y,\n        angle: pointPosition.angle,\n        skip: isNaN(x) || isNaN(y),\n        options\n      };\n\n      this.updateElement(point, i, properties, mode);\n    }\n  }\n}\n","import DatasetController from '../core/core.datasetController';\nimport {isNullOrUndef} from '../helpers';\nimport {isNumber} from '../helpers/helpers.math';\nimport {_getStartAndCountOfVisiblePoints, _scaleRangesChanged} from '../helpers/helpers.extras';\n\nexport default class ScatterController extends DatasetController {\n\n  static id = 'scatter';\n\n  /**\n   * @type {any}\n   */\n  static defaults = {\n    datasetElementType: false,\n    dataElementType: 'point',\n    showLine: false,\n    fill: false\n  };\n\n  /**\n   * @type {any}\n   */\n  static overrides = {\n\n    interaction: {\n      mode: 'point'\n    },\n\n    plugins: {\n      tooltip: {\n        callbacks: {\n          title() {\n            return '';     // doesn't make sense for scatter since data are formatted as a point\n          },\n          label(item) {\n            return '(' + item.label + ', ' + item.formattedValue + ')';\n          }\n        }\n      }\n    },\n\n    scales: {\n      x: {\n        type: 'linear'\n      },\n      y: {\n        type: 'linear'\n      }\n    }\n  };\n\n  update(mode) {\n    const meta = this._cachedMeta;\n    const {data: points = []} = meta;\n    // @ts-ignore\n    const animationsDisabled = this.chart._animationsDisabled;\n    let {start, count} = _getStartAndCountOfVisiblePoints(meta, points, animationsDisabled);\n\n    this._drawStart = start;\n    this._drawCount = count;\n\n    if (_scaleRangesChanged(meta)) {\n      start = 0;\n      count = points.length;\n    }\n\n    if (this.options.showLine) {\n\n      const {dataset: line, _dataset} = meta;\n\n      // Update Line\n      line._chart = this.chart;\n      line._datasetIndex = this.index;\n      line._decimated = !!_dataset._decimated;\n      line.points = points;\n\n      const options = this.resolveDatasetElementOptions(mode);\n      options.segment = this.options.segment;\n      this.updateElement(line, undefined, {\n        animated: !animationsDisabled,\n        options\n      }, mode);\n    }\n\n    // Update Points\n    this.updateElements(points, start, count, mode);\n  }\n\n  addElements() {\n    const {showLine} = this.options;\n\n    if (!this.datasetElementType && showLine) {\n      this.datasetElementType = this.chart.registry.getElement('line');\n    }\n\n    super.addElements();\n  }\n\n  updateElements(points, start, count, mode) {\n    const reset = mode === 'reset';\n    const {iScale, vScale, _stacked, _dataset} = this._cachedMeta;\n    const firstOpts = this.resolveDataElementOptions(start, mode);\n    const sharedOptions = this.getSharedOptions(firstOpts);\n    const includeOptions = this.includeOptions(mode, sharedOptions);\n    const iAxis = iScale.axis;\n    const vAxis = vScale.axis;\n    const {spanGaps, segment} = this.options;\n    const maxGapLength = isNumber(spanGaps) ? spanGaps : Number.POSITIVE_INFINITY;\n    const directUpdate = this.chart._animationsDisabled || reset || mode === 'none';\n    let prevParsed = start > 0 && this.getParsed(start - 1);\n\n    for (let i = start; i < start + count; ++i) {\n      const point = points[i];\n      const parsed = this.getParsed(i);\n      const properties = directUpdate ? point : {};\n      const nullData = isNullOrUndef(parsed[vAxis]);\n      const iPixel = properties[iAxis] = iScale.getPixelForValue(parsed[iAxis], i);\n      const vPixel = properties[vAxis] = reset || nullData ? vScale.getBasePixel() : vScale.getPixelForValue(_stacked ? this.applyStack(vScale, parsed, _stacked) : parsed[vAxis], i);\n\n      properties.skip = isNaN(iPixel) || isNaN(vPixel) || nullData;\n      properties.stop = i > 0 && (Math.abs(parsed[iAxis] - prevParsed[iAxis])) > maxGapLength;\n      if (segment) {\n        properties.parsed = parsed;\n        properties.raw = _dataset.data[i];\n      }\n\n      if (includeOptions) {\n        properties.options = sharedOptions || this.resolveDataElementOptions(i, point.active ? 'active' : mode);\n      }\n\n      if (!directUpdate) {\n        this.updateElement(point, i, properties, mode);\n      }\n\n      prevParsed = parsed;\n    }\n\n    this.updateSharedOptions(sharedOptions, mode, firstOpts);\n  }\n\n  /**\n\t * @protected\n\t */\n  getMaxOverflow() {\n    const meta = this._cachedMeta;\n    const data = meta.data || [];\n\n    if (!this.options.showLine) {\n      let max = 0;\n      for (let i = data.length - 1; i >= 0; --i) {\n        max = Math.max(max, data[i].size(this.resolveDataElementOptions(i)) / 2);\n      }\n      return max > 0 && max;\n    }\n\n    const dataset = meta.dataset;\n    const border = dataset.options && dataset.options.borderWidth || 0;\n\n    if (!data.length) {\n      return border;\n    }\n\n    const firstPoint = data[0].size(this.resolveDataElementOptions(0));\n    const lastPoint = data[data.length - 1].size(this.resolveDataElementOptions(data.length - 1));\n    return Math.max(border, firstPoint, lastPoint) / 2;\n  }\n}\n","import Element from '../core/core.element';\nimport {_angleBetween, getAngleFromPoint, TAU, HALF_PI, valueOrDefault} from '../helpers/index';\nimport {PI, _isBetween, _limitValue} from '../helpers/helpers.math';\nimport {_readValueToProps} from '../helpers/helpers.options';\n\nfunction clipArc(ctx, element, endAngle) {\n  const {startAngle, pixelMargin, x, y, outerRadius, innerRadius} = element;\n  let angleMargin = pixelMargin / outerRadius;\n\n  // Draw an inner border by clipping the arc and drawing a double-width border\n  // Enlarge the clipping arc by 0.33 pixels to eliminate glitches between borders\n  ctx.beginPath();\n  ctx.arc(x, y, outerRadius, startAngle - angleMargin, endAngle + angleMargin);\n  if (innerRadius > pixelMargin) {\n    angleMargin = pixelMargin / innerRadius;\n    ctx.arc(x, y, innerRadius, endAngle + angleMargin, startAngle - angleMargin, true);\n  } else {\n    ctx.arc(x, y, pixelMargin, endAngle + HALF_PI, startAngle - HALF_PI);\n  }\n  ctx.closePath();\n  ctx.clip();\n}\n\nfunction toRadiusCorners(value) {\n  return _readValueToProps(value, ['outerStart', 'outerEnd', 'innerStart', 'innerEnd']);\n}\n\n/**\n * Parse border radius from the provided options\n * @param {ArcElement} arc\n * @param {number} innerRadius\n * @param {number} outerRadius\n * @param {number} angleDelta Arc circumference in radians\n * @returns\n */\nfunction parseBorderRadius(arc, innerRadius, outerRadius, angleDelta) {\n  const o = toRadiusCorners(arc.options.borderRadius);\n  const halfThickness = (outerRadius - innerRadius) / 2;\n  const innerLimit = Math.min(halfThickness, angleDelta * innerRadius / 2);\n\n  // Outer limits are complicated. We want to compute the available angular distance at\n  // a radius of outerRadius - borderRadius because for small angular distances, this term limits.\n  // We compute at r = outerRadius - borderRadius because this circle defines the center of the border corners.\n  //\n  // If the borderRadius is large, that value can become negative.\n  // This causes the outer borders to lose their radius entirely, which is rather unexpected. To solve that, if borderRadius > outerRadius\n  // we know that the thickness term will dominate and compute the limits at that point\n  const computeOuterLimit = (val) => {\n    const outerArcLimit = (outerRadius - Math.min(halfThickness, val)) * angleDelta / 2;\n    return _limitValue(val, 0, Math.min(halfThickness, outerArcLimit));\n  };\n\n  return {\n    outerStart: computeOuterLimit(o.outerStart),\n    outerEnd: computeOuterLimit(o.outerEnd),\n    innerStart: _limitValue(o.innerStart, 0, innerLimit),\n    innerEnd: _limitValue(o.innerEnd, 0, innerLimit),\n  };\n}\n\n/**\n * Convert (r, 𝜃) to (x, y)\n * @param {number} r Radius from center point\n * @param {number} theta Angle in radians\n * @param {number} x Center X coordinate\n * @param {number} y Center Y coordinate\n * @returns {{ x: number; y: number }} Rectangular coordinate point\n */\nfunction rThetaToXY(r, theta, x, y) {\n  return {\n    x: x + r * Math.cos(theta),\n    y: y + r * Math.sin(theta),\n  };\n}\n\n\n/**\n * Path the arc, respecting the border radius\n *\n * 8 points of interest exist around the arc segment.\n * These points define the intersection of the arc edges and the corners.\n *\n *   Start      End\n *\n *    1---------2    Outer\n *   /           \\\n *   8           3\n *   |           |\n *   |           |\n *   7           4\n *   \\           /\n *    6---------5    Inner\n * @param {CanvasRenderingContext2D} ctx\n * @param {ArcElement} element\n */\nfunction pathArc(ctx, element, offset, spacing, end, circular) {\n  const {x, y, startAngle: start, pixelMargin, innerRadius: innerR} = element;\n\n  const outerRadius = Math.max(element.outerRadius + spacing + offset - pixelMargin, 0);\n  const innerRadius = innerR > 0 ? innerR + spacing + offset + pixelMargin : 0;\n\n  let spacingOffset = 0;\n  const alpha = end - start;\n\n  if (spacing) {\n    // When spacing is present, it is the same for all items\n    // So we adjust the start and end angle of the arc such that\n    // the distance is the same as it would be without the spacing\n    const noSpacingInnerRadius = innerR > 0 ? innerR - spacing : 0;\n    const noSpacingOuterRadius = outerRadius > 0 ? outerRadius - spacing : 0;\n    const avNogSpacingRadius = (noSpacingInnerRadius + noSpacingOuterRadius) / 2;\n    const adjustedAngle = avNogSpacingRadius !== 0 ? (alpha * avNogSpacingRadius) / (avNogSpacingRadius + spacing) : alpha;\n    spacingOffset = (alpha - adjustedAngle) / 2;\n  }\n\n  const beta = Math.max(0.001, alpha * outerRadius - offset / PI) / outerRadius;\n  const angleOffset = (alpha - beta) / 2;\n  const startAngle = start + angleOffset + spacingOffset;\n  const endAngle = end - angleOffset - spacingOffset;\n  const {outerStart, outerEnd, innerStart, innerEnd} = parseBorderRadius(element, innerRadius, outerRadius, endAngle - startAngle);\n\n  const outerStartAdjustedRadius = outerRadius - outerStart;\n  const outerEndAdjustedRadius = outerRadius - outerEnd;\n  const outerStartAdjustedAngle = startAngle + outerStart / outerStartAdjustedRadius;\n  const outerEndAdjustedAngle = endAngle - outerEnd / outerEndAdjustedRadius;\n\n  const innerStartAdjustedRadius = innerRadius + innerStart;\n  const innerEndAdjustedRadius = innerRadius + innerEnd;\n  const innerStartAdjustedAngle = startAngle + innerStart / innerStartAdjustedRadius;\n  const innerEndAdjustedAngle = endAngle - innerEnd / innerEndAdjustedRadius;\n\n  ctx.beginPath();\n\n  if (circular) {\n    // The first arc segment from point 1 to point 2\n    ctx.arc(x, y, outerRadius, outerStartAdjustedAngle, outerEndAdjustedAngle);\n\n    // The corner segment from point 2 to point 3\n    if (outerEnd > 0) {\n      const pCenter = rThetaToXY(outerEndAdjustedRadius, outerEndAdjustedAngle, x, y);\n      ctx.arc(pCenter.x, pCenter.y, outerEnd, outerEndAdjustedAngle, endAngle + HALF_PI);\n    }\n\n    // The line from point 3 to point 4\n    const p4 = rThetaToXY(innerEndAdjustedRadius, endAngle, x, y);\n    ctx.lineTo(p4.x, p4.y);\n\n    // The corner segment from point 4 to point 5\n    if (innerEnd > 0) {\n      const pCenter = rThetaToXY(innerEndAdjustedRadius, innerEndAdjustedAngle, x, y);\n      ctx.arc(pCenter.x, pCenter.y, innerEnd, endAngle + HALF_PI, innerEndAdjustedAngle + Math.PI);\n    }\n\n    // The inner arc from point 5 to point 6\n    ctx.arc(x, y, innerRadius, endAngle - (innerEnd / innerRadius), startAngle + (innerStart / innerRadius), true);\n\n    // The corner segment from point 6 to point 7\n    if (innerStart > 0) {\n      const pCenter = rThetaToXY(innerStartAdjustedRadius, innerStartAdjustedAngle, x, y);\n      ctx.arc(pCenter.x, pCenter.y, innerStart, innerStartAdjustedAngle + Math.PI, startAngle - HALF_PI);\n    }\n\n    // The line from point 7 to point 8\n    const p8 = rThetaToXY(outerStartAdjustedRadius, startAngle, x, y);\n    ctx.lineTo(p8.x, p8.y);\n\n    // The corner segment from point 8 to point 1\n    if (outerStart > 0) {\n      const pCenter = rThetaToXY(outerStartAdjustedRadius, outerStartAdjustedAngle, x, y);\n      ctx.arc(pCenter.x, pCenter.y, outerStart, startAngle - HALF_PI, outerStartAdjustedAngle);\n    }\n  } else {\n    ctx.moveTo(x, y);\n\n    const outerStartX = Math.cos(outerStartAdjustedAngle) * outerRadius + x;\n    const outerStartY = Math.sin(outerStartAdjustedAngle) * outerRadius + y;\n    ctx.lineTo(outerStartX, outerStartY);\n\n    const outerEndX = Math.cos(outerEndAdjustedAngle) * outerRadius + x;\n    const outerEndY = Math.sin(outerEndAdjustedAngle) * outerRadius + y;\n    ctx.lineTo(outerEndX, outerEndY);\n  }\n\n  ctx.closePath();\n}\n\nfunction drawArc(ctx, element, offset, spacing, circular) {\n  const {fullCircles, startAngle, circumference} = element;\n  let endAngle = element.endAngle;\n  if (fullCircles) {\n    pathArc(ctx, element, offset, spacing, startAngle + TAU, circular);\n\n    for (let i = 0; i < fullCircles; ++i) {\n      ctx.fill();\n    }\n\n    if (!isNaN(circumference)) {\n      endAngle = startAngle + circumference % TAU;\n      if (circumference % TAU === 0) {\n        endAngle += TAU;\n      }\n    }\n  }\n  pathArc(ctx, element, offset, spacing, endAngle, circular);\n  ctx.fill();\n  return endAngle;\n}\n\nfunction drawFullCircleBorders(ctx, element, inner) {\n  const {x, y, startAngle, pixelMargin, fullCircles} = element;\n  const outerRadius = Math.max(element.outerRadius - pixelMargin, 0);\n  const innerRadius = element.innerRadius + pixelMargin;\n\n  let i;\n\n  if (inner) {\n    clipArc(ctx, element, startAngle + TAU);\n  }\n\n  ctx.beginPath();\n  ctx.arc(x, y, innerRadius, startAngle + TAU, startAngle, true);\n  for (i = 0; i < fullCircles; ++i) {\n    ctx.stroke();\n  }\n\n  ctx.beginPath();\n  ctx.arc(x, y, outerRadius, startAngle, startAngle + TAU);\n  for (i = 0; i < fullCircles; ++i) {\n    ctx.stroke();\n  }\n}\n\nfunction drawBorder(ctx, element, offset, spacing, endAngle, circular) {\n  const {options} = element;\n  const {borderWidth, borderJoinStyle} = options;\n  const inner = options.borderAlign === 'inner';\n\n  if (!borderWidth) {\n    return;\n  }\n\n  if (inner) {\n    ctx.lineWidth = borderWidth * 2;\n    ctx.lineJoin = borderJoinStyle || 'round';\n  } else {\n    ctx.lineWidth = borderWidth;\n    ctx.lineJoin = borderJoinStyle || 'bevel';\n  }\n\n  if (element.fullCircles) {\n    drawFullCircleBorders(ctx, element, inner);\n  }\n\n  if (inner) {\n    clipArc(ctx, element, endAngle);\n  }\n\n  pathArc(ctx, element, offset, spacing, endAngle, circular);\n  ctx.stroke();\n}\n\nexport default class ArcElement extends Element {\n\n  static id = 'arc';\n\n  /**\n   * @type {any}\n   */\n  static defaults = {\n    borderAlign: 'center',\n    borderColor: '#fff',\n    borderJoinStyle: undefined,\n    borderRadius: 0,\n    borderWidth: 2,\n    offset: 0,\n    spacing: 0,\n    angle: undefined,\n    circular: true,\n  };\n\n  /**\n   * @type {any}\n   */\n  static defaultRoutes = {\n    backgroundColor: 'backgroundColor'\n  };\n\n  constructor(cfg) {\n    super();\n\n    this.options = undefined;\n    this.circumference = undefined;\n    this.startAngle = undefined;\n    this.endAngle = undefined;\n    this.innerRadius = undefined;\n    this.outerRadius = undefined;\n    this.pixelMargin = 0;\n    this.fullCircles = 0;\n\n    if (cfg) {\n      Object.assign(this, cfg);\n    }\n  }\n\n  /**\n\t * @param {number} chartX\n\t * @param {number} chartY\n\t * @param {boolean} [useFinalPosition]\n\t */\n  inRange(chartX, chartY, useFinalPosition) {\n    const point = this.getProps(['x', 'y'], useFinalPosition);\n    const {angle, distance} = getAngleFromPoint(point, {x: chartX, y: chartY});\n    const {startAngle, endAngle, innerRadius, outerRadius, circumference} = this.getProps([\n      'startAngle',\n      'endAngle',\n      'innerRadius',\n      'outerRadius',\n      'circumference'\n    ], useFinalPosition);\n    const rAdjust = this.options.spacing / 2;\n    const _circumference = valueOrDefault(circumference, endAngle - startAngle);\n    const betweenAngles = _circumference >= TAU || _angleBetween(angle, startAngle, endAngle);\n    const withinRadius = _isBetween(distance, innerRadius + rAdjust, outerRadius + rAdjust);\n\n    return (betweenAngles && withinRadius);\n  }\n\n  /**\n\t * @param {boolean} [useFinalPosition]\n\t */\n  getCenterPoint(useFinalPosition) {\n    const {x, y, startAngle, endAngle, innerRadius, outerRadius} = this.getProps([\n      'x',\n      'y',\n      'startAngle',\n      'endAngle',\n      'innerRadius',\n      'outerRadius',\n      'circumference',\n    ], useFinalPosition);\n    const {offset, spacing} = this.options;\n    const halfAngle = (startAngle + endAngle) / 2;\n    const halfRadius = (innerRadius + outerRadius + spacing + offset) / 2;\n    return {\n      x: x + Math.cos(halfAngle) * halfRadius,\n      y: y + Math.sin(halfAngle) * halfRadius\n    };\n  }\n\n  /**\n\t * @param {boolean} [useFinalPosition]\n\t */\n  tooltipPosition(useFinalPosition) {\n    return this.getCenterPoint(useFinalPosition);\n  }\n\n  draw(ctx) {\n    const {options, circumference} = this;\n    const offset = (options.offset || 0) / 4;\n    const spacing = (options.spacing || 0) / 2;\n    const circular = options.circular;\n    this.pixelMargin = (options.borderAlign === 'inner') ? 0.33 : 0;\n    this.fullCircles = circumference > TAU ? Math.floor(circumference / TAU) : 0;\n\n    if (circumference === 0 || this.innerRadius < 0 || this.outerRadius < 0) {\n      return;\n    }\n\n    ctx.save();\n\n    const halfAngle = (this.startAngle + this.endAngle) / 2;\n    ctx.translate(Math.cos(halfAngle) * offset, Math.sin(halfAngle) * offset);\n    const fix = 1 - Math.sin(Math.min(PI, circumference || 0));\n    const radiusOffset = offset * fix;\n\n    ctx.fillStyle = options.backgroundColor;\n    ctx.strokeStyle = options.borderColor;\n\n    const endAngle = drawArc(ctx, this, radiusOffset, spacing, circular);\n    drawBorder(ctx, this, radiusOffset, spacing, endAngle, circular);\n\n    ctx.restore();\n  }\n}\n","import Element from '../core/core.element';\nimport {_bezierInterpolation, _pointInLine, _steppedInterpolation} from '../helpers/helpers.interpolation';\nimport {_computeSegments, _boundSegments} from '../helpers/helpers.segment';\nimport {_steppedLineTo, _bezierCurveTo} from '../helpers/helpers.canvas';\nimport {_updateBezierControlPoints} from '../helpers/helpers.curve';\nimport {valueOrDefault} from '../helpers';\n\n/**\n * @typedef { import(\"./element.point\").default } PointElement\n */\n\nfunction setStyle(ctx, options, style = options) {\n  ctx.lineCap = valueOrDefault(style.borderCapStyle, options.borderCapStyle);\n  ctx.setLineDash(valueOrDefault(style.borderDash, options.borderDash));\n  ctx.lineDashOffset = valueOrDefault(style.borderDashOffset, options.borderDashOffset);\n  ctx.lineJoin = valueOrDefault(style.borderJoinStyle, options.borderJoinStyle);\n  ctx.lineWidth = valueOrDefault(style.borderWidth, options.borderWidth);\n  ctx.strokeStyle = valueOrDefault(style.borderColor, options.borderColor);\n}\n\nfunction lineTo(ctx, previous, target) {\n  ctx.lineTo(target.x, target.y);\n}\n\nfunction getLineMethod(options) {\n  if (options.stepped) {\n    return _steppedLineTo;\n  }\n\n  if (options.tension || options.cubicInterpolationMode === 'monotone') {\n    return _bezierCurveTo;\n  }\n\n  return lineTo;\n}\n\nfunction pathVars(points, segment, params = {}) {\n  const count = points.length;\n  const {start: paramsStart = 0, end: paramsEnd = count - 1} = params;\n  const {start: segmentStart, end: segmentEnd} = segment;\n  const start = Math.max(paramsStart, segmentStart);\n  const end = Math.min(paramsEnd, segmentEnd);\n  const outside = paramsStart < segmentStart && paramsEnd < segmentStart || paramsStart > segmentEnd && paramsEnd > segmentEnd;\n\n  return {\n    count,\n    start,\n    loop: segment.loop,\n    ilen: end < start && !outside ? count + end - start : end - start\n  };\n}\n\n/**\n * Create path from points, grouping by truncated x-coordinate\n * Points need to be in order by x-coordinate for this to work efficiently\n * @param {CanvasRenderingContext2D|Path2D} ctx - Context\n * @param {LineElement} line\n * @param {object} segment\n * @param {number} segment.start - start index of the segment, referring the points array\n * @param {number} segment.end - end index of the segment, referring the points array\n * @param {boolean} segment.loop - indicates that the segment is a loop\n * @param {object} params\n * @param {boolean} params.move - move to starting point (vs line to it)\n * @param {boolean} params.reverse - path the segment from end to start\n * @param {number} params.start - limit segment to points starting from `start` index\n * @param {number} params.end - limit segment to points ending at `start` + `count` index\n */\nfunction pathSegment(ctx, line, segment, params) {\n  const {points, options} = line;\n  const {count, start, loop, ilen} = pathVars(points, segment, params);\n  const lineMethod = getLineMethod(options);\n  // eslint-disable-next-line prefer-const\n  let {move = true, reverse} = params || {};\n  let i, point, prev;\n\n  for (i = 0; i <= ilen; ++i) {\n    point = points[(start + (reverse ? ilen - i : i)) % count];\n\n    if (point.skip) {\n      // If there is a skipped point inside a segment, spanGaps must be true\n      continue;\n    } else if (move) {\n      ctx.moveTo(point.x, point.y);\n      move = false;\n    } else {\n      lineMethod(ctx, prev, point, reverse, options.stepped);\n    }\n\n    prev = point;\n  }\n\n  if (loop) {\n    point = points[(start + (reverse ? ilen : 0)) % count];\n    lineMethod(ctx, prev, point, reverse, options.stepped);\n  }\n\n  return !!loop;\n}\n\n/**\n * Create path from points, grouping by truncated x-coordinate\n * Points need to be in order by x-coordinate for this to work efficiently\n * @param {CanvasRenderingContext2D|Path2D} ctx - Context\n * @param {LineElement} line\n * @param {object} segment\n * @param {number} segment.start - start index of the segment, referring the points array\n * @param {number} segment.end - end index of the segment, referring the points array\n * @param {boolean} segment.loop - indicates that the segment is a loop\n * @param {object} params\n * @param {boolean} params.move - move to starting point (vs line to it)\n * @param {boolean} params.reverse - path the segment from end to start\n * @param {number} params.start - limit segment to points starting from `start` index\n * @param {number} params.end - limit segment to points ending at `start` + `count` index\n */\nfunction fastPathSegment(ctx, line, segment, params) {\n  const points = line.points;\n  const {count, start, ilen} = pathVars(points, segment, params);\n  const {move = true, reverse} = params || {};\n  let avgX = 0;\n  let countX = 0;\n  let i, point, prevX, minY, maxY, lastY;\n\n  const pointIndex = (index) => (start + (reverse ? ilen - index : index)) % count;\n  const drawX = () => {\n    if (minY !== maxY) {\n      // Draw line to maxY and minY, using the average x-coordinate\n      ctx.lineTo(avgX, maxY);\n      ctx.lineTo(avgX, minY);\n      // Line to y-value of last point in group. So the line continues\n      // from correct position. Not using move, to have solid path.\n      ctx.lineTo(avgX, lastY);\n    }\n  };\n\n  if (move) {\n    point = points[pointIndex(0)];\n    ctx.moveTo(point.x, point.y);\n  }\n\n  for (i = 0; i <= ilen; ++i) {\n    point = points[pointIndex(i)];\n\n    if (point.skip) {\n      // If there is a skipped point inside a segment, spanGaps must be true\n      continue;\n    }\n\n    const x = point.x;\n    const y = point.y;\n    const truncX = x | 0; // truncated x-coordinate\n\n    if (truncX === prevX) {\n      // Determine `minY` / `maxY` and `avgX` while we stay within same x-position\n      if (y < minY) {\n        minY = y;\n      } else if (y > maxY) {\n        maxY = y;\n      }\n      // For first point in group, countX is `0`, so average will be `x` / 1.\n      avgX = (countX * avgX + x) / ++countX;\n    } else {\n      drawX();\n      // Draw line to next x-position, using the first (or only)\n      // y-value in that group\n      ctx.lineTo(x, y);\n\n      prevX = truncX;\n      countX = 0;\n      minY = maxY = y;\n    }\n    // Keep track of the last y-value in group\n    lastY = y;\n  }\n  drawX();\n}\n\n/**\n * @param {LineElement} line - the line\n * @returns {function}\n * @private\n */\nfunction _getSegmentMethod(line) {\n  const opts = line.options;\n  const borderDash = opts.borderDash && opts.borderDash.length;\n  const useFastPath = !line._decimated && !line._loop && !opts.tension && opts.cubicInterpolationMode !== 'monotone' && !opts.stepped && !borderDash;\n  return useFastPath ? fastPathSegment : pathSegment;\n}\n\n/**\n * @private\n */\nfunction _getInterpolationMethod(options) {\n  if (options.stepped) {\n    return _steppedInterpolation;\n  }\n\n  if (options.tension || options.cubicInterpolationMode === 'monotone') {\n    return _bezierInterpolation;\n  }\n\n  return _pointInLine;\n}\n\nfunction strokePathWithCache(ctx, line, start, count) {\n  let path = line._path;\n  if (!path) {\n    path = line._path = new Path2D();\n    if (line.path(path, start, count)) {\n      path.closePath();\n    }\n  }\n  setStyle(ctx, line.options);\n  ctx.stroke(path);\n}\n\nfunction strokePathDirect(ctx, line, start, count) {\n  const {segments, options} = line;\n  const segmentMethod = _getSegmentMethod(line);\n\n  for (const segment of segments) {\n    setStyle(ctx, options, segment.style);\n    ctx.beginPath();\n    if (segmentMethod(ctx, line, segment, {start, end: start + count - 1})) {\n      ctx.closePath();\n    }\n    ctx.stroke();\n  }\n}\n\nconst usePath2D = typeof Path2D === 'function';\n\nfunction draw(ctx, line, start, count) {\n  if (usePath2D && !line.options.segment) {\n    strokePathWithCache(ctx, line, start, count);\n  } else {\n    strokePathDirect(ctx, line, start, count);\n  }\n}\n\nexport default class LineElement extends Element {\n\n  static id = 'line';\n\n  /**\n   * @type {any}\n   */\n  static defaults = {\n    borderCapStyle: 'butt',\n    borderDash: [],\n    borderDashOffset: 0,\n    borderJoinStyle: 'miter',\n    borderWidth: 3,\n    capBezierPoints: true,\n    cubicInterpolationMode: 'default',\n    fill: false,\n    spanGaps: false,\n    stepped: false,\n    tension: 0,\n  };\n\n  /**\n   * @type {any}\n   */\n  static defaultRoutes = {\n    backgroundColor: 'backgroundColor',\n    borderColor: 'borderColor'\n  };\n\n\n  static descriptors = {\n    _scriptable: true,\n    _indexable: (name) => name !== 'borderDash' && name !== 'fill',\n  };\n\n\n  constructor(cfg) {\n    super();\n\n    this.animated = true;\n    this.options = undefined;\n    this._chart = undefined;\n    this._loop = undefined;\n    this._fullLoop = undefined;\n    this._path = undefined;\n    this._points = undefined;\n    this._segments = undefined;\n    this._decimated = false;\n    this._pointsUpdated = false;\n    this._datasetIndex = undefined;\n\n    if (cfg) {\n      Object.assign(this, cfg);\n    }\n  }\n\n  updateControlPoints(chartArea, indexAxis) {\n    const options = this.options;\n    if ((options.tension || options.cubicInterpolationMode === 'monotone') && !options.stepped && !this._pointsUpdated) {\n      const loop = options.spanGaps ? this._loop : this._fullLoop;\n      _updateBezierControlPoints(this._points, options, chartArea, loop, indexAxis);\n      this._pointsUpdated = true;\n    }\n  }\n\n  set points(points) {\n    this._points = points;\n    delete this._segments;\n    delete this._path;\n    this._pointsUpdated = false;\n  }\n\n  get points() {\n    return this._points;\n  }\n\n  get segments() {\n    return this._segments || (this._segments = _computeSegments(this, this.options.segment));\n  }\n\n  /**\n\t * First non-skipped point on this line\n\t * @returns {PointElement|undefined}\n\t */\n  first() {\n    const segments = this.segments;\n    const points = this.points;\n    return segments.length && points[segments[0].start];\n  }\n\n  /**\n\t * Last non-skipped point on this line\n\t * @returns {PointElement|undefined}\n\t */\n  last() {\n    const segments = this.segments;\n    const points = this.points;\n    const count = segments.length;\n    return count && points[segments[count - 1].end];\n  }\n\n  /**\n\t * Interpolate a point in this line at the same value on `property` as\n\t * the reference `point` provided\n\t * @param {PointElement} point - the reference point\n\t * @param {string} property - the property to match on\n\t * @returns {PointElement|undefined}\n\t */\n  interpolate(point, property) {\n    const options = this.options;\n    const value = point[property];\n    const points = this.points;\n    const segments = _boundSegments(this, {property, start: value, end: value});\n\n    if (!segments.length) {\n      return;\n    }\n\n    const result = [];\n    const _interpolate = _getInterpolationMethod(options);\n    let i, ilen;\n    for (i = 0, ilen = segments.length; i < ilen; ++i) {\n      const {start, end} = segments[i];\n      const p1 = points[start];\n      const p2 = points[end];\n      if (p1 === p2) {\n        result.push(p1);\n        continue;\n      }\n      const t = Math.abs((value - p1[property]) / (p2[property] - p1[property]));\n      const interpolated = _interpolate(p1, p2, t, options.stepped);\n      interpolated[property] = point[property];\n      result.push(interpolated);\n    }\n    return result.length === 1 ? result[0] : result;\n  }\n\n  /**\n\t * Append a segment of this line to current path.\n\t * @param {CanvasRenderingContext2D} ctx\n\t * @param {object} segment\n\t * @param {number} segment.start - start index of the segment, referring the points array\n \t * @param {number} segment.end - end index of the segment, referring the points array\n \t * @param {boolean} segment.loop - indicates that the segment is a loop\n\t * @param {object} params\n\t * @param {boolean} params.move - move to starting point (vs line to it)\n\t * @param {boolean} params.reverse - path the segment from end to start\n\t * @param {number} params.start - limit segment to points starting from `start` index\n\t * @param {number} params.end - limit segment to points ending at `start` + `count` index\n\t * @returns {undefined|boolean} - true if the segment is a full loop (path should be closed)\n\t */\n  pathSegment(ctx, segment, params) {\n    const segmentMethod = _getSegmentMethod(this);\n    return segmentMethod(ctx, this, segment, params);\n  }\n\n  /**\n\t * Append all segments of this line to current path.\n\t * @param {CanvasRenderingContext2D|Path2D} ctx\n\t * @param {number} [start]\n\t * @param {number} [count]\n\t * @returns {undefined|boolean} - true if line is a full loop (path should be closed)\n\t */\n  path(ctx, start, count) {\n    const segments = this.segments;\n    const segmentMethod = _getSegmentMethod(this);\n    let loop = this._loop;\n\n    start = start || 0;\n    count = count || (this.points.length - start);\n\n    for (const segment of segments) {\n      loop &= segmentMethod(ctx, this, segment, {start, end: start + count - 1});\n    }\n    return !!loop;\n  }\n\n  /**\n\t * Draw\n\t * @param {CanvasRenderingContext2D} ctx\n\t * @param {object} chartArea\n\t * @param {number} [start]\n\t * @param {number} [count]\n\t */\n  draw(ctx, chartArea, start, count) {\n    const options = this.options || {};\n    const points = this.points || [];\n\n    if (points.length && options.borderWidth) {\n      ctx.save();\n\n      draw(ctx, this, start, count);\n\n      ctx.restore();\n    }\n\n    if (this.animated) {\n      // When line is animated, the control points and path are not cached.\n      this._pointsUpdated = false;\n      this._path = undefined;\n    }\n  }\n}\n","import Element from '../core/core.element';\nimport {drawPoint, _isPointInArea} from '../helpers/helpers.canvas';\n\nfunction inRange(el, pos, axis, useFinalPosition) {\n  const options = el.options;\n  const {[axis]: value} = el.getProps([axis], useFinalPosition);\n\n  return (Math.abs(pos - value) < options.radius + options.hitRadius);\n}\n\nexport default class PointElement extends Element {\n\n  static id = 'point';\n\n  /**\n   * @type {any}\n   */\n  static defaults = {\n    borderWidth: 1,\n    hitRadius: 1,\n    hoverBorderWidth: 1,\n    hoverRadius: 4,\n    pointStyle: 'circle',\n    radius: 3,\n    rotation: 0\n  };\n\n  /**\n   * @type {any}\n   */\n  static defaultRoutes = {\n    backgroundColor: 'backgroundColor',\n    borderColor: 'borderColor'\n  };\n\n  constructor(cfg) {\n    super();\n\n    this.options = undefined;\n    this.parsed = undefined;\n    this.skip = undefined;\n    this.stop = undefined;\n\n    if (cfg) {\n      Object.assign(this, cfg);\n    }\n  }\n\n  inRange(mouseX, mouseY, useFinalPosition) {\n    const options = this.options;\n    const {x, y} = this.getProps(['x', 'y'], useFinalPosition);\n    return ((Math.pow(mouseX - x, 2) + Math.pow(mouseY - y, 2)) < Math.pow(options.hitRadius + options.radius, 2));\n  }\n\n  inXRange(mouseX, useFinalPosition) {\n    return inRange(this, mouseX, 'x', useFinalPosition);\n  }\n\n  inYRange(mouseY, useFinalPosition) {\n    return inRange(this, mouseY, 'y', useFinalPosition);\n  }\n\n  getCenterPoint(useFinalPosition) {\n    const {x, y} = this.getProps(['x', 'y'], useFinalPosition);\n    return {x, y};\n  }\n\n  size(options) {\n    options = options || this.options || {};\n    let radius = options.radius || 0;\n    radius = Math.max(radius, radius && options.hoverRadius || 0);\n    const borderWidth = radius && options.borderWidth || 0;\n    return (radius + borderWidth) * 2;\n  }\n\n  draw(ctx, area) {\n    const options = this.options;\n\n    if (this.skip || options.radius < 0.1 || !_isPointInArea(this, area, this.size(options) / 2)) {\n      return;\n    }\n\n    ctx.strokeStyle = options.borderColor;\n    ctx.lineWidth = options.borderWidth;\n    ctx.fillStyle = options.backgroundColor;\n    drawPoint(ctx, options, this.x, this.y);\n  }\n\n  getRange() {\n    const options = this.options || {};\n    return options.radius + options.hitRadius;\n  }\n}\n","import Element from '../core/core.element';\nimport {isObject, _isBetween, _limitValue} from '../helpers';\nimport {addRoundedRectPath} from '../helpers/helpers.canvas';\nimport {toTRBL, toTRBLCorners} from '../helpers/helpers.options';\n\n/**\n * Helper function to get the bounds of the bar regardless of the orientation\n * @param {BarElement} bar the bar\n * @param {boolean} [useFinalPosition]\n * @return {object} bounds of the bar\n * @private\n */\nfunction getBarBounds(bar, useFinalPosition) {\n  const {x, y, base, width, height} = bar.getProps(['x', 'y', 'base', 'width', 'height'], useFinalPosition);\n\n  let left, right, top, bottom, half;\n\n  if (bar.horizontal) {\n    half = height / 2;\n    left = Math.min(x, base);\n    right = Math.max(x, base);\n    top = y - half;\n    bottom = y + half;\n  } else {\n    half = width / 2;\n    left = x - half;\n    right = x + half;\n    top = Math.min(y, base);\n    bottom = Math.max(y, base);\n  }\n\n  return {left, top, right, bottom};\n}\n\nfunction skipOrLimit(skip, value, min, max) {\n  return skip ? 0 : _limitValue(value, min, max);\n}\n\nfunction parseBorderWidth(bar, maxW, maxH) {\n  const value = bar.options.borderWidth;\n  const skip = bar.borderSkipped;\n  const o = toTRBL(value);\n\n  return {\n    t: skipOrLimit(skip.top, o.top, 0, maxH),\n    r: skipOrLimit(skip.right, o.right, 0, maxW),\n    b: skipOrLimit(skip.bottom, o.bottom, 0, maxH),\n    l: skipOrLimit(skip.left, o.left, 0, maxW)\n  };\n}\n\nfunction parseBorderRadius(bar, maxW, maxH) {\n  const {enableBorderRadius} = bar.getProps(['enableBorderRadius']);\n  const value = bar.options.borderRadius;\n  const o = toTRBLCorners(value);\n  const maxR = Math.min(maxW, maxH);\n  const skip = bar.borderSkipped;\n\n  // If the value is an object, assume the user knows what they are doing\n  // and apply as directed.\n  const enableBorder = enableBorderRadius || isObject(value);\n\n  return {\n    topLeft: skipOrLimit(!enableBorder || skip.top || skip.left, o.topLeft, 0, maxR),\n    topRight: skipOrLimit(!enableBorder || skip.top || skip.right, o.topRight, 0, maxR),\n    bottomLeft: skipOrLimit(!enableBorder || skip.bottom || skip.left, o.bottomLeft, 0, maxR),\n    bottomRight: skipOrLimit(!enableBorder || skip.bottom || skip.right, o.bottomRight, 0, maxR)\n  };\n}\n\nfunction boundingRects(bar) {\n  const bounds = getBarBounds(bar);\n  const width = bounds.right - bounds.left;\n  const height = bounds.bottom - bounds.top;\n  const border = parseBorderWidth(bar, width / 2, height / 2);\n  const radius = parseBorderRadius(bar, width / 2, height / 2);\n\n  return {\n    outer: {\n      x: bounds.left,\n      y: bounds.top,\n      w: width,\n      h: height,\n      radius\n    },\n    inner: {\n      x: bounds.left + border.l,\n      y: bounds.top + border.t,\n      w: width - border.l - border.r,\n      h: height - border.t - border.b,\n      radius: {\n        topLeft: Math.max(0, radius.topLeft - Math.max(border.t, border.l)),\n        topRight: Math.max(0, radius.topRight - Math.max(border.t, border.r)),\n        bottomLeft: Math.max(0, radius.bottomLeft - Math.max(border.b, border.l)),\n        bottomRight: Math.max(0, radius.bottomRight - Math.max(border.b, border.r)),\n      }\n    }\n  };\n}\n\nfunction inRange(bar, x, y, useFinalPosition) {\n  const skipX = x === null;\n  const skipY = y === null;\n  const skipBoth = skipX && skipY;\n  const bounds = bar && !skipBoth && getBarBounds(bar, useFinalPosition);\n\n  return bounds\n\t\t&& (skipX || _isBetween(x, bounds.left, bounds.right))\n\t\t&& (skipY || _isBetween(y, bounds.top, bounds.bottom));\n}\n\nfunction hasRadius(radius) {\n  return radius.topLeft || radius.topRight || radius.bottomLeft || radius.bottomRight;\n}\n\n/**\n * Add a path of a rectangle to the current sub-path\n * @param {CanvasRenderingContext2D} ctx Context\n * @param {*} rect Bounding rect\n */\nfunction addNormalRectPath(ctx, rect) {\n  ctx.rect(rect.x, rect.y, rect.w, rect.h);\n}\n\nfunction inflateRect(rect, amount, refRect = {}) {\n  const x = rect.x !== refRect.x ? -amount : 0;\n  const y = rect.y !== refRect.y ? -amount : 0;\n  const w = (rect.x + rect.w !== refRect.x + refRect.w ? amount : 0) - x;\n  const h = (rect.y + rect.h !== refRect.y + refRect.h ? amount : 0) - y;\n  return {\n    x: rect.x + x,\n    y: rect.y + y,\n    w: rect.w + w,\n    h: rect.h + h,\n    radius: rect.radius\n  };\n}\n\nexport default class BarElement extends Element {\n\n  static id = 'bar';\n\n  /**\n   * @type {any}\n   */\n  static defaults = {\n    borderSkipped: 'start',\n    borderWidth: 0,\n    borderRadius: 0,\n    inflateAmount: 'auto',\n    pointStyle: undefined\n  };\n\n  /**\n   * @type {any}\n   */\n  static defaultRoutes = {\n    backgroundColor: 'backgroundColor',\n    borderColor: 'borderColor'\n  };\n\n  constructor(cfg) {\n    super();\n\n    this.options = undefined;\n    this.horizontal = undefined;\n    this.base = undefined;\n    this.width = undefined;\n    this.height = undefined;\n    this.inflateAmount = undefined;\n\n    if (cfg) {\n      Object.assign(this, cfg);\n    }\n  }\n\n  draw(ctx) {\n    const {inflateAmount, options: {borderColor, backgroundColor}} = this;\n    const {inner, outer} = boundingRects(this);\n    const addRectPath = hasRadius(outer.radius) ? addRoundedRectPath : addNormalRectPath;\n\n    ctx.save();\n\n    if (outer.w !== inner.w || outer.h !== inner.h) {\n      ctx.beginPath();\n      addRectPath(ctx, inflateRect(outer, inflateAmount, inner));\n      ctx.clip();\n      addRectPath(ctx, inflateRect(inner, -inflateAmount, outer));\n      ctx.fillStyle = borderColor;\n      ctx.fill('evenodd');\n    }\n\n    ctx.beginPath();\n    addRectPath(ctx, inflateRect(inner, inflateAmount));\n    ctx.fillStyle = backgroundColor;\n    ctx.fill();\n\n    ctx.restore();\n  }\n\n  inRange(mouseX, mouseY, useFinalPosition) {\n    return inRange(this, mouseX, mouseY, useFinalPosition);\n  }\n\n  inXRange(mouseX, useFinalPosition) {\n    return inRange(this, mouseX, null, useFinalPosition);\n  }\n\n  inYRange(mouseY, useFinalPosition) {\n    return inRange(this, null, mouseY, useFinalPosition);\n  }\n\n  getCenterPoint(useFinalPosition) {\n    const {x, y, base, horizontal} = this.getProps(['x', 'y', 'base', 'horizontal'], useFinalPosition);\n    return {\n      x: horizontal ? (x + base) / 2 : x,\n      y: horizontal ? y : (y + base) / 2\n    };\n  }\n\n  getRange(axis) {\n    return axis === 'x' ? this.width / 2 : this.height / 2;\n  }\n}\n","import {_limitValue, _lookupByKey, isNullOrUndef, resolve} from '../helpers';\n\nfunction lttbDecimation(data, start, count, availableWidth, options) {\n  /**\n   * Implementation of the Largest Triangle Three Buckets algorithm.\n   *\n   * This implementation is based on the original implementation by Sveinn Steinarsson\n   * in https://github.com/sveinn-steinarsson/flot-downsample/blob/master/jquery.flot.downsample.js\n   *\n   * The original implementation is MIT licensed.\n   */\n  const samples = options.samples || availableWidth;\n  // There are less points than the threshold, returning the whole array\n  if (samples >= count) {\n    return data.slice(start, start + count);\n  }\n\n  const decimated = [];\n\n  const bucketWidth = (count - 2) / (samples - 2);\n  let sampledIndex = 0;\n  const endIndex = start + count - 1;\n  // Starting from offset\n  let a = start;\n  let i, maxAreaPoint, maxArea, area, nextA;\n\n  decimated[sampledIndex++] = data[a];\n\n  for (i = 0; i < samples - 2; i++) {\n    let avgX = 0;\n    let avgY = 0;\n    let j;\n\n    // Adding offset\n    const avgRangeStart = Math.floor((i + 1) * bucketWidth) + 1 + start;\n    const avgRangeEnd = Math.min(Math.floor((i + 2) * bucketWidth) + 1, count) + start;\n    const avgRangeLength = avgRangeEnd - avgRangeStart;\n\n    for (j = avgRangeStart; j < avgRangeEnd; j++) {\n      avgX += data[j].x;\n      avgY += data[j].y;\n    }\n\n    avgX /= avgRangeLength;\n    avgY /= avgRangeLength;\n\n    // Adding offset\n    const rangeOffs = Math.floor(i * bucketWidth) + 1 + start;\n    const rangeTo = Math.min(Math.floor((i + 1) * bucketWidth) + 1, count) + start;\n    const {x: pointAx, y: pointAy} = data[a];\n\n    // Note that this is changed from the original algorithm which initializes these\n    // values to 1. The reason for this change is that if the area is small, nextA\n    // would never be set and thus a crash would occur in the next loop as `a` would become\n    // `undefined`. Since the area is always positive, but could be 0 in the case of a flat trace,\n    // initializing with a negative number is the correct solution.\n    maxArea = area = -1;\n\n    for (j = rangeOffs; j < rangeTo; j++) {\n      area = 0.5 * Math.abs(\n        (pointAx - avgX) * (data[j].y - pointAy) -\n        (pointAx - data[j].x) * (avgY - pointAy)\n      );\n\n      if (area > maxArea) {\n        maxArea = area;\n        maxAreaPoint = data[j];\n        nextA = j;\n      }\n    }\n\n    decimated[sampledIndex++] = maxAreaPoint;\n    a = nextA;\n  }\n\n  // Include the last point\n  decimated[sampledIndex++] = data[endIndex];\n\n  return decimated;\n}\n\nfunction minMaxDecimation(data, start, count, availableWidth) {\n  let avgX = 0;\n  let countX = 0;\n  let i, point, x, y, prevX, minIndex, maxIndex, startIndex, minY, maxY;\n  const decimated = [];\n  const endIndex = start + count - 1;\n\n  const xMin = data[start].x;\n  const xMax = data[endIndex].x;\n  const dx = xMax - xMin;\n\n  for (i = start; i < start + count; ++i) {\n    point = data[i];\n    x = (point.x - xMin) / dx * availableWidth;\n    y = point.y;\n    const truncX = x | 0;\n\n    if (truncX === prevX) {\n      // Determine `minY` / `maxY` and `avgX` while we stay within same x-position\n      if (y < minY) {\n        minY = y;\n        minIndex = i;\n      } else if (y > maxY) {\n        maxY = y;\n        maxIndex = i;\n      }\n      // For first point in group, countX is `0`, so average will be `x` / 1.\n      // Use point.x here because we're computing the average data `x` value\n      avgX = (countX * avgX + point.x) / ++countX;\n    } else {\n      // Push up to 4 points, 3 for the last interval and the first point for this interval\n      const lastIndex = i - 1;\n\n      if (!isNullOrUndef(minIndex) && !isNullOrUndef(maxIndex)) {\n        // The interval is defined by 4 points: start, min, max, end.\n        // The starting point is already considered at this point, so we need to determine which\n        // of the other points to add. We need to sort these points to ensure the decimated data\n        // is still sorted and then ensure there are no duplicates.\n        const intermediateIndex1 = Math.min(minIndex, maxIndex);\n        const intermediateIndex2 = Math.max(minIndex, maxIndex);\n\n        if (intermediateIndex1 !== startIndex && intermediateIndex1 !== lastIndex) {\n          decimated.push({\n            ...data[intermediateIndex1],\n            x: avgX,\n          });\n        }\n        if (intermediateIndex2 !== startIndex && intermediateIndex2 !== lastIndex) {\n          decimated.push({\n            ...data[intermediateIndex2],\n            x: avgX\n          });\n        }\n      }\n\n      // lastIndex === startIndex will occur when a range has only 1 point which could\n      // happen with very uneven data\n      if (i > 0 && lastIndex !== startIndex) {\n        // Last point in the previous interval\n        decimated.push(data[lastIndex]);\n      }\n\n      // Start of the new interval\n      decimated.push(point);\n      prevX = truncX;\n      countX = 0;\n      minY = maxY = y;\n      minIndex = maxIndex = startIndex = i;\n    }\n  }\n\n  return decimated;\n}\n\nfunction cleanDecimatedDataset(dataset) {\n  if (dataset._decimated) {\n    const data = dataset._data;\n    delete dataset._decimated;\n    delete dataset._data;\n    Object.defineProperty(dataset, 'data', {value: data});\n  }\n}\n\nfunction cleanDecimatedData(chart) {\n  chart.data.datasets.forEach((dataset) => {\n    cleanDecimatedDataset(dataset);\n  });\n}\n\nfunction getStartAndCountOfVisiblePointsSimplified(meta, points) {\n  const pointCount = points.length;\n\n  let start = 0;\n  let count;\n\n  const {iScale} = meta;\n  const {min, max, minDefined, maxDefined} = iScale.getUserBounds();\n\n  if (minDefined) {\n    start = _limitValue(_lookupByKey(points, iScale.axis, min).lo, 0, pointCount - 1);\n  }\n  if (maxDefined) {\n    count = _limitValue(_lookupByKey(points, iScale.axis, max).hi + 1, start, pointCount) - start;\n  } else {\n    count = pointCount - start;\n  }\n\n  return {start, count};\n}\n\nexport default {\n  id: 'decimation',\n\n  defaults: {\n    algorithm: 'min-max',\n    enabled: false,\n  },\n\n  beforeElementsUpdate: (chart, args, options) => {\n    if (!options.enabled) {\n      // The decimation plugin may have been previously enabled. Need to remove old `dataset._data` handlers\n      cleanDecimatedData(chart);\n      return;\n    }\n\n    // Assume the entire chart is available to show a few more points than needed\n    const availableWidth = chart.width;\n\n    chart.data.datasets.forEach((dataset, datasetIndex) => {\n      const {_data, indexAxis} = dataset;\n      const meta = chart.getDatasetMeta(datasetIndex);\n      const data = _data || dataset.data;\n\n      if (resolve([indexAxis, chart.options.indexAxis]) === 'y') {\n        // Decimation is only supported for lines that have an X indexAxis\n        return;\n      }\n\n      if (!meta.controller.supportsDecimation) {\n        // Only line datasets are supported\n        return;\n      }\n\n      const xAxis = chart.scales[meta.xAxisID];\n      if (xAxis.type !== 'linear' && xAxis.type !== 'time') {\n        // Only linear interpolation is supported\n        return;\n      }\n\n      if (chart.options.parsing) {\n        // Plugin only supports data that does not need parsing\n        return;\n      }\n\n      let {start, count} = getStartAndCountOfVisiblePointsSimplified(meta, data);\n      const threshold = options.threshold || 4 * availableWidth;\n      if (count <= threshold) {\n        // No decimation is required until we are above this threshold\n        cleanDecimatedDataset(dataset);\n        return;\n      }\n\n      if (isNullOrUndef(_data)) {\n        // First time we are seeing this dataset\n        // We override the 'data' property with a setter that stores the\n        // raw data in _data, but reads the decimated data from _decimated\n        dataset._data = data;\n        delete dataset.data;\n        Object.defineProperty(dataset, 'data', {\n          configurable: true,\n          enumerable: true,\n          get: function() {\n            return this._decimated;\n          },\n          set: function(d) {\n            this._data = d;\n          }\n        });\n      }\n\n      // Point the chart to the decimated data\n      let decimated;\n      switch (options.algorithm) {\n      case 'lttb':\n        decimated = lttbDecimation(data, start, count, availableWidth, options);\n        break;\n      case 'min-max':\n        decimated = minMaxDecimation(data, start, count, availableWidth);\n        break;\n      default:\n        throw new Error(`Unsupported decimation algorithm '${options.algorithm}'`);\n      }\n\n      dataset._decimated = decimated;\n    });\n  },\n\n  destroy(chart) {\n    cleanDecimatedData(chart);\n  }\n};\n","import {_boundSegment, _boundSegments, _normalizeAngle} from '../../helpers';\n\nexport function _segments(line, target, property) {\n  const segments = line.segments;\n  const points = line.points;\n  const tpoints = target.points;\n  const parts = [];\n\n  for (const segment of segments) {\n    let {start, end} = segment;\n    end = _findSegmentEnd(start, end, points);\n\n    const bounds = _getBounds(property, points[start], points[end], segment.loop);\n\n    if (!target.segments) {\n      // Special case for boundary not supporting `segments` (simpleArc)\n      // Bounds are provided as `target` for partial circle, or undefined for full circle\n      parts.push({\n        source: segment,\n        target: bounds,\n        start: points[start],\n        end: points[end]\n      });\n      continue;\n    }\n\n    // Get all segments from `target` that intersect the bounds of current segment of `line`\n    const targetSegments = _boundSegments(target, bounds);\n\n    for (const tgt of targetSegments) {\n      const subBounds = _getBounds(property, tpoints[tgt.start], tpoints[tgt.end], tgt.loop);\n      const fillSources = _boundSegment(segment, points, subBounds);\n\n      for (const fillSource of fillSources) {\n        parts.push({\n          source: fillSource,\n          target: tgt,\n          start: {\n            [property]: _getEdge(bounds, subBounds, 'start', Math.max)\n          },\n          end: {\n            [property]: _getEdge(bounds, subBounds, 'end', Math.min)\n          }\n        });\n      }\n    }\n  }\n  return parts;\n}\n\nexport function _getBounds(property, first, last, loop) {\n  if (loop) {\n    return;\n  }\n  let start = first[property];\n  let end = last[property];\n\n  if (property === 'angle') {\n    start = _normalizeAngle(start);\n    end = _normalizeAngle(end);\n  }\n  return {property, start, end};\n}\n\nexport function _pointsFromSegments(boundary, line) {\n  const {x = null, y = null} = boundary || {};\n  const linePoints = line.points;\n  const points = [];\n  line.segments.forEach(({start, end}) => {\n    end = _findSegmentEnd(start, end, linePoints);\n    const first = linePoints[start];\n    const last = linePoints[end];\n    if (y !== null) {\n      points.push({x: first.x, y});\n      points.push({x: last.x, y});\n    } else if (x !== null) {\n      points.push({x, y: first.y});\n      points.push({x, y: last.y});\n    }\n  });\n  return points;\n}\n\nexport function _findSegmentEnd(start, end, points) {\n  for (;end > start; end--) {\n    const point = points[end];\n    if (!isNaN(point.x) && !isNaN(point.y)) {\n      break;\n    }\n  }\n  return end;\n}\n\nfunction _getEdge(a, b, prop, fn) {\n  if (a && b) {\n    return fn(a[prop], b[prop]);\n  }\n  return a ? a[prop] : b ? b[prop] : 0;\n}\n","/**\n * @typedef { import('../../core/core.controller').default } Chart\n * @typedef { import('../../core/core.scale').default } Scale\n * @typedef { import('../../elements/element.point').default } PointElement\n */\n\nimport {LineElement} from '../../elements';\nimport {isArray} from '../../helpers';\nimport {_pointsFromSegments} from './filler.segment';\n\n/**\n * @param {PointElement[] | { x: number; y: number; }} boundary\n * @param {LineElement} line\n * @return {LineElement?}\n */\nexport function _createBoundaryLine(boundary, line) {\n  let points = [];\n  let _loop = false;\n\n  if (isArray(boundary)) {\n    _loop = true;\n    // @ts-ignore\n    points = boundary;\n  } else {\n    points = _pointsFromSegments(boundary, line);\n  }\n\n  return points.length ? new LineElement({\n    points,\n    options: {tension: 0},\n    _loop,\n    _fullLoop: _loop\n  }) : null;\n}\n\nexport function _shouldApplyFill(source) {\n  return source && source.fill !== false;\n}\n","import {isObject, isFinite, valueOrDefault} from '../../helpers/helpers.core';\n\n/**\n * @typedef { import('../../core/core.scale').default } Scale\n * @typedef { import('../../elements/element.line').default } LineElement\n * @typedef { import('../../../types').FillTarget } FillTarget\n * @typedef { import('../../../types').ComplexFillTarget } ComplexFillTarget\n */\n\nexport function _resolveTarget(sources, index, propagate) {\n  const source = sources[index];\n  let fill = source.fill;\n  const visited = [index];\n  let target;\n\n  if (!propagate) {\n    return fill;\n  }\n\n  while (fill !== false && visited.indexOf(fill) === -1) {\n    if (!isFinite(fill)) {\n      return fill;\n    }\n\n    target = sources[fill];\n    if (!target) {\n      return false;\n    }\n\n    if (target.visible) {\n      return fill;\n    }\n\n    visited.push(fill);\n    fill = target.fill;\n  }\n\n  return false;\n}\n\n/**\n * @param {LineElement} line\n * @param {number} index\n * @param {number} count\n */\nexport function _decodeFill(line, index, count) {\n  const fill = parseFillOption(line);\n\n  if (isObject(fill)) {\n    return isNaN(fill.value) ? false : fill;\n  }\n\n  let target = parseFloat(fill);\n\n  if (isFinite(target) && Math.floor(target) === target) {\n    return decodeTargetIndex(fill[0], index, target, count);\n  }\n\n  return ['origin', 'start', 'end', 'stack', 'shape'].indexOf(fill) >= 0 && fill;\n}\n\nfunction decodeTargetIndex(firstCh, index, target, count) {\n  if (firstCh === '-' || firstCh === '+') {\n    target = index + target;\n  }\n\n  if (target === index || target < 0 || target >= count) {\n    return false;\n  }\n\n  return target;\n}\n\n/**\n * @param {FillTarget | ComplexFillTarget} fill\n * @param {Scale} scale\n * @returns {number | null}\n */\nexport function _getTargetPixel(fill, scale) {\n  let pixel = null;\n  if (fill === 'start') {\n    pixel = scale.bottom;\n  } else if (fill === 'end') {\n    pixel = scale.top;\n  } else if (isObject(fill)) {\n    // @ts-ignore\n    pixel = scale.getPixelForValue(fill.value);\n  } else if (scale.getBasePixel) {\n    pixel = scale.getBasePixel();\n  }\n  return pixel;\n}\n\n/**\n * @param {FillTarget | ComplexFillTarget} fill\n * @param {Scale} scale\n * @param {number} startValue\n * @returns {number | undefined}\n */\nexport function _getTargetValue(fill, scale, startValue) {\n  let value;\n\n  if (fill === 'start') {\n    value = startValue;\n  } else if (fill === 'end') {\n    value = scale.options.reverse ? scale.min : scale.max;\n  } else if (isObject(fill)) {\n    // @ts-ignore\n    value = fill.value;\n  } else {\n    value = scale.getBaseValue();\n  }\n  return value;\n}\n\n/**\n * @param {LineElement} line\n */\nfunction parseFillOption(line) {\n  const options = line.options;\n  const fillOption = options.fill;\n  let fill = valueOrDefault(fillOption && fillOption.target, fillOption);\n\n  if (fill === undefined) {\n    fill = !!options.backgroundColor;\n  }\n\n  if (fill === false || fill === null) {\n    return false;\n  }\n\n  if (fill === true) {\n    return 'origin';\n  }\n  return fill;\n}\n","/**\n * @typedef { import('../../core/core.controller').default } Chart\n * @typedef { import('../../core/core.scale').default } Scale\n * @typedef { import('../../elements/element.point').default } PointElement\n */\n\nimport {LineElement} from '../../elements';\nimport {_isBetween} from '../../helpers';\nimport {_createBoundaryLine} from './filler.helper';\n\n/**\n * @param {{ chart: Chart; scale: Scale; index: number; line: LineElement; }} source\n * @return {LineElement}\n */\nexport function _buildStackLine(source) {\n  const {scale, index, line} = source;\n  const points = [];\n  const segments = line.segments;\n  const sourcePoints = line.points;\n  const linesBelow = getLinesBelow(scale, index);\n  linesBelow.push(_createBoundaryLine({x: null, y: scale.bottom}, line));\n\n  for (let i = 0; i < segments.length; i++) {\n    const segment = segments[i];\n    for (let j = segment.start; j <= segment.end; j++) {\n      addPointsBelow(points, sourcePoints[j], linesBelow);\n    }\n  }\n  return new LineElement({points, options: {}});\n}\n\n/**\n * @param {Scale} scale\n * @param {number} index\n * @return {LineElement[]}\n */\nfunction getLinesBelow(scale, index) {\n  const below = [];\n  const metas = scale.getMatchingVisibleMetas('line');\n\n  for (let i = 0; i < metas.length; i++) {\n    const meta = metas[i];\n    if (meta.index === index) {\n      break;\n    }\n    if (!meta.hidden) {\n      below.unshift(meta.dataset);\n    }\n  }\n  return below;\n}\n\n/**\n * @param {PointElement[]} points\n * @param {PointElement} sourcePoint\n * @param {LineElement[]} linesBelow\n */\nfunction addPointsBelow(points, sourcePoint, linesBelow) {\n  const postponed = [];\n  for (let j = 0; j < linesBelow.length; j++) {\n    const line = linesBelow[j];\n    const {first, last, point} = findPoint(line, sourcePoint, 'x');\n\n    if (!point || (first && last)) {\n      continue;\n    }\n    if (first) {\n      // First point of an segment -> need to add another point before this,\n      // from next line below.\n      postponed.unshift(point);\n    } else {\n      points.push(point);\n      if (!last) {\n        // In the middle of an segment, no need to add more points.\n        break;\n      }\n    }\n  }\n  points.push(...postponed);\n}\n\n/**\n * @param {LineElement} line\n * @param {PointElement} sourcePoint\n * @param {string} property\n * @returns {{point?: PointElement, first?: boolean, last?: boolean}}\n */\nfunction findPoint(line, sourcePoint, property) {\n  const point = line.interpolate(sourcePoint, property);\n  if (!point) {\n    return {};\n  }\n\n  const pointValue = point[property];\n  const segments = line.segments;\n  const linePoints = line.points;\n  let first = false;\n  let last = false;\n  for (let i = 0; i < segments.length; i++) {\n    const segment = segments[i];\n    const firstValue = linePoints[segment.start][property];\n    const lastValue = linePoints[segment.end][property];\n    if (_isBetween(pointValue, firstValue, lastValue)) {\n      first = pointValue === firstValue;\n      last = pointValue === lastValue;\n      break;\n    }\n  }\n  return {first, last, point};\n}\n","import {TAU} from '../../helpers';\n\n// TODO: use elements.ArcElement instead\nexport class simpleArc {\n  constructor(opts) {\n    this.x = opts.x;\n    this.y = opts.y;\n    this.radius = opts.radius;\n  }\n\n  pathSegment(ctx, bounds, opts) {\n    const {x, y, radius} = this;\n    bounds = bounds || {start: 0, end: TAU};\n    ctx.arc(x, y, radius, bounds.end, bounds.start, true);\n    return !opts.bounds;\n  }\n\n  interpolate(point) {\n    const {x, y, radius} = this;\n    const angle = point.angle;\n    return {\n      x: x + Math.cos(angle) * radius,\n      y: y + Math.sin(angle) * radius,\n      angle\n    };\n  }\n}\n","import {isFinite} from '../../helpers';\nimport {_createBoundaryLine} from './filler.helper';\nimport {_getTargetPixel, _getTargetValue} from './filler.options';\nimport {_buildStackLine} from './filler.target.stack';\nimport {simpleArc} from './simpleArc';\n\n/**\n * @typedef { import('../../core/core.controller').default } Chart\n * @typedef { import('../../core/core.scale').default } Scale\n * @typedef { import('../../elements/element.point').default } PointElement\n */\n\nexport function _getTarget(source) {\n  const {chart, fill, line} = source;\n\n  if (isFinite(fill)) {\n    return getLineByIndex(chart, fill);\n  }\n\n  if (fill === 'stack') {\n    return _buildStackLine(source);\n  }\n\n  if (fill === 'shape') {\n    return true;\n  }\n\n  const boundary = computeBoundary(source);\n\n  if (boundary instanceof simpleArc) {\n    return boundary;\n  }\n\n  return _createBoundaryLine(boundary, line);\n}\n\n/**\n * @param {Chart} chart\n * @param {number} index\n */\nfunction getLineByIndex(chart, index) {\n  const meta = chart.getDatasetMeta(index);\n  const visible = meta && chart.isDatasetVisible(index);\n  return visible ? meta.dataset : null;\n}\n\nfunction computeBoundary(source) {\n  const scale = source.scale || {};\n\n  if (scale.getPointPositionForValue) {\n    return computeCircularBoundary(source);\n  }\n  return computeLinearBoundary(source);\n}\n\n\nfunction computeLinearBoundary(source) {\n  const {scale = {}, fill} = source;\n  const pixel = _getTargetPixel(fill, scale);\n\n  if (isFinite(pixel)) {\n    const horizontal = scale.isHorizontal();\n\n    return {\n      x: horizontal ? pixel : null,\n      y: horizontal ? null : pixel\n    };\n  }\n\n  return null;\n}\n\nfunction computeCircularBoundary(source) {\n  const {scale, fill} = source;\n  const options = scale.options;\n  const length = scale.getLabels().length;\n  const start = options.reverse ? scale.max : scale.min;\n  const value = _getTargetValue(fill, scale, start);\n  const target = [];\n\n  if (options.grid.circular) {\n    const center = scale.getPointPositionForValue(0, start);\n    return new simpleArc({\n      x: center.x,\n      y: center.y,\n      radius: scale.getDistanceFromCenterForValue(value)\n    });\n  }\n\n  for (let i = 0; i < length; ++i) {\n    target.push(scale.getPointPositionForValue(i, value));\n  }\n  return target;\n}\n\n","import {clipArea, unclipArea} from '../../helpers';\nimport {_findSegmentEnd, _getBounds, _segments} from './filler.segment';\nimport {_getTarget} from './filler.target';\n\nexport function _drawfill(ctx, source, area) {\n  const target = _getTarget(source);\n  const {line, scale, axis} = source;\n  const lineOpts = line.options;\n  const fillOption = lineOpts.fill;\n  const color = lineOpts.backgroundColor;\n  const {above = color, below = color} = fillOption || {};\n  if (target && line.points.length) {\n    clipArea(ctx, area);\n    doFill(ctx, {line, target, above, below, area, scale, axis});\n    unclipArea(ctx);\n  }\n}\n\nfunction doFill(ctx, cfg) {\n  const {line, target, above, below, area, scale} = cfg;\n  const property = line._loop ? 'angle' : cfg.axis;\n\n  ctx.save();\n\n  if (property === 'x' && below !== above) {\n    clipVertical(ctx, target, area.top);\n    fill(ctx, {line, target, color: above, scale, property});\n    ctx.restore();\n    ctx.save();\n    clipVertical(ctx, target, area.bottom);\n  }\n  fill(ctx, {line, target, color: below, scale, property});\n\n  ctx.restore();\n}\n\nfunction clipVertical(ctx, target, clipY) {\n  const {segments, points} = target;\n  let first = true;\n  let lineLoop = false;\n\n  ctx.beginPath();\n  for (const segment of segments) {\n    const {start, end} = segment;\n    const firstPoint = points[start];\n    const lastPoint = points[_findSegmentEnd(start, end, points)];\n    if (first) {\n      ctx.moveTo(firstPoint.x, firstPoint.y);\n      first = false;\n    } else {\n      ctx.lineTo(firstPoint.x, clipY);\n      ctx.lineTo(firstPoint.x, firstPoint.y);\n    }\n    lineLoop = !!target.pathSegment(ctx, segment, {move: lineLoop});\n    if (lineLoop) {\n      ctx.closePath();\n    } else {\n      ctx.lineTo(lastPoint.x, clipY);\n    }\n  }\n\n  ctx.lineTo(target.first().x, clipY);\n  ctx.closePath();\n  ctx.clip();\n}\n\nfunction fill(ctx, cfg) {\n  const {line, target, property, color, scale} = cfg;\n  const segments = _segments(line, target, property);\n\n  for (const {source: src, target: tgt, start, end} of segments) {\n    const {style: {backgroundColor = color} = {}} = src;\n    const notShape = target !== true;\n\n    ctx.save();\n    ctx.fillStyle = backgroundColor;\n\n    clipBounds(ctx, scale, notShape && _getBounds(property, start, end));\n\n    ctx.beginPath();\n\n    const lineLoop = !!line.pathSegment(ctx, src);\n\n    let loop;\n    if (notShape) {\n      if (lineLoop) {\n        ctx.closePath();\n      } else {\n        interpolatedLineTo(ctx, target, end, property);\n      }\n\n      const targetLoop = !!target.pathSegment(ctx, tgt, {move: lineLoop, reverse: true});\n      loop = lineLoop && targetLoop;\n      if (!loop) {\n        interpolatedLineTo(ctx, target, start, property);\n      }\n    }\n\n    ctx.closePath();\n    ctx.fill(loop ? 'evenodd' : 'nonzero');\n\n    ctx.restore();\n  }\n}\n\nfunction clipBounds(ctx, scale, bounds) {\n  const {top, bottom} = scale.chart.chartArea;\n  const {property, start, end} = bounds || {};\n  if (property === 'x') {\n    ctx.beginPath();\n    ctx.rect(start, top, end - start, bottom - top);\n    ctx.clip();\n  }\n}\n\nfunction interpolatedLineTo(ctx, target, point, property) {\n  const interpolatedPoint = target.interpolate(point, property);\n  if (interpolatedPoint) {\n    ctx.lineTo(interpolatedPoint.x, interpolatedPoint.y);\n  }\n}\n\n","/**\n * Plugin based on discussion from the following Chart.js issues:\n * @see https://github.com/chartjs/Chart.js/issues/2380#issuecomment-279961569\n * @see https://github.com/chartjs/Chart.js/issues/2440#issuecomment-256461897\n */\n\nimport LineElement from '../../elements/element.line';\nimport {_drawfill} from './filler.drawing';\nimport {_shouldApplyFill} from './filler.helper';\nimport {_decodeFill, _resolveTarget} from './filler.options';\n\nexport default {\n  id: 'filler',\n\n  afterDatasetsUpdate(chart, _args, options) {\n    const count = (chart.data.datasets || []).length;\n    const sources = [];\n    let meta, i, line, source;\n\n    for (i = 0; i < count; ++i) {\n      meta = chart.getDatasetMeta(i);\n      line = meta.dataset;\n      source = null;\n\n      if (line && line.options && line instanceof LineElement) {\n        source = {\n          visible: chart.isDatasetVisible(i),\n          index: i,\n          fill: _decodeFill(line, i, count),\n          chart,\n          axis: meta.controller.options.indexAxis,\n          scale: meta.vScale,\n          line,\n        };\n      }\n\n      meta.$filler = source;\n      sources.push(source);\n    }\n\n    for (i = 0; i < count; ++i) {\n      source = sources[i];\n      if (!source || source.fill === false) {\n        continue;\n      }\n\n      source.fill = _resolveTarget(sources, i, options.propagate);\n    }\n  },\n\n  beforeDraw(chart, _args, options) {\n    const draw = options.drawTime === 'beforeDraw';\n    const metasets = chart.getSortedVisibleDatasetMetas();\n    const area = chart.chartArea;\n    for (let i = metasets.length - 1; i >= 0; --i) {\n      const source = metasets[i].$filler;\n      if (!source) {\n        continue;\n      }\n\n      source.line.updateControlPoints(area, source.axis);\n      if (draw && source.fill) {\n        _drawfill(chart.ctx, source, area);\n      }\n    }\n  },\n\n  beforeDatasetsDraw(chart, _args, options) {\n    if (options.drawTime !== 'beforeDatasetsDraw') {\n      return;\n    }\n\n    const metasets = chart.getSortedVisibleDatasetMetas();\n    for (let i = metasets.length - 1; i >= 0; --i) {\n      const source = metasets[i].$filler;\n\n      if (_shouldApplyFill(source)) {\n        _drawfill(chart.ctx, source, chart.chartArea);\n      }\n    }\n  },\n\n  beforeDatasetDraw(chart, args, options) {\n    const source = args.meta.$filler;\n\n    if (!_shouldApplyFill(source) || options.drawTime !== 'beforeDatasetDraw') {\n      return;\n    }\n\n    _drawfill(chart.ctx, source, chart.chartArea);\n  },\n\n  defaults: {\n    propagate: true,\n    drawTime: 'beforeDatasetDraw'\n  }\n};\n","import defaults from '../core/core.defaults';\nimport Element from '../core/core.element';\nimport layouts from '../core/core.layouts';\nimport {addRoundedRectPath, drawPointLegend, renderText} from '../helpers/helpers.canvas';\nimport {\n  callback as call, valueOrDefault, toFont,\n  toPadding, getRtlAdapter, overrideTextDirection, restoreTextDirection,\n  clipArea, unclipArea, _isBetween\n} from '../helpers/index';\nimport {_toLeftRightCenter, _alignStartEnd, _textX} from '../helpers/helpers.extras';\nimport {toTRBLCorners} from '../helpers/helpers.options';\n/**\n * @typedef { import(\"../../types\").ChartEvent } ChartEvent\n */\n\nconst getBoxSize = (labelOpts, fontSize) => {\n  let {boxHeight = fontSize, boxWidth = fontSize} = labelOpts;\n\n  if (labelOpts.usePointStyle) {\n    boxHeight = Math.min(boxHeight, fontSize);\n    boxWidth = labelOpts.pointStyleWidth || Math.min(boxWidth, fontSize);\n  }\n\n  return {\n    boxWidth,\n    boxHeight,\n    itemHeight: Math.max(fontSize, boxHeight)\n  };\n};\n\nconst itemsEqual = (a, b) => a !== null && b !== null && a.datasetIndex === b.datasetIndex && a.index === b.index;\n\nexport class Legend extends Element {\n\n  /**\n\t * @param {{ ctx: any; options: any; chart: any; }} config\n\t */\n  constructor(config) {\n    super();\n\n    this._added = false;\n\n    // Contains hit boxes for each dataset (in dataset order)\n    this.legendHitBoxes = [];\n\n    /**\n \t\t * @private\n \t\t */\n    this._hoveredItem = null;\n\n    // Are we in doughnut mode which has a different data type\n    this.doughnutMode = false;\n\n    this.chart = config.chart;\n    this.options = config.options;\n    this.ctx = config.ctx;\n    this.legendItems = undefined;\n    this.columnSizes = undefined;\n    this.lineWidths = undefined;\n    this.maxHeight = undefined;\n    this.maxWidth = undefined;\n    this.top = undefined;\n    this.bottom = undefined;\n    this.left = undefined;\n    this.right = undefined;\n    this.height = undefined;\n    this.width = undefined;\n    this._margins = undefined;\n    this.position = undefined;\n    this.weight = undefined;\n    this.fullSize = undefined;\n  }\n\n  update(maxWidth, maxHeight, margins) {\n    this.maxWidth = maxWidth;\n    this.maxHeight = maxHeight;\n    this._margins = margins;\n\n    this.setDimensions();\n    this.buildLabels();\n    this.fit();\n  }\n\n  setDimensions() {\n    if (this.isHorizontal()) {\n      this.width = this.maxWidth;\n      this.left = this._margins.left;\n      this.right = this.width;\n    } else {\n      this.height = this.maxHeight;\n      this.top = this._margins.top;\n      this.bottom = this.height;\n    }\n  }\n\n  buildLabels() {\n    const labelOpts = this.options.labels || {};\n    let legendItems = call(labelOpts.generateLabels, [this.chart], this) || [];\n\n    if (labelOpts.filter) {\n      legendItems = legendItems.filter((item) => labelOpts.filter(item, this.chart.data));\n    }\n\n    if (labelOpts.sort) {\n      legendItems = legendItems.sort((a, b) => labelOpts.sort(a, b, this.chart.data));\n    }\n\n    if (this.options.reverse) {\n      legendItems.reverse();\n    }\n\n    this.legendItems = legendItems;\n  }\n\n  fit() {\n    const {options, ctx} = this;\n\n    // The legend may not be displayed for a variety of reasons including\n    // the fact that the defaults got set to `false`.\n    // When the legend is not displayed, there are no guarantees that the options\n    // are correctly formatted so we need to bail out as early as possible.\n    if (!options.display) {\n      this.width = this.height = 0;\n      return;\n    }\n\n    const labelOpts = options.labels;\n    const labelFont = toFont(labelOpts.font);\n    const fontSize = labelFont.size;\n    const titleHeight = this._computeTitleHeight();\n    const {boxWidth, itemHeight} = getBoxSize(labelOpts, fontSize);\n\n    let width, height;\n\n    ctx.font = labelFont.string;\n\n    if (this.isHorizontal()) {\n      width = this.maxWidth; // fill all the width\n      height = this._fitRows(titleHeight, fontSize, boxWidth, itemHeight) + 10;\n    } else {\n      height = this.maxHeight; // fill all the height\n      width = this._fitCols(titleHeight, fontSize, boxWidth, itemHeight) + 10;\n    }\n\n    this.width = Math.min(width, options.maxWidth || this.maxWidth);\n    this.height = Math.min(height, options.maxHeight || this.maxHeight);\n  }\n\n  /**\n\t * @private\n\t */\n  _fitRows(titleHeight, fontSize, boxWidth, itemHeight) {\n    const {ctx, maxWidth, options: {labels: {padding}}} = this;\n    const hitboxes = this.legendHitBoxes = [];\n    // Width of each line of legend boxes. Labels wrap onto multiple lines when there are too many to fit on one\n    const lineWidths = this.lineWidths = [0];\n    const lineHeight = itemHeight + padding;\n    let totalHeight = titleHeight;\n\n    ctx.textAlign = 'left';\n    ctx.textBaseline = 'middle';\n\n    let row = -1;\n    let top = -lineHeight;\n    this.legendItems.forEach((legendItem, i) => {\n      const itemWidth = boxWidth + (fontSize / 2) + ctx.measureText(legendItem.text).width;\n\n      if (i === 0 || lineWidths[lineWidths.length - 1] + itemWidth + 2 * padding > maxWidth) {\n        totalHeight += lineHeight;\n        lineWidths[lineWidths.length - (i > 0 ? 0 : 1)] = 0;\n        top += lineHeight;\n        row++;\n      }\n\n      hitboxes[i] = {left: 0, top, row, width: itemWidth, height: itemHeight};\n\n      lineWidths[lineWidths.length - 1] += itemWidth + padding;\n    });\n\n    return totalHeight;\n  }\n\n  _fitCols(titleHeight, fontSize, boxWidth, itemHeight) {\n    const {ctx, maxHeight, options: {labels: {padding}}} = this;\n    const hitboxes = this.legendHitBoxes = [];\n    const columnSizes = this.columnSizes = [];\n    const heightLimit = maxHeight - titleHeight;\n\n    let totalWidth = padding;\n    let currentColWidth = 0;\n    let currentColHeight = 0;\n\n    let left = 0;\n    let col = 0;\n\n    this.legendItems.forEach((legendItem, i) => {\n      const itemWidth = boxWidth + (fontSize / 2) + ctx.measureText(legendItem.text).width;\n\n      // If too tall, go to new column\n      if (i > 0 && currentColHeight + itemHeight + 2 * padding > heightLimit) {\n        totalWidth += currentColWidth + padding;\n        columnSizes.push({width: currentColWidth, height: currentColHeight}); // previous column size\n        left += currentColWidth + padding;\n        col++;\n        currentColWidth = currentColHeight = 0;\n      }\n\n      // Store the hitbox width and height here. Final position will be updated in `draw`\n      hitboxes[i] = {left, top: currentColHeight, col, width: itemWidth, height: itemHeight};\n\n      // Get max width\n      currentColWidth = Math.max(currentColWidth, itemWidth);\n      currentColHeight += itemHeight + padding;\n    });\n\n    totalWidth += currentColWidth;\n    columnSizes.push({width: currentColWidth, height: currentColHeight}); // previous column size\n\n    return totalWidth;\n  }\n\n  adjustHitBoxes() {\n    if (!this.options.display) {\n      return;\n    }\n    const titleHeight = this._computeTitleHeight();\n    const {legendHitBoxes: hitboxes, options: {align, labels: {padding}, rtl}} = this;\n    const rtlHelper = getRtlAdapter(rtl, this.left, this.width);\n    if (this.isHorizontal()) {\n      let row = 0;\n      let left = _alignStartEnd(align, this.left + padding, this.right - this.lineWidths[row]);\n      for (const hitbox of hitboxes) {\n        if (row !== hitbox.row) {\n          row = hitbox.row;\n          left = _alignStartEnd(align, this.left + padding, this.right - this.lineWidths[row]);\n        }\n        hitbox.top += this.top + titleHeight + padding;\n        hitbox.left = rtlHelper.leftForLtr(rtlHelper.x(left), hitbox.width);\n        left += hitbox.width + padding;\n      }\n    } else {\n      let col = 0;\n      let top = _alignStartEnd(align, this.top + titleHeight + padding, this.bottom - this.columnSizes[col].height);\n      for (const hitbox of hitboxes) {\n        if (hitbox.col !== col) {\n          col = hitbox.col;\n          top = _alignStartEnd(align, this.top + titleHeight + padding, this.bottom - this.columnSizes[col].height);\n        }\n        hitbox.top = top;\n        hitbox.left += this.left + padding;\n        hitbox.left = rtlHelper.leftForLtr(rtlHelper.x(hitbox.left), hitbox.width);\n        top += hitbox.height + padding;\n      }\n    }\n  }\n\n  isHorizontal() {\n    return this.options.position === 'top' || this.options.position === 'bottom';\n  }\n\n  draw() {\n    if (this.options.display) {\n      const ctx = this.ctx;\n      clipArea(ctx, this);\n\n      this._draw();\n\n      unclipArea(ctx);\n    }\n  }\n\n  /**\n\t * @private\n\t */\n  _draw() {\n    const {options: opts, columnSizes, lineWidths, ctx} = this;\n    const {align, labels: labelOpts} = opts;\n    const defaultColor = defaults.color;\n    const rtlHelper = getRtlAdapter(opts.rtl, this.left, this.width);\n    const labelFont = toFont(labelOpts.font);\n    const {color: fontColor, padding} = labelOpts;\n    const fontSize = labelFont.size;\n    const halfFontSize = fontSize / 2;\n    let cursor;\n\n    this.drawTitle();\n\n    // Canvas setup\n    ctx.textAlign = rtlHelper.textAlign('left');\n    ctx.textBaseline = 'middle';\n    ctx.lineWidth = 0.5;\n    ctx.font = labelFont.string;\n\n    const {boxWidth, boxHeight, itemHeight} = getBoxSize(labelOpts, fontSize);\n\n    // current position\n    const drawLegendBox = function(x, y, legendItem) {\n      if (isNaN(boxWidth) || boxWidth <= 0 || isNaN(boxHeight) || boxHeight < 0) {\n        return;\n      }\n\n      // Set the ctx for the box\n      ctx.save();\n\n      const lineWidth = valueOrDefault(legendItem.lineWidth, 1);\n      ctx.fillStyle = valueOrDefault(legendItem.fillStyle, defaultColor);\n      ctx.lineCap = valueOrDefault(legendItem.lineCap, 'butt');\n      ctx.lineDashOffset = valueOrDefault(legendItem.lineDashOffset, 0);\n      ctx.lineJoin = valueOrDefault(legendItem.lineJoin, 'miter');\n      ctx.lineWidth = lineWidth;\n      ctx.strokeStyle = valueOrDefault(legendItem.strokeStyle, defaultColor);\n\n      ctx.setLineDash(valueOrDefault(legendItem.lineDash, []));\n\n      if (labelOpts.usePointStyle) {\n        // Recalculate x and y for drawPoint() because its expecting\n        // x and y to be center of figure (instead of top left)\n        const drawOptions = {\n          radius: boxHeight * Math.SQRT2 / 2,\n          pointStyle: legendItem.pointStyle,\n          rotation: legendItem.rotation,\n          borderWidth: lineWidth\n        };\n        const centerX = rtlHelper.xPlus(x, boxWidth / 2);\n        const centerY = y + halfFontSize;\n\n        // Draw pointStyle as legend symbol\n        drawPointLegend(ctx, drawOptions, centerX, centerY, labelOpts.pointStyleWidth && boxWidth);\n      } else {\n        // Draw box as legend symbol\n        // Adjust position when boxHeight < fontSize (want it centered)\n        const yBoxTop = y + Math.max((fontSize - boxHeight) / 2, 0);\n        const xBoxLeft = rtlHelper.leftForLtr(x, boxWidth);\n        const borderRadius = toTRBLCorners(legendItem.borderRadius);\n\n        ctx.beginPath();\n\n        if (Object.values(borderRadius).some(v => v !== 0)) {\n          addRoundedRectPath(ctx, {\n            x: xBoxLeft,\n            y: yBoxTop,\n            w: boxWidth,\n            h: boxHeight,\n            radius: borderRadius,\n          });\n        } else {\n          ctx.rect(xBoxLeft, yBoxTop, boxWidth, boxHeight);\n        }\n\n        ctx.fill();\n        if (lineWidth !== 0) {\n          ctx.stroke();\n        }\n      }\n\n      ctx.restore();\n    };\n\n    const fillText = function(x, y, legendItem) {\n      renderText(ctx, legendItem.text, x, y + (itemHeight / 2), labelFont, {\n        strikethrough: legendItem.hidden,\n        textAlign: rtlHelper.textAlign(legendItem.textAlign)\n      });\n    };\n\n    // Horizontal\n    const isHorizontal = this.isHorizontal();\n    const titleHeight = this._computeTitleHeight();\n    if (isHorizontal) {\n      cursor = {\n        x: _alignStartEnd(align, this.left + padding, this.right - lineWidths[0]),\n        y: this.top + padding + titleHeight,\n        line: 0\n      };\n    } else {\n      cursor = {\n        x: this.left + padding,\n        y: _alignStartEnd(align, this.top + titleHeight + padding, this.bottom - columnSizes[0].height),\n        line: 0\n      };\n    }\n\n    overrideTextDirection(this.ctx, opts.textDirection);\n\n    const lineHeight = itemHeight + padding;\n    this.legendItems.forEach((legendItem, i) => {\n      // TODO: Remove fallbacks at v4\n      ctx.strokeStyle = legendItem.fontColor || fontColor; // for strikethrough effect\n      ctx.fillStyle = legendItem.fontColor || fontColor; // render in correct colour\n\n      const textWidth = ctx.measureText(legendItem.text).width;\n      const textAlign = rtlHelper.textAlign(legendItem.textAlign || (legendItem.textAlign = labelOpts.textAlign));\n      const width = boxWidth + halfFontSize + textWidth;\n      let x = cursor.x;\n      let y = cursor.y;\n\n      rtlHelper.setWidth(this.width);\n\n      if (isHorizontal) {\n        if (i > 0 && x + width + padding > this.right) {\n          y = cursor.y += lineHeight;\n          cursor.line++;\n          x = cursor.x = _alignStartEnd(align, this.left + padding, this.right - lineWidths[cursor.line]);\n        }\n      } else if (i > 0 && y + lineHeight > this.bottom) {\n        x = cursor.x = x + columnSizes[cursor.line].width + padding;\n        cursor.line++;\n        y = cursor.y = _alignStartEnd(align, this.top + titleHeight + padding, this.bottom - columnSizes[cursor.line].height);\n      }\n\n      const realX = rtlHelper.x(x);\n\n      drawLegendBox(realX, y, legendItem);\n\n      x = _textX(textAlign, x + boxWidth + halfFontSize, isHorizontal ? x + width : this.right, opts.rtl);\n\n      // Fill the actual label\n      fillText(rtlHelper.x(x), y, legendItem);\n\n      if (isHorizontal) {\n        cursor.x += width + padding;\n      } else {\n        cursor.y += lineHeight;\n      }\n    });\n\n    restoreTextDirection(this.ctx, opts.textDirection);\n  }\n\n  /**\n\t * @protected\n\t */\n  drawTitle() {\n    const opts = this.options;\n    const titleOpts = opts.title;\n    const titleFont = toFont(titleOpts.font);\n    const titlePadding = toPadding(titleOpts.padding);\n\n    if (!titleOpts.display) {\n      return;\n    }\n\n    const rtlHelper = getRtlAdapter(opts.rtl, this.left, this.width);\n    const ctx = this.ctx;\n    const position = titleOpts.position;\n    const halfFontSize = titleFont.size / 2;\n    const topPaddingPlusHalfFontSize = titlePadding.top + halfFontSize;\n    let y;\n\n    // These defaults are used when the legend is vertical.\n    // When horizontal, they are computed below.\n    let left = this.left;\n    let maxWidth = this.width;\n\n    if (this.isHorizontal()) {\n      // Move left / right so that the title is above the legend lines\n      maxWidth = Math.max(...this.lineWidths);\n      y = this.top + topPaddingPlusHalfFontSize;\n      left = _alignStartEnd(opts.align, left, this.right - maxWidth);\n    } else {\n      // Move down so that the title is above the legend stack in every alignment\n      const maxHeight = this.columnSizes.reduce((acc, size) => Math.max(acc, size.height), 0);\n      y = topPaddingPlusHalfFontSize + _alignStartEnd(opts.align, this.top, this.bottom - maxHeight - opts.labels.padding - this._computeTitleHeight());\n    }\n\n    // Now that we know the left edge of the inner legend box, compute the correct\n    // X coordinate from the title alignment\n    const x = _alignStartEnd(position, left, left + maxWidth);\n\n    // Canvas setup\n    ctx.textAlign = rtlHelper.textAlign(_toLeftRightCenter(position));\n    ctx.textBaseline = 'middle';\n    ctx.strokeStyle = titleOpts.color;\n    ctx.fillStyle = titleOpts.color;\n    ctx.font = titleFont.string;\n\n    renderText(ctx, titleOpts.text, x, y, titleFont);\n  }\n\n  /**\n\t * @private\n\t */\n  _computeTitleHeight() {\n    const titleOpts = this.options.title;\n    const titleFont = toFont(titleOpts.font);\n    const titlePadding = toPadding(titleOpts.padding);\n    return titleOpts.display ? titleFont.lineHeight + titlePadding.height : 0;\n  }\n\n  /**\n\t * @private\n\t */\n  _getLegendItemAt(x, y) {\n    let i, hitBox, lh;\n\n    if (_isBetween(x, this.left, this.right)\n      && _isBetween(y, this.top, this.bottom)) {\n      // See if we are touching one of the dataset boxes\n      lh = this.legendHitBoxes;\n      for (i = 0; i < lh.length; ++i) {\n        hitBox = lh[i];\n\n        if (_isBetween(x, hitBox.left, hitBox.left + hitBox.width)\n          && _isBetween(y, hitBox.top, hitBox.top + hitBox.height)) {\n          // Touching an element\n          return this.legendItems[i];\n        }\n      }\n    }\n\n    return null;\n  }\n\n  /**\n\t * Handle an event\n\t * @param {ChartEvent} e - The event to handle\n\t */\n  handleEvent(e) {\n    const opts = this.options;\n    if (!isListened(e.type, opts)) {\n      return;\n    }\n\n    // Chart event already has relative position in it\n    const hoveredItem = this._getLegendItemAt(e.x, e.y);\n\n    if (e.type === 'mousemove' || e.type === 'mouseout') {\n      const previous = this._hoveredItem;\n      const sameItem = itemsEqual(previous, hoveredItem);\n      if (previous && !sameItem) {\n        call(opts.onLeave, [e, previous, this], this);\n      }\n\n      this._hoveredItem = hoveredItem;\n\n      if (hoveredItem && !sameItem) {\n        call(opts.onHover, [e, hoveredItem, this], this);\n      }\n    } else if (hoveredItem) {\n      call(opts.onClick, [e, hoveredItem, this], this);\n    }\n  }\n}\n\nfunction isListened(type, opts) {\n  if ((type === 'mousemove' || type === 'mouseout') && (opts.onHover || opts.onLeave)) {\n    return true;\n  }\n  if (opts.onClick && (type === 'click' || type === 'mouseup')) {\n    return true;\n  }\n  return false;\n}\n\nexport default {\n  id: 'legend',\n\n  /**\n\t * For tests\n\t * @private\n\t */\n  _element: Legend,\n\n  start(chart, _args, options) {\n    const legend = chart.legend = new Legend({ctx: chart.ctx, options, chart});\n    layouts.configure(chart, legend, options);\n    layouts.addBox(chart, legend);\n  },\n\n  stop(chart) {\n    layouts.removeBox(chart, chart.legend);\n    delete chart.legend;\n  },\n\n  // During the beforeUpdate step, the layout configuration needs to run\n  // This ensures that if the legend position changes (via an option update)\n  // the layout system respects the change. See https://github.com/chartjs/Chart.js/issues/7527\n  beforeUpdate(chart, _args, options) {\n    const legend = chart.legend;\n    layouts.configure(chart, legend, options);\n    legend.options = options;\n  },\n\n  // The labels need to be built after datasets are updated to ensure that colors\n  // and other styling are correct. See https://github.com/chartjs/Chart.js/issues/6968\n  afterUpdate(chart) {\n    const legend = chart.legend;\n    legend.buildLabels();\n    legend.adjustHitBoxes();\n  },\n\n\n  afterEvent(chart, args) {\n    if (!args.replay) {\n      chart.legend.handleEvent(args.event);\n    }\n  },\n\n  defaults: {\n    display: true,\n    position: 'top',\n    align: 'center',\n    fullSize: true,\n    reverse: false,\n    weight: 1000,\n\n    // a callback that will handle\n    onClick(e, legendItem, legend) {\n      const index = legendItem.datasetIndex;\n      const ci = legend.chart;\n      if (ci.isDatasetVisible(index)) {\n        ci.hide(index);\n        legendItem.hidden = true;\n      } else {\n        ci.show(index);\n        legendItem.hidden = false;\n      }\n    },\n\n    onHover: null,\n    onLeave: null,\n\n    labels: {\n      color: (ctx) => ctx.chart.options.color,\n      boxWidth: 40,\n      padding: 10,\n      // Generates labels shown in the legend\n      // Valid properties to return:\n      // text : text to display\n      // fillStyle : fill of coloured box\n      // strokeStyle: stroke of coloured box\n      // hidden : if this legend item refers to a hidden item\n      // lineCap : cap style for line\n      // lineDash\n      // lineDashOffset :\n      // lineJoin :\n      // lineWidth :\n      generateLabels(chart) {\n        const datasets = chart.data.datasets;\n        const {labels: {usePointStyle, pointStyle, textAlign, color}} = chart.legend.options;\n\n        return chart._getSortedDatasetMetas().map((meta) => {\n          const style = meta.controller.getStyle(usePointStyle ? 0 : undefined);\n          const borderWidth = toPadding(style.borderWidth);\n\n          return {\n            text: datasets[meta.index].label,\n            fillStyle: style.backgroundColor,\n            fontColor: color,\n            hidden: !meta.visible,\n            lineCap: style.borderCapStyle,\n            lineDash: style.borderDash,\n            lineDashOffset: style.borderDashOffset,\n            lineJoin: style.borderJoinStyle,\n            lineWidth: (borderWidth.width + borderWidth.height) / 4,\n            strokeStyle: style.borderColor,\n            pointStyle: pointStyle || style.pointStyle,\n            rotation: style.rotation,\n            textAlign: textAlign || style.textAlign,\n            borderRadius: 0, // TODO: v4, default to style.borderRadius\n\n            // Below is extra data used for toggling the datasets\n            datasetIndex: meta.index\n          };\n        }, this);\n      }\n    },\n\n    title: {\n      color: (ctx) => ctx.chart.options.color,\n      display: false,\n      position: 'center',\n      text: '',\n    }\n  },\n\n  descriptors: {\n    _scriptable: (name) => !name.startsWith('on'),\n    labels: {\n      _scriptable: (name) => !['generateLabels', 'filter', 'sort'].includes(name),\n    }\n  },\n};\n","import Element from '../core/core.element';\nimport layouts from '../core/core.layouts';\nimport {PI, isArray, toPadding, toFont} from '../helpers';\nimport {_toLeftRightCenter, _alignStartEnd} from '../helpers/helpers.extras';\nimport {renderText} from '../helpers/helpers.canvas';\n\nexport class Title extends Element {\n  /**\n\t * @param {{ ctx: any; options: any; chart: any; }} config\n\t */\n  constructor(config) {\n    super();\n\n    this.chart = config.chart;\n    this.options = config.options;\n    this.ctx = config.ctx;\n    this._padding = undefined;\n    this.top = undefined;\n    this.bottom = undefined;\n    this.left = undefined;\n    this.right = undefined;\n    this.width = undefined;\n    this.height = undefined;\n    this.position = undefined;\n    this.weight = undefined;\n    this.fullSize = undefined;\n  }\n\n  update(maxWidth, maxHeight) {\n    const opts = this.options;\n\n    this.left = 0;\n    this.top = 0;\n\n    if (!opts.display) {\n      this.width = this.height = this.right = this.bottom = 0;\n      return;\n    }\n\n    this.width = this.right = maxWidth;\n    this.height = this.bottom = maxHeight;\n\n    const lineCount = isArray(opts.text) ? opts.text.length : 1;\n    this._padding = toPadding(opts.padding);\n    const textSize = lineCount * toFont(opts.font).lineHeight + this._padding.height;\n\n    if (this.isHorizontal()) {\n      this.height = textSize;\n    } else {\n      this.width = textSize;\n    }\n  }\n\n  isHorizontal() {\n    const pos = this.options.position;\n    return pos === 'top' || pos === 'bottom';\n  }\n\n  _drawArgs(offset) {\n    const {top, left, bottom, right, options} = this;\n    const align = options.align;\n    let rotation = 0;\n    let maxWidth, titleX, titleY;\n\n    if (this.isHorizontal()) {\n      titleX = _alignStartEnd(align, left, right);\n      titleY = top + offset;\n      maxWidth = right - left;\n    } else {\n      if (options.position === 'left') {\n        titleX = left + offset;\n        titleY = _alignStartEnd(align, bottom, top);\n        rotation = PI * -0.5;\n      } else {\n        titleX = right - offset;\n        titleY = _alignStartEnd(align, top, bottom);\n        rotation = PI * 0.5;\n      }\n      maxWidth = bottom - top;\n    }\n    return {titleX, titleY, maxWidth, rotation};\n  }\n\n  draw() {\n    const ctx = this.ctx;\n    const opts = this.options;\n\n    if (!opts.display) {\n      return;\n    }\n\n    const fontOpts = toFont(opts.font);\n    const lineHeight = fontOpts.lineHeight;\n    const offset = lineHeight / 2 + this._padding.top;\n    const {titleX, titleY, maxWidth, rotation} = this._drawArgs(offset);\n\n    renderText(ctx, opts.text, 0, 0, fontOpts, {\n      color: opts.color,\n      maxWidth,\n      rotation,\n      textAlign: _toLeftRightCenter(opts.align),\n      textBaseline: 'middle',\n      translation: [titleX, titleY],\n    });\n  }\n}\n\nfunction createTitle(chart, titleOpts) {\n  const title = new Title({\n    ctx: chart.ctx,\n    options: titleOpts,\n    chart\n  });\n\n  layouts.configure(chart, title, titleOpts);\n  layouts.addBox(chart, title);\n  chart.titleBlock = title;\n}\n\nexport default {\n  id: 'title',\n\n  /**\n\t * For tests\n\t * @private\n\t */\n  _element: Title,\n\n  start(chart, _args, options) {\n    createTitle(chart, options);\n  },\n\n  stop(chart) {\n    const titleBlock = chart.titleBlock;\n    layouts.removeBox(chart, titleBlock);\n    delete chart.titleBlock;\n  },\n\n  beforeUpdate(chart, _args, options) {\n    const title = chart.titleBlock;\n    layouts.configure(chart, title, options);\n    title.options = options;\n  },\n\n  defaults: {\n    align: 'center',\n    display: false,\n    font: {\n      weight: 'bold',\n    },\n    fullSize: true,\n    padding: 10,\n    position: 'top',\n    text: '',\n    weight: 2000         // by default greater than legend (1000) to be above\n  },\n\n  defaultRoutes: {\n    color: 'color'\n  },\n\n  descriptors: {\n    _scriptable: true,\n    _indexable: false,\n  },\n};\n","import {Title} from './plugin.title';\nimport layouts from '../core/core.layouts';\n\nconst map = new WeakMap();\n\nexport default {\n  id: 'subtitle',\n\n  start(chart, _args, options) {\n    const title = new Title({\n      ctx: chart.ctx,\n      options,\n      chart\n    });\n\n    layouts.configure(chart, title, options);\n    layouts.addBox(chart, title);\n    map.set(chart, title);\n  },\n\n  stop(chart) {\n    layouts.removeBox(chart, map.get(chart));\n    map.delete(chart);\n  },\n\n  beforeUpdate(chart, _args, options) {\n    const title = map.get(chart);\n    layouts.configure(chart, title, options);\n    title.options = options;\n  },\n\n  defaults: {\n    align: 'center',\n    display: false,\n    font: {\n      weight: 'normal',\n    },\n    fullSize: true,\n    padding: 0,\n    position: 'top',\n    text: '',\n    weight: 1500         // by default greater than legend (1000) and smaller than title (2000)\n  },\n\n  defaultRoutes: {\n    color: 'color'\n  },\n\n  descriptors: {\n    _scriptable: true,\n    _indexable: false,\n  },\n};\n","import Animations from '../core/core.animations';\nimport Element from '../core/core.element';\nimport {addRoundedRectPath} from '../helpers/helpers.canvas';\nimport {each, noop, isNullOrUndef, isArray, _elementsEqual, isObject} from '../helpers/helpers.core';\nimport {toFont, toPadding, toTRBLCorners} from '../helpers/helpers.options';\nimport {getRtlAdapter, overrideTextDirection, restoreTextDirection} from '../helpers/helpers.rtl';\nimport {distanceBetweenPoints, _limitValue} from '../helpers/helpers.math';\nimport {createContext, drawPoint} from '../helpers';\n\n/**\n * @typedef { import(\"../platform/platform.base\").Chart } Chart\n * @typedef { import(\"../../types\").ChartEvent } ChartEvent\n * @typedef { import(\"../../types\").ActiveElement } ActiveElement\n */\n\nconst positioners = {\n  /**\n\t * Average mode places the tooltip at the average position of the elements shown\n\t */\n  average(items) {\n    if (!items.length) {\n      return false;\n    }\n\n    let i, len;\n    let x = 0;\n    let y = 0;\n    let count = 0;\n\n    for (i = 0, len = items.length; i < len; ++i) {\n      const el = items[i].element;\n      if (el && el.hasValue()) {\n        const pos = el.tooltipPosition();\n        x += pos.x;\n        y += pos.y;\n        ++count;\n      }\n    }\n\n    return {\n      x: x / count,\n      y: y / count\n    };\n  },\n\n  /**\n\t * Gets the tooltip position nearest of the item nearest to the event position\n\t */\n  nearest(items, eventPosition) {\n    if (!items.length) {\n      return false;\n    }\n\n    let x = eventPosition.x;\n    let y = eventPosition.y;\n    let minDistance = Number.POSITIVE_INFINITY;\n    let i, len, nearestElement;\n\n    for (i = 0, len = items.length; i < len; ++i) {\n      const el = items[i].element;\n      if (el && el.hasValue()) {\n        const center = el.getCenterPoint();\n        const d = distanceBetweenPoints(eventPosition, center);\n\n        if (d < minDistance) {\n          minDistance = d;\n          nearestElement = el;\n        }\n      }\n    }\n\n    if (nearestElement) {\n      const tp = nearestElement.tooltipPosition();\n      x = tp.x;\n      y = tp.y;\n    }\n\n    return {\n      x,\n      y\n    };\n  }\n};\n\n// Helper to push or concat based on if the 2nd parameter is an array or not\nfunction pushOrConcat(base, toPush) {\n  if (toPush) {\n    if (isArray(toPush)) {\n      // base = base.concat(toPush);\n      Array.prototype.push.apply(base, toPush);\n    } else {\n      base.push(toPush);\n    }\n  }\n\n  return base;\n}\n\n/**\n * Returns array of strings split by newline\n * @param {*} str - The value to split by newline.\n * @returns {string|string[]} value if newline present - Returned from String split() method\n * @function\n */\nfunction splitNewlines(str) {\n  if ((typeof str === 'string' || str instanceof String) && str.indexOf('\\n') > -1) {\n    return str.split('\\n');\n  }\n  return str;\n}\n\n\n/**\n * Private helper to create a tooltip item model\n * @param {Chart} chart\n * @param {ActiveElement} item - {element, index, datasetIndex} to create the tooltip item for\n * @return new tooltip item\n */\nfunction createTooltipItem(chart, item) {\n  const {element, datasetIndex, index} = item;\n  const controller = chart.getDatasetMeta(datasetIndex).controller;\n  const {label, value} = controller.getLabelAndValue(index);\n\n  return {\n    chart,\n    label,\n    parsed: controller.getParsed(index),\n    raw: chart.data.datasets[datasetIndex].data[index],\n    formattedValue: value,\n    dataset: controller.getDataset(),\n    dataIndex: index,\n    datasetIndex,\n    element\n  };\n}\n\n/**\n * Get the size of the tooltip\n */\nfunction getTooltipSize(tooltip, options) {\n  const ctx = tooltip.chart.ctx;\n  const {body, footer, title} = tooltip;\n  const {boxWidth, boxHeight} = options;\n  const bodyFont = toFont(options.bodyFont);\n  const titleFont = toFont(options.titleFont);\n  const footerFont = toFont(options.footerFont);\n  const titleLineCount = title.length;\n  const footerLineCount = footer.length;\n  const bodyLineItemCount = body.length;\n\n  const padding = toPadding(options.padding);\n  let height = padding.height;\n  let width = 0;\n\n  // Count of all lines in the body\n  let combinedBodyLength = body.reduce((count, bodyItem) => count + bodyItem.before.length + bodyItem.lines.length + bodyItem.after.length, 0);\n  combinedBodyLength += tooltip.beforeBody.length + tooltip.afterBody.length;\n\n  if (titleLineCount) {\n    height += titleLineCount * titleFont.lineHeight\n\t\t\t+ (titleLineCount - 1) * options.titleSpacing\n\t\t\t+ options.titleMarginBottom;\n  }\n  if (combinedBodyLength) {\n    // Body lines may include some extra height depending on boxHeight\n    const bodyLineHeight = options.displayColors ? Math.max(boxHeight, bodyFont.lineHeight) : bodyFont.lineHeight;\n    height += bodyLineItemCount * bodyLineHeight\n\t\t\t+ (combinedBodyLength - bodyLineItemCount) * bodyFont.lineHeight\n\t\t\t+ (combinedBodyLength - 1) * options.bodySpacing;\n  }\n  if (footerLineCount) {\n    height += options.footerMarginTop\n\t\t\t+ footerLineCount * footerFont.lineHeight\n\t\t\t+ (footerLineCount - 1) * options.footerSpacing;\n  }\n\n  // Title width\n  let widthPadding = 0;\n  const maxLineWidth = function(line) {\n    width = Math.max(width, ctx.measureText(line).width + widthPadding);\n  };\n\n  ctx.save();\n\n  ctx.font = titleFont.string;\n  each(tooltip.title, maxLineWidth);\n\n  // Body width\n  ctx.font = bodyFont.string;\n  each(tooltip.beforeBody.concat(tooltip.afterBody), maxLineWidth);\n\n  // Body lines may include some extra width due to the color box\n  widthPadding = options.displayColors ? (boxWidth + 2 + options.boxPadding) : 0;\n  each(body, (bodyItem) => {\n    each(bodyItem.before, maxLineWidth);\n    each(bodyItem.lines, maxLineWidth);\n    each(bodyItem.after, maxLineWidth);\n  });\n\n  // Reset back to 0\n  widthPadding = 0;\n\n  // Footer width\n  ctx.font = footerFont.string;\n  each(tooltip.footer, maxLineWidth);\n\n  ctx.restore();\n\n  // Add padding\n  width += padding.width;\n\n  return {width, height};\n}\n\nfunction determineYAlign(chart, size) {\n  const {y, height} = size;\n\n  if (y < height / 2) {\n    return 'top';\n  } else if (y > (chart.height - height / 2)) {\n    return 'bottom';\n  }\n  return 'center';\n}\n\nfunction doesNotFitWithAlign(xAlign, chart, options, size) {\n  const {x, width} = size;\n  const caret = options.caretSize + options.caretPadding;\n  if (xAlign === 'left' && x + width + caret > chart.width) {\n    return true;\n  }\n\n  if (xAlign === 'right' && x - width - caret < 0) {\n    return true;\n  }\n}\n\nfunction determineXAlign(chart, options, size, yAlign) {\n  const {x, width} = size;\n  const {width: chartWidth, chartArea: {left, right}} = chart;\n  let xAlign = 'center';\n\n  if (yAlign === 'center') {\n    xAlign = x <= (left + right) / 2 ? 'left' : 'right';\n  } else if (x <= width / 2) {\n    xAlign = 'left';\n  } else if (x >= chartWidth - width / 2) {\n    xAlign = 'right';\n  }\n\n  if (doesNotFitWithAlign(xAlign, chart, options, size)) {\n    xAlign = 'center';\n  }\n\n  return xAlign;\n}\n\n/**\n * Helper to get the alignment of a tooltip given the size\n */\nfunction determineAlignment(chart, options, size) {\n  const yAlign = size.yAlign || options.yAlign || determineYAlign(chart, size);\n\n  return {\n    xAlign: size.xAlign || options.xAlign || determineXAlign(chart, options, size, yAlign),\n    yAlign\n  };\n}\n\nfunction alignX(size, xAlign) {\n  let {x, width} = size;\n  if (xAlign === 'right') {\n    x -= width;\n  } else if (xAlign === 'center') {\n    x -= (width / 2);\n  }\n  return x;\n}\n\nfunction alignY(size, yAlign, paddingAndSize) {\n  // eslint-disable-next-line prefer-const\n  let {y, height} = size;\n  if (yAlign === 'top') {\n    y += paddingAndSize;\n  } else if (yAlign === 'bottom') {\n    y -= height + paddingAndSize;\n  } else {\n    y -= (height / 2);\n  }\n  return y;\n}\n\n/**\n * Helper to get the location a tooltip needs to be placed at given the initial position (via the vm) and the size and alignment\n */\nfunction getBackgroundPoint(options, size, alignment, chart) {\n  const {caretSize, caretPadding, cornerRadius} = options;\n  const {xAlign, yAlign} = alignment;\n  const paddingAndSize = caretSize + caretPadding;\n  const {topLeft, topRight, bottomLeft, bottomRight} = toTRBLCorners(cornerRadius);\n\n  let x = alignX(size, xAlign);\n  const y = alignY(size, yAlign, paddingAndSize);\n\n  if (yAlign === 'center') {\n    if (xAlign === 'left') {\n      x += paddingAndSize;\n    } else if (xAlign === 'right') {\n      x -= paddingAndSize;\n    }\n  } else if (xAlign === 'left') {\n    x -= Math.max(topLeft, bottomLeft) + caretSize;\n  } else if (xAlign === 'right') {\n    x += Math.max(topRight, bottomRight) + caretSize;\n  }\n\n  return {\n    x: _limitValue(x, 0, chart.width - size.width),\n    y: _limitValue(y, 0, chart.height - size.height)\n  };\n}\n\nfunction getAlignedX(tooltip, align, options) {\n  const padding = toPadding(options.padding);\n\n  return align === 'center'\n    ? tooltip.x + tooltip.width / 2\n    : align === 'right'\n      ? tooltip.x + tooltip.width - padding.right\n      : tooltip.x + padding.left;\n}\n\n/**\n * Helper to build before and after body lines\n */\nfunction getBeforeAfterBodyLines(callback) {\n  return pushOrConcat([], splitNewlines(callback));\n}\n\nfunction createTooltipContext(parent, tooltip, tooltipItems) {\n  return createContext(parent, {\n    tooltip,\n    tooltipItems,\n    type: 'tooltip'\n  });\n}\n\nfunction overrideCallbacks(callbacks, context) {\n  const override = context && context.dataset && context.dataset.tooltip && context.dataset.tooltip.callbacks;\n  return override ? callbacks.override(override) : callbacks;\n}\n\nexport class Tooltip extends Element {\n\n  /**\n   * @namespace Chart.Tooltip.positioners\n   */\n  static positioners = positioners;\n\n  constructor(config) {\n    super();\n\n    this.opacity = 0;\n    this._active = [];\n    this._eventPosition = undefined;\n    this._size = undefined;\n    this._cachedAnimations = undefined;\n    this._tooltipItems = [];\n    this.$animations = undefined;\n    this.$context = undefined;\n    // TODO: V4, remove config._chart and this._chart backward compatibility aliases\n    this.chart = config.chart || config._chart;\n    this._chart = this.chart;\n    this.options = config.options;\n    this.dataPoints = undefined;\n    this.title = undefined;\n    this.beforeBody = undefined;\n    this.body = undefined;\n    this.afterBody = undefined;\n    this.footer = undefined;\n    this.xAlign = undefined;\n    this.yAlign = undefined;\n    this.x = undefined;\n    this.y = undefined;\n    this.height = undefined;\n    this.width = undefined;\n    this.caretX = undefined;\n    this.caretY = undefined;\n    // TODO: V4, make this private, rename to `_labelStyles`, and combine with `labelPointStyles`\n    // and `labelTextColors` to create a single variable\n    this.labelColors = undefined;\n    this.labelPointStyles = undefined;\n    this.labelTextColors = undefined;\n  }\n\n  initialize(options) {\n    this.options = options;\n    this._cachedAnimations = undefined;\n    this.$context = undefined;\n  }\n\n  /**\n\t * @private\n\t */\n  _resolveAnimations() {\n    const cached = this._cachedAnimations;\n\n    if (cached) {\n      return cached;\n    }\n\n    const chart = this.chart;\n    const options = this.options.setContext(this.getContext());\n    const opts = options.enabled && chart.options.animation && options.animations;\n    const animations = new Animations(this.chart, opts);\n    if (opts._cacheable) {\n      this._cachedAnimations = Object.freeze(animations);\n    }\n\n    return animations;\n  }\n\n  /**\n\t * @protected\n\t */\n  getContext() {\n    return this.$context ||\n\t\t\t(this.$context = createTooltipContext(this.chart.getContext(), this, this._tooltipItems));\n  }\n\n  getTitle(context, options) {\n    const {callbacks} = options;\n\n    const beforeTitle = callbacks.beforeTitle.apply(this, [context]);\n    const title = callbacks.title.apply(this, [context]);\n    const afterTitle = callbacks.afterTitle.apply(this, [context]);\n\n    let lines = [];\n    lines = pushOrConcat(lines, splitNewlines(beforeTitle));\n    lines = pushOrConcat(lines, splitNewlines(title));\n    lines = pushOrConcat(lines, splitNewlines(afterTitle));\n\n    return lines;\n  }\n\n  getBeforeBody(tooltipItems, options) {\n    return getBeforeAfterBodyLines(options.callbacks.beforeBody.apply(this, [tooltipItems]));\n  }\n\n  getBody(tooltipItems, options) {\n    const {callbacks} = options;\n    const bodyItems = [];\n\n    each(tooltipItems, (context) => {\n      const bodyItem = {\n        before: [],\n        lines: [],\n        after: []\n      };\n      const scoped = overrideCallbacks(callbacks, context);\n      pushOrConcat(bodyItem.before, splitNewlines(scoped.beforeLabel.call(this, context)));\n      pushOrConcat(bodyItem.lines, scoped.label.call(this, context));\n      pushOrConcat(bodyItem.after, splitNewlines(scoped.afterLabel.call(this, context)));\n\n      bodyItems.push(bodyItem);\n    });\n\n    return bodyItems;\n  }\n\n  getAfterBody(tooltipItems, options) {\n    return getBeforeAfterBodyLines(options.callbacks.afterBody.apply(this, [tooltipItems]));\n  }\n\n  // Get the footer and beforeFooter and afterFooter lines\n  getFooter(tooltipItems, options) {\n    const {callbacks} = options;\n\n    const beforeFooter = callbacks.beforeFooter.apply(this, [tooltipItems]);\n    const footer = callbacks.footer.apply(this, [tooltipItems]);\n    const afterFooter = callbacks.afterFooter.apply(this, [tooltipItems]);\n\n    let lines = [];\n    lines = pushOrConcat(lines, splitNewlines(beforeFooter));\n    lines = pushOrConcat(lines, splitNewlines(footer));\n    lines = pushOrConcat(lines, splitNewlines(afterFooter));\n\n    return lines;\n  }\n\n  /**\n\t * @private\n\t */\n  _createItems(options) {\n    const active = this._active;\n    const data = this.chart.data;\n    const labelColors = [];\n    const labelPointStyles = [];\n    const labelTextColors = [];\n    let tooltipItems = [];\n    let i, len;\n\n    for (i = 0, len = active.length; i < len; ++i) {\n      tooltipItems.push(createTooltipItem(this.chart, active[i]));\n    }\n\n    // If the user provided a filter function, use it to modify the tooltip items\n    if (options.filter) {\n      tooltipItems = tooltipItems.filter((element, index, array) => options.filter(element, index, array, data));\n    }\n\n    // If the user provided a sorting function, use it to modify the tooltip items\n    if (options.itemSort) {\n      tooltipItems = tooltipItems.sort((a, b) => options.itemSort(a, b, data));\n    }\n\n    // Determine colors for boxes\n    each(tooltipItems, (context) => {\n      const scoped = overrideCallbacks(options.callbacks, context);\n      labelColors.push(scoped.labelColor.call(this, context));\n      labelPointStyles.push(scoped.labelPointStyle.call(this, context));\n      labelTextColors.push(scoped.labelTextColor.call(this, context));\n    });\n\n    this.labelColors = labelColors;\n    this.labelPointStyles = labelPointStyles;\n    this.labelTextColors = labelTextColors;\n    this.dataPoints = tooltipItems;\n    return tooltipItems;\n  }\n\n  update(changed, replay) {\n    const options = this.options.setContext(this.getContext());\n    const active = this._active;\n    let properties;\n    let tooltipItems = [];\n\n    if (!active.length) {\n      if (this.opacity !== 0) {\n        properties = {\n          opacity: 0\n        };\n      }\n    } else {\n      const position = positioners[options.position].call(this, active, this._eventPosition);\n      tooltipItems = this._createItems(options);\n\n      this.title = this.getTitle(tooltipItems, options);\n      this.beforeBody = this.getBeforeBody(tooltipItems, options);\n      this.body = this.getBody(tooltipItems, options);\n      this.afterBody = this.getAfterBody(tooltipItems, options);\n      this.footer = this.getFooter(tooltipItems, options);\n\n      const size = this._size = getTooltipSize(this, options);\n      const positionAndSize = Object.assign({}, position, size);\n      const alignment = determineAlignment(this.chart, options, positionAndSize);\n      const backgroundPoint = getBackgroundPoint(options, positionAndSize, alignment, this.chart);\n\n      this.xAlign = alignment.xAlign;\n      this.yAlign = alignment.yAlign;\n\n      properties = {\n        opacity: 1,\n        x: backgroundPoint.x,\n        y: backgroundPoint.y,\n        width: size.width,\n        height: size.height,\n        caretX: position.x,\n        caretY: position.y\n      };\n    }\n\n    this._tooltipItems = tooltipItems;\n    this.$context = undefined;\n\n    if (properties) {\n      this._resolveAnimations().update(this, properties);\n    }\n\n    if (changed && options.external) {\n      options.external.call(this, {chart: this.chart, tooltip: this, replay});\n    }\n  }\n\n  drawCaret(tooltipPoint, ctx, size, options) {\n    const caretPosition = this.getCaretPosition(tooltipPoint, size, options);\n\n    ctx.lineTo(caretPosition.x1, caretPosition.y1);\n    ctx.lineTo(caretPosition.x2, caretPosition.y2);\n    ctx.lineTo(caretPosition.x3, caretPosition.y3);\n  }\n\n  getCaretPosition(tooltipPoint, size, options) {\n    const {xAlign, yAlign} = this;\n    const {caretSize, cornerRadius} = options;\n    const {topLeft, topRight, bottomLeft, bottomRight} = toTRBLCorners(cornerRadius);\n    const {x: ptX, y: ptY} = tooltipPoint;\n    const {width, height} = size;\n    let x1, x2, x3, y1, y2, y3;\n\n    if (yAlign === 'center') {\n      y2 = ptY + (height / 2);\n\n      if (xAlign === 'left') {\n        x1 = ptX;\n        x2 = x1 - caretSize;\n\n        // Left draws bottom -> top, this y1 is on the bottom\n        y1 = y2 + caretSize;\n        y3 = y2 - caretSize;\n      } else {\n        x1 = ptX + width;\n        x2 = x1 + caretSize;\n\n        // Right draws top -> bottom, thus y1 is on the top\n        y1 = y2 - caretSize;\n        y3 = y2 + caretSize;\n      }\n\n      x3 = x1;\n    } else {\n      if (xAlign === 'left') {\n        x2 = ptX + Math.max(topLeft, bottomLeft) + (caretSize);\n      } else if (xAlign === 'right') {\n        x2 = ptX + width - Math.max(topRight, bottomRight) - caretSize;\n      } else {\n        x2 = this.caretX;\n      }\n\n      if (yAlign === 'top') {\n        y1 = ptY;\n        y2 = y1 - caretSize;\n\n        // Top draws left -> right, thus x1 is on the left\n        x1 = x2 - caretSize;\n        x3 = x2 + caretSize;\n      } else {\n        y1 = ptY + height;\n        y2 = y1 + caretSize;\n\n        // Bottom draws right -> left, thus x1 is on the right\n        x1 = x2 + caretSize;\n        x3 = x2 - caretSize;\n      }\n      y3 = y1;\n    }\n    return {x1, x2, x3, y1, y2, y3};\n  }\n\n  drawTitle(pt, ctx, options) {\n    const title = this.title;\n    const length = title.length;\n    let titleFont, titleSpacing, i;\n\n    if (length) {\n      const rtlHelper = getRtlAdapter(options.rtl, this.x, this.width);\n\n      pt.x = getAlignedX(this, options.titleAlign, options);\n\n      ctx.textAlign = rtlHelper.textAlign(options.titleAlign);\n      ctx.textBaseline = 'middle';\n\n      titleFont = toFont(options.titleFont);\n      titleSpacing = options.titleSpacing;\n\n      ctx.fillStyle = options.titleColor;\n      ctx.font = titleFont.string;\n\n      for (i = 0; i < length; ++i) {\n        ctx.fillText(title[i], rtlHelper.x(pt.x), pt.y + titleFont.lineHeight / 2);\n        pt.y += titleFont.lineHeight + titleSpacing; // Line Height and spacing\n\n        if (i + 1 === length) {\n          pt.y += options.titleMarginBottom - titleSpacing; // If Last, add margin, remove spacing\n        }\n      }\n    }\n  }\n\n  /**\n\t * @private\n\t */\n  _drawColorBox(ctx, pt, i, rtlHelper, options) {\n    const labelColors = this.labelColors[i];\n    const labelPointStyle = this.labelPointStyles[i];\n    const {boxHeight, boxWidth, boxPadding} = options;\n    const bodyFont = toFont(options.bodyFont);\n    const colorX = getAlignedX(this, 'left', options);\n    const rtlColorX = rtlHelper.x(colorX);\n    const yOffSet = boxHeight < bodyFont.lineHeight ? (bodyFont.lineHeight - boxHeight) / 2 : 0;\n    const colorY = pt.y + yOffSet;\n\n    if (options.usePointStyle) {\n      const drawOptions = {\n        radius: Math.min(boxWidth, boxHeight) / 2, // fit the circle in the box\n        pointStyle: labelPointStyle.pointStyle,\n        rotation: labelPointStyle.rotation,\n        borderWidth: 1\n      };\n      // Recalculate x and y for drawPoint() because its expecting\n      // x and y to be center of figure (instead of top left)\n      const centerX = rtlHelper.leftForLtr(rtlColorX, boxWidth) + boxWidth / 2;\n      const centerY = colorY + boxHeight / 2;\n\n      // Fill the point with white so that colours merge nicely if the opacity is < 1\n      ctx.strokeStyle = options.multiKeyBackground;\n      ctx.fillStyle = options.multiKeyBackground;\n      drawPoint(ctx, drawOptions, centerX, centerY);\n\n      // Draw the point\n      ctx.strokeStyle = labelColors.borderColor;\n      ctx.fillStyle = labelColors.backgroundColor;\n      drawPoint(ctx, drawOptions, centerX, centerY);\n    } else {\n      // Border\n      ctx.lineWidth = isObject(labelColors.borderWidth) ? Math.max(...Object.values(labelColors.borderWidth)) : (labelColors.borderWidth || 1); // TODO, v4 remove fallback\n      ctx.strokeStyle = labelColors.borderColor;\n      ctx.setLineDash(labelColors.borderDash || []);\n      ctx.lineDashOffset = labelColors.borderDashOffset || 0;\n\n      // Fill a white rect so that colours merge nicely if the opacity is < 1\n      const outerX = rtlHelper.leftForLtr(rtlColorX, boxWidth - boxPadding);\n      const innerX = rtlHelper.leftForLtr(rtlHelper.xPlus(rtlColorX, 1), boxWidth - boxPadding - 2);\n      const borderRadius = toTRBLCorners(labelColors.borderRadius);\n\n      if (Object.values(borderRadius).some(v => v !== 0)) {\n        ctx.beginPath();\n        ctx.fillStyle = options.multiKeyBackground;\n        addRoundedRectPath(ctx, {\n          x: outerX,\n          y: colorY,\n          w: boxWidth,\n          h: boxHeight,\n          radius: borderRadius,\n        });\n        ctx.fill();\n        ctx.stroke();\n\n        // Inner square\n        ctx.fillStyle = labelColors.backgroundColor;\n        ctx.beginPath();\n        addRoundedRectPath(ctx, {\n          x: innerX,\n          y: colorY + 1,\n          w: boxWidth - 2,\n          h: boxHeight - 2,\n          radius: borderRadius,\n        });\n        ctx.fill();\n      } else {\n        // Normal rect\n        ctx.fillStyle = options.multiKeyBackground;\n        ctx.fillRect(outerX, colorY, boxWidth, boxHeight);\n        ctx.strokeRect(outerX, colorY, boxWidth, boxHeight);\n        // Inner square\n        ctx.fillStyle = labelColors.backgroundColor;\n        ctx.fillRect(innerX, colorY + 1, boxWidth - 2, boxHeight - 2);\n      }\n    }\n\n    // restore fillStyle\n    ctx.fillStyle = this.labelTextColors[i];\n  }\n\n  drawBody(pt, ctx, options) {\n    const {body} = this;\n    const {bodySpacing, bodyAlign, displayColors, boxHeight, boxWidth, boxPadding} = options;\n    const bodyFont = toFont(options.bodyFont);\n    let bodyLineHeight = bodyFont.lineHeight;\n    let xLinePadding = 0;\n\n    const rtlHelper = getRtlAdapter(options.rtl, this.x, this.width);\n\n    const fillLineOfText = function(line) {\n      ctx.fillText(line, rtlHelper.x(pt.x + xLinePadding), pt.y + bodyLineHeight / 2);\n      pt.y += bodyLineHeight + bodySpacing;\n    };\n\n    const bodyAlignForCalculation = rtlHelper.textAlign(bodyAlign);\n    let bodyItem, textColor, lines, i, j, ilen, jlen;\n\n    ctx.textAlign = bodyAlign;\n    ctx.textBaseline = 'middle';\n    ctx.font = bodyFont.string;\n\n    pt.x = getAlignedX(this, bodyAlignForCalculation, options);\n\n    // Before body lines\n    ctx.fillStyle = options.bodyColor;\n    each(this.beforeBody, fillLineOfText);\n\n    xLinePadding = displayColors && bodyAlignForCalculation !== 'right'\n      ? bodyAlign === 'center' ? (boxWidth / 2 + boxPadding) : (boxWidth + 2 + boxPadding)\n      : 0;\n\n    // Draw body lines now\n    for (i = 0, ilen = body.length; i < ilen; ++i) {\n      bodyItem = body[i];\n      textColor = this.labelTextColors[i];\n\n      ctx.fillStyle = textColor;\n      each(bodyItem.before, fillLineOfText);\n\n      lines = bodyItem.lines;\n      // Draw Legend-like boxes if needed\n      if (displayColors && lines.length) {\n        this._drawColorBox(ctx, pt, i, rtlHelper, options);\n        bodyLineHeight = Math.max(bodyFont.lineHeight, boxHeight);\n      }\n\n      for (j = 0, jlen = lines.length; j < jlen; ++j) {\n        fillLineOfText(lines[j]);\n        // Reset for any lines that don't include colorbox\n        bodyLineHeight = bodyFont.lineHeight;\n      }\n\n      each(bodyItem.after, fillLineOfText);\n    }\n\n    // Reset back to 0 for after body\n    xLinePadding = 0;\n    bodyLineHeight = bodyFont.lineHeight;\n\n    // After body lines\n    each(this.afterBody, fillLineOfText);\n    pt.y -= bodySpacing; // Remove last body spacing\n  }\n\n  drawFooter(pt, ctx, options) {\n    const footer = this.footer;\n    const length = footer.length;\n    let footerFont, i;\n\n    if (length) {\n      const rtlHelper = getRtlAdapter(options.rtl, this.x, this.width);\n\n      pt.x = getAlignedX(this, options.footerAlign, options);\n      pt.y += options.footerMarginTop;\n\n      ctx.textAlign = rtlHelper.textAlign(options.footerAlign);\n      ctx.textBaseline = 'middle';\n\n      footerFont = toFont(options.footerFont);\n\n      ctx.fillStyle = options.footerColor;\n      ctx.font = footerFont.string;\n\n      for (i = 0; i < length; ++i) {\n        ctx.fillText(footer[i], rtlHelper.x(pt.x), pt.y + footerFont.lineHeight / 2);\n        pt.y += footerFont.lineHeight + options.footerSpacing;\n      }\n    }\n  }\n\n  drawBackground(pt, ctx, tooltipSize, options) {\n    const {xAlign, yAlign} = this;\n    const {x, y} = pt;\n    const {width, height} = tooltipSize;\n    const {topLeft, topRight, bottomLeft, bottomRight} = toTRBLCorners(options.cornerRadius);\n\n    ctx.fillStyle = options.backgroundColor;\n    ctx.strokeStyle = options.borderColor;\n    ctx.lineWidth = options.borderWidth;\n\n    ctx.beginPath();\n    ctx.moveTo(x + topLeft, y);\n    if (yAlign === 'top') {\n      this.drawCaret(pt, ctx, tooltipSize, options);\n    }\n    ctx.lineTo(x + width - topRight, y);\n    ctx.quadraticCurveTo(x + width, y, x + width, y + topRight);\n    if (yAlign === 'center' && xAlign === 'right') {\n      this.drawCaret(pt, ctx, tooltipSize, options);\n    }\n    ctx.lineTo(x + width, y + height - bottomRight);\n    ctx.quadraticCurveTo(x + width, y + height, x + width - bottomRight, y + height);\n    if (yAlign === 'bottom') {\n      this.drawCaret(pt, ctx, tooltipSize, options);\n    }\n    ctx.lineTo(x + bottomLeft, y + height);\n    ctx.quadraticCurveTo(x, y + height, x, y + height - bottomLeft);\n    if (yAlign === 'center' && xAlign === 'left') {\n      this.drawCaret(pt, ctx, tooltipSize, options);\n    }\n    ctx.lineTo(x, y + topLeft);\n    ctx.quadraticCurveTo(x, y, x + topLeft, y);\n    ctx.closePath();\n\n    ctx.fill();\n\n    if (options.borderWidth > 0) {\n      ctx.stroke();\n    }\n  }\n\n  /**\n\t * Update x/y animation targets when _active elements are animating too\n\t * @private\n\t */\n  _updateAnimationTarget(options) {\n    const chart = this.chart;\n    const anims = this.$animations;\n    const animX = anims && anims.x;\n    const animY = anims && anims.y;\n    if (animX || animY) {\n      const position = positioners[options.position].call(this, this._active, this._eventPosition);\n      if (!position) {\n        return;\n      }\n      const size = this._size = getTooltipSize(this, options);\n      const positionAndSize = Object.assign({}, position, this._size);\n      const alignment = determineAlignment(chart, options, positionAndSize);\n      const point = getBackgroundPoint(options, positionAndSize, alignment, chart);\n      if (animX._to !== point.x || animY._to !== point.y) {\n        this.xAlign = alignment.xAlign;\n        this.yAlign = alignment.yAlign;\n        this.width = size.width;\n        this.height = size.height;\n        this.caretX = position.x;\n        this.caretY = position.y;\n        this._resolveAnimations().update(this, point);\n      }\n    }\n  }\n\n  /**\n   * Determine if the tooltip will draw anything\n   * @returns {boolean} True if the tooltip will render\n   */\n  _willRender() {\n    return !!this.opacity;\n  }\n\n  draw(ctx) {\n    const options = this.options.setContext(this.getContext());\n    let opacity = this.opacity;\n\n    if (!opacity) {\n      return;\n    }\n\n    this._updateAnimationTarget(options);\n\n    const tooltipSize = {\n      width: this.width,\n      height: this.height\n    };\n    const pt = {\n      x: this.x,\n      y: this.y\n    };\n\n    // IE11/Edge does not like very small opacities, so snap to 0\n    opacity = Math.abs(opacity) < 1e-3 ? 0 : opacity;\n\n    const padding = toPadding(options.padding);\n\n    // Truthy/falsey value for empty tooltip\n    const hasTooltipContent = this.title.length || this.beforeBody.length || this.body.length || this.afterBody.length || this.footer.length;\n\n    if (options.enabled && hasTooltipContent) {\n      ctx.save();\n      ctx.globalAlpha = opacity;\n\n      // Draw Background\n      this.drawBackground(pt, ctx, tooltipSize, options);\n\n      overrideTextDirection(ctx, options.textDirection);\n\n      pt.y += padding.top;\n\n      // Titles\n      this.drawTitle(pt, ctx, options);\n\n      // Body\n      this.drawBody(pt, ctx, options);\n\n      // Footer\n      this.drawFooter(pt, ctx, options);\n\n      restoreTextDirection(ctx, options.textDirection);\n\n      ctx.restore();\n    }\n  }\n\n  /**\n\t * Get active elements in the tooltip\n\t * @returns {Array} Array of elements that are active in the tooltip\n\t */\n  getActiveElements() {\n    return this._active || [];\n  }\n\n  /**\n\t * Set active elements in the tooltip\n\t * @param {array} activeElements Array of active datasetIndex/index pairs.\n\t * @param {object} eventPosition Synthetic event position used in positioning\n\t */\n  setActiveElements(activeElements, eventPosition) {\n    const lastActive = this._active;\n    const active = activeElements.map(({datasetIndex, index}) => {\n      const meta = this.chart.getDatasetMeta(datasetIndex);\n\n      if (!meta) {\n        throw new Error('Cannot find a dataset at index ' + datasetIndex);\n      }\n\n      return {\n        datasetIndex,\n        element: meta.data[index],\n        index,\n      };\n    });\n    const changed = !_elementsEqual(lastActive, active);\n    const positionChanged = this._positionChanged(active, eventPosition);\n\n    if (changed || positionChanged) {\n      this._active = active;\n      this._eventPosition = eventPosition;\n      this._ignoreReplayEvents = true;\n      this.update(true);\n    }\n  }\n\n  /**\n\t * Handle an event\n\t * @param {ChartEvent} e - The event to handle\n\t * @param {boolean} [replay] - This is a replayed event (from update)\n\t * @param {boolean} [inChartArea] - The event is inside chartArea\n\t * @returns {boolean} true if the tooltip changed\n\t */\n  handleEvent(e, replay, inChartArea = true) {\n    if (replay && this._ignoreReplayEvents) {\n      return false;\n    }\n    this._ignoreReplayEvents = false;\n\n    const options = this.options;\n    const lastActive = this._active || [];\n    const active = this._getActiveElements(e, lastActive, replay, inChartArea);\n\n    // When there are multiple items shown, but the tooltip position is nearest mode\n    // an update may need to be made because our position may have changed even though\n    // the items are the same as before.\n    const positionChanged = this._positionChanged(active, e);\n\n    // Remember Last Actives\n    const changed = replay || !_elementsEqual(active, lastActive) || positionChanged;\n\n    // Only handle target event on tooltip change\n    if (changed) {\n      this._active = active;\n\n      if (options.enabled || options.external) {\n        this._eventPosition = {\n          x: e.x,\n          y: e.y\n        };\n\n        this.update(true, replay);\n      }\n    }\n\n    return changed;\n  }\n\n  /**\n\t * Helper for determining the active elements for event\n\t * @param {ChartEvent} e - The event to handle\n\t * @param {Element[]} lastActive - Previously active elements\n\t * @param {boolean} [replay] - This is a replayed event (from update)\n\t * @param {boolean} [inChartArea] - The event is inside chartArea\n\t * @returns {Element[]} - Active elements\n\t * @private\n\t */\n  _getActiveElements(e, lastActive, replay, inChartArea) {\n    const options = this.options;\n\n    if (e.type === 'mouseout') {\n      return [];\n    }\n\n    if (!inChartArea) {\n      // Let user control the active elements outside chartArea. Eg. using Legend.\n      return lastActive;\n    }\n\n    // Find Active Elements for tooltips\n    const active = this.chart.getElementsAtEventForMode(e, options.mode, options, replay);\n\n    if (options.reverse) {\n      active.reverse();\n    }\n\n    return active;\n  }\n\n  /**\n\t * Determine if the active elements + event combination changes the\n\t * tooltip position\n\t * @param {array} active - Active elements\n\t * @param {ChartEvent} e - Event that triggered the position change\n\t * @returns {boolean} True if the position has changed\n\t */\n  _positionChanged(active, e) {\n    const {caretX, caretY, options} = this;\n    const position = positioners[options.position].call(this, active, e);\n    return position !== false && (caretX !== position.x || caretY !== position.y);\n  }\n}\n\nexport default {\n  id: 'tooltip',\n  _element: Tooltip,\n  positioners,\n\n  afterInit(chart, _args, options) {\n    if (options) {\n      chart.tooltip = new Tooltip({chart, options});\n    }\n  },\n\n  beforeUpdate(chart, _args, options) {\n    if (chart.tooltip) {\n      chart.tooltip.initialize(options);\n    }\n  },\n\n  reset(chart, _args, options) {\n    if (chart.tooltip) {\n      chart.tooltip.initialize(options);\n    }\n  },\n\n  afterDraw(chart) {\n    const tooltip = chart.tooltip;\n\n    if (tooltip && tooltip._willRender()) {\n      const args = {\n        tooltip\n      };\n\n      if (chart.notifyPlugins('beforeTooltipDraw', args) === false) {\n        return;\n      }\n\n      tooltip.draw(chart.ctx);\n\n      chart.notifyPlugins('afterTooltipDraw', args);\n    }\n  },\n\n  afterEvent(chart, args) {\n    if (chart.tooltip) {\n      // If the event is replayed from `update`, we should evaluate with the final positions.\n      const useFinalPosition = args.replay;\n      if (chart.tooltip.handleEvent(args.event, useFinalPosition, args.inChartArea)) {\n        // notify chart about the change, so it will render\n        args.changed = true;\n      }\n    }\n  },\n\n  defaults: {\n    enabled: true,\n    external: null,\n    position: 'average',\n    backgroundColor: 'rgba(0,0,0,0.8)',\n    titleColor: '#fff',\n    titleFont: {\n      weight: 'bold',\n    },\n    titleSpacing: 2,\n    titleMarginBottom: 6,\n    titleAlign: 'left',\n    bodyColor: '#fff',\n    bodySpacing: 2,\n    bodyFont: {\n    },\n    bodyAlign: 'left',\n    footerColor: '#fff',\n    footerSpacing: 2,\n    footerMarginTop: 6,\n    footerFont: {\n      weight: 'bold',\n    },\n    footerAlign: 'left',\n    padding: 6,\n    caretPadding: 2,\n    caretSize: 5,\n    cornerRadius: 6,\n    boxHeight: (ctx, opts) => opts.bodyFont.size,\n    boxWidth: (ctx, opts) => opts.bodyFont.size,\n    multiKeyBackground: '#fff',\n    displayColors: true,\n    boxPadding: 0,\n    borderColor: 'rgba(0,0,0,0)',\n    borderWidth: 0,\n    animation: {\n      duration: 400,\n      easing: 'easeOutQuart',\n    },\n    animations: {\n      numbers: {\n        type: 'number',\n        properties: ['x', 'y', 'width', 'height', 'caretX', 'caretY'],\n      },\n      opacity: {\n        easing: 'linear',\n        duration: 200\n      }\n    },\n    callbacks: {\n      // Args are: (tooltipItems, data)\n      beforeTitle: noop,\n      title(tooltipItems) {\n        if (tooltipItems.length > 0) {\n          const item = tooltipItems[0];\n          const labels = item.chart.data.labels;\n          const labelCount = labels ? labels.length : 0;\n\n          if (this && this.options && this.options.mode === 'dataset') {\n            return item.dataset.label || '';\n          } else if (item.label) {\n            return item.label;\n          } else if (labelCount > 0 && item.dataIndex < labelCount) {\n            return labels[item.dataIndex];\n          }\n        }\n\n        return '';\n      },\n      afterTitle: noop,\n\n      // Args are: (tooltipItems, data)\n      beforeBody: noop,\n\n      // Args are: (tooltipItem, data)\n      beforeLabel: noop,\n      label(tooltipItem) {\n        if (this && this.options && this.options.mode === 'dataset') {\n          return tooltipItem.label + ': ' + tooltipItem.formattedValue || tooltipItem.formattedValue;\n        }\n\n        let label = tooltipItem.dataset.label || '';\n\n        if (label) {\n          label += ': ';\n        }\n        const value = tooltipItem.formattedValue;\n        if (!isNullOrUndef(value)) {\n          label += value;\n        }\n        return label;\n      },\n      labelColor(tooltipItem) {\n        const meta = tooltipItem.chart.getDatasetMeta(tooltipItem.datasetIndex);\n        const options = meta.controller.getStyle(tooltipItem.dataIndex);\n        return {\n          borderColor: options.borderColor,\n          backgroundColor: options.backgroundColor,\n          borderWidth: options.borderWidth,\n          borderDash: options.borderDash,\n          borderDashOffset: options.borderDashOffset,\n          borderRadius: 0,\n        };\n      },\n      labelTextColor() {\n        return this.options.bodyColor;\n      },\n      labelPointStyle(tooltipItem) {\n        const meta = tooltipItem.chart.getDatasetMeta(tooltipItem.datasetIndex);\n        const options = meta.controller.getStyle(tooltipItem.dataIndex);\n        return {\n          pointStyle: options.pointStyle,\n          rotation: options.rotation,\n        };\n      },\n      afterLabel: noop,\n\n      // Args are: (tooltipItems, data)\n      afterBody: noop,\n\n      // Args are: (tooltipItems, data)\n      beforeFooter: noop,\n      footer: noop,\n      afterFooter: noop\n    }\n  },\n\n  defaultRoutes: {\n    bodyFont: 'font',\n    footerFont: 'font',\n    titleFont: 'font'\n  },\n\n  descriptors: {\n    _scriptable: (name) => name !== 'filter' && name !== 'itemSort' && name !== 'external',\n    _indexable: false,\n    callbacks: {\n      _scriptable: false,\n      _indexable: false,\n    },\n    animation: {\n      _fallback: false\n    },\n    animations: {\n      _fallback: 'animation'\n    }\n  },\n\n  // Resolve additionally from `interaction` options and defaults.\n  additionalOptionScopes: ['interaction']\n};\n","import Scale from '../core/core.scale';\nimport {isNullOrUndef, valueOrDefault, _limitValue} from '../helpers';\n\nconst addIfString = (labels, raw, index, addedLabels) => {\n  if (typeof raw === 'string') {\n    index = labels.push(raw) - 1;\n    addedLabels.unshift({index, label: raw});\n  } else if (isNaN(raw)) {\n    index = null;\n  }\n  return index;\n};\n\nfunction findOrAddLabel(labels, raw, index, addedLabels) {\n  const first = labels.indexOf(raw);\n  if (first === -1) {\n    return addIfString(labels, raw, index, addedLabels);\n  }\n  const last = labels.lastIndexOf(raw);\n  return first !== last ? index : first;\n}\n\nconst validIndex = (index, max) => index === null ? null : _limitValue(Math.round(index), 0, max);\n\nfunction _getLabelForValue(value) {\n  const labels = this.getLabels();\n\n  if (value >= 0 && value < labels.length) {\n    return labels[value];\n  }\n  return value;\n}\n\nexport default class CategoryScale extends Scale {\n\n  static id = 'category';\n\n  /**\n   * @type {any}\n   */\n  static defaults = {\n    ticks: {\n      callback: _getLabelForValue\n    }\n  };\n\n  constructor(cfg) {\n    super(cfg);\n\n    /** @type {number} */\n    this._startValue = undefined;\n    this._valueRange = 0;\n    this._addedLabels = [];\n  }\n\n  init(scaleOptions) {\n    const added = this._addedLabels;\n    if (added.length) {\n      const labels = this.getLabels();\n      for (const {index, label} of added) {\n        if (labels[index] === label) {\n          labels.splice(index, 1);\n        }\n      }\n      this._addedLabels = [];\n    }\n    super.init(scaleOptions);\n  }\n\n  parse(raw, index) {\n    if (isNullOrUndef(raw)) {\n      return null;\n    }\n    const labels = this.getLabels();\n    index = isFinite(index) && labels[index] === raw ? index\n      : findOrAddLabel(labels, raw, valueOrDefault(index, raw), this._addedLabels);\n    return validIndex(index, labels.length - 1);\n  }\n\n  determineDataLimits() {\n    const {minDefined, maxDefined} = this.getUserBounds();\n    let {min, max} = this.getMinMax(true);\n\n    if (this.options.bounds === 'ticks') {\n      if (!minDefined) {\n        min = 0;\n      }\n      if (!maxDefined) {\n        max = this.getLabels().length - 1;\n      }\n    }\n\n    this.min = min;\n    this.max = max;\n  }\n\n  buildTicks() {\n    const min = this.min;\n    const max = this.max;\n    const offset = this.options.offset;\n    const ticks = [];\n    let labels = this.getLabels();\n\n    // If we are viewing some subset of labels, slice the original array\n    labels = (min === 0 && max === labels.length - 1) ? labels : labels.slice(min, max + 1);\n\n    this._valueRange = Math.max(labels.length - (offset ? 0 : 1), 1);\n    this._startValue = this.min - (offset ? 0.5 : 0);\n\n    for (let value = min; value <= max; value++) {\n      ticks.push({value});\n    }\n    return ticks;\n  }\n\n  getLabelForValue(value) {\n    return _getLabelForValue.call(this, value);\n  }\n\n  /**\n\t * @protected\n\t */\n  configure() {\n    super.configure();\n\n    if (!this.isHorizontal()) {\n      // For backward compatibility, vertical category scale reverse is inverted.\n      this._reversePixels = !this._reversePixels;\n    }\n  }\n\n  // Used to get data value locations. Value can either be an index or a numerical value\n  getPixelForValue(value) {\n    if (typeof value !== 'number') {\n      value = this.parse(value);\n    }\n\n    return value === null ? NaN : this.getPixelForDecimal((value - this._startValue) / this._valueRange);\n  }\n\n  // Must override base implementation because it calls getPixelForValue\n  // and category scale can have duplicate values\n  getPixelForTick(index) {\n    const ticks = this.ticks;\n    if (index < 0 || index > ticks.length - 1) {\n      return null;\n    }\n    return this.getPixelForValue(ticks[index].value);\n  }\n\n  getValueForPixel(pixel) {\n    return Math.round(this._startValue + this.getDecimalForPixel(pixel) * this._valueRange);\n  }\n\n  getBasePixel() {\n    return this.bottom;\n  }\n}\n","import {isNullOrUndef} from '../helpers/helpers.core';\nimport {almostEquals, almostWhole, niceNum, _decimalPlaces, _setMinAndMaxByKey, sign, toRadians} from '../helpers/helpers.math';\nimport Scale from '../core/core.scale';\nimport {formatNumber} from '../helpers/helpers.intl';\n\n/**\n * Generate a set of linear ticks for an axis\n * 1. If generationOptions.min, generationOptions.max, and generationOptions.step are defined:\n *    if (max - min) / step is an integer, ticks are generated as [min, min + step, ..., max]\n *    Note that the generationOptions.maxCount setting is respected in this scenario\n *\n * 2. If generationOptions.min, generationOptions.max, and generationOptions.count is defined\n *    spacing = (max - min) / count\n *    Ticks are generated as [min, min + spacing, ..., max]\n *\n * 3. If generationOptions.count is defined\n *    spacing = (niceMax - niceMin) / count\n *\n * 4. Compute optimal spacing of ticks using niceNum algorithm\n *\n * @param generationOptions the options used to generate the ticks\n * @param dataRange the range of the data\n * @returns {object[]} array of tick objects\n */\nfunction generateTicks(generationOptions, dataRange) {\n  const ticks = [];\n  // To get a \"nice\" value for the tick spacing, we will use the appropriately named\n  // \"nice number\" algorithm. See https://stackoverflow.com/questions/8506881/nice-label-algorithm-for-charts-with-minimum-ticks\n  // for details.\n\n  const MIN_SPACING = 1e-14;\n  const {bounds, step, min, max, precision, count, maxTicks, maxDigits, includeBounds} = generationOptions;\n  const unit = step || 1;\n  const maxSpaces = maxTicks - 1;\n  const {min: rmin, max: rmax} = dataRange;\n  const minDefined = !isNullOrUndef(min);\n  const maxDefined = !isNullOrUndef(max);\n  const countDefined = !isNullOrUndef(count);\n  const minSpacing = (rmax - rmin) / (maxDigits + 1);\n  let spacing = niceNum((rmax - rmin) / maxSpaces / unit) * unit;\n  let factor, niceMin, niceMax, numSpaces;\n\n  // Beyond MIN_SPACING floating point numbers being to lose precision\n  // such that we can't do the math necessary to generate ticks\n  if (spacing < MIN_SPACING && !minDefined && !maxDefined) {\n    return [{value: rmin}, {value: rmax}];\n  }\n\n  numSpaces = Math.ceil(rmax / spacing) - Math.floor(rmin / spacing);\n  if (numSpaces > maxSpaces) {\n    // If the calculated num of spaces exceeds maxNumSpaces, recalculate it\n    spacing = niceNum(numSpaces * spacing / maxSpaces / unit) * unit;\n  }\n\n  if (!isNullOrUndef(precision)) {\n    // If the user specified a precision, round to that number of decimal places\n    factor = Math.pow(10, precision);\n    spacing = Math.ceil(spacing * factor) / factor;\n  }\n\n  if (bounds === 'ticks') {\n    niceMin = Math.floor(rmin / spacing) * spacing;\n    niceMax = Math.ceil(rmax / spacing) * spacing;\n  } else {\n    niceMin = rmin;\n    niceMax = rmax;\n  }\n\n  if (minDefined && maxDefined && step && almostWhole((max - min) / step, spacing / 1000)) {\n    // Case 1: If min, max and stepSize are set and they make an evenly spaced scale use it.\n    // spacing = step;\n    // numSpaces = (max - min) / spacing;\n    // Note that we round here to handle the case where almostWhole translated an FP error\n    numSpaces = Math.round(Math.min((max - min) / spacing, maxTicks));\n    spacing = (max - min) / numSpaces;\n    niceMin = min;\n    niceMax = max;\n  } else if (countDefined) {\n    // Cases 2 & 3, we have a count specified. Handle optional user defined edges to the range.\n    // Sometimes these are no-ops, but it makes the code a lot clearer\n    // and when a user defined range is specified, we want the correct ticks\n    niceMin = minDefined ? min : niceMin;\n    niceMax = maxDefined ? max : niceMax;\n    numSpaces = count - 1;\n    spacing = (niceMax - niceMin) / numSpaces;\n  } else {\n    // Case 4\n    numSpaces = (niceMax - niceMin) / spacing;\n\n    // If very close to our rounded value, use it.\n    if (almostEquals(numSpaces, Math.round(numSpaces), spacing / 1000)) {\n      numSpaces = Math.round(numSpaces);\n    } else {\n      numSpaces = Math.ceil(numSpaces);\n    }\n  }\n\n  // The spacing will have changed in cases 1, 2, and 3 so the factor cannot be computed\n  // until this point\n  const decimalPlaces = Math.max(\n    _decimalPlaces(spacing),\n    _decimalPlaces(niceMin)\n  );\n  factor = Math.pow(10, isNullOrUndef(precision) ? decimalPlaces : precision);\n  niceMin = Math.round(niceMin * factor) / factor;\n  niceMax = Math.round(niceMax * factor) / factor;\n\n  let j = 0;\n  if (minDefined) {\n    if (includeBounds && niceMin !== min) {\n      ticks.push({value: min});\n\n      if (niceMin < min) {\n        j++; // Skip niceMin\n      }\n      // If the next nice tick is close to min, skip it\n      if (almostEquals(Math.round((niceMin + j * spacing) * factor) / factor, min, relativeLabelSize(min, minSpacing, generationOptions))) {\n        j++;\n      }\n    } else if (niceMin < min) {\n      j++;\n    }\n  }\n\n  for (; j < numSpaces; ++j) {\n    ticks.push({value: Math.round((niceMin + j * spacing) * factor) / factor});\n  }\n\n  if (maxDefined && includeBounds && niceMax !== max) {\n    // If the previous tick is too close to max, replace it with max, else add max\n    if (ticks.length && almostEquals(ticks[ticks.length - 1].value, max, relativeLabelSize(max, minSpacing, generationOptions))) {\n      ticks[ticks.length - 1].value = max;\n    } else {\n      ticks.push({value: max});\n    }\n  } else if (!maxDefined || niceMax === max) {\n    ticks.push({value: niceMax});\n  }\n\n  return ticks;\n}\n\nfunction relativeLabelSize(value, minSpacing, {horizontal, minRotation}) {\n  const rad = toRadians(minRotation);\n  const ratio = (horizontal ? Math.sin(rad) : Math.cos(rad)) || 0.001;\n  const length = 0.75 * minSpacing * ('' + value).length;\n  return Math.min(minSpacing / ratio, length);\n}\n\nexport default class LinearScaleBase extends Scale {\n\n  constructor(cfg) {\n    super(cfg);\n\n    /** @type {number} */\n    this.start = undefined;\n    /** @type {number} */\n    this.end = undefined;\n    /** @type {number} */\n    this._startValue = undefined;\n    /** @type {number} */\n    this._endValue = undefined;\n    this._valueRange = 0;\n  }\n\n  parse(raw, index) { // eslint-disable-line no-unused-vars\n    if (isNullOrUndef(raw)) {\n      return null;\n    }\n    if ((typeof raw === 'number' || raw instanceof Number) && !isFinite(+raw)) {\n      return null;\n    }\n\n    return +raw;\n  }\n\n  handleTickRangeOptions() {\n    const {beginAtZero} = this.options;\n    const {minDefined, maxDefined} = this.getUserBounds();\n    let {min, max} = this;\n\n    const setMin = v => (min = minDefined ? min : v);\n    const setMax = v => (max = maxDefined ? max : v);\n\n    if (beginAtZero) {\n      const minSign = sign(min);\n      const maxSign = sign(max);\n\n      if (minSign < 0 && maxSign < 0) {\n        setMax(0);\n      } else if (minSign > 0 && maxSign > 0) {\n        setMin(0);\n      }\n    }\n\n    if (min === max) {\n      let offset = 1;\n      if (max >= Number.MAX_SAFE_INTEGER || min <= Number.MIN_SAFE_INTEGER) {\n        // In this case, the magnitude of the number is so large that\n        // max === max + 1 due to how IEEE754 doubles work. We need to increase\n        // the range by a larger number. Let's be safe and make this 5% of the number\n        //\n        // TODO - V4, make this the new default behaviour and eliminate +1 in other cases\n        offset = Math.abs(max * 0.05);\n      }\n\n      setMax(max + offset);\n\n      if (!beginAtZero) {\n        setMin(min - offset);\n      }\n    }\n    this.min = min;\n    this.max = max;\n  }\n\n  getTickLimit() {\n    const tickOpts = this.options.ticks;\n    // eslint-disable-next-line prefer-const\n    let {maxTicksLimit, stepSize} = tickOpts;\n    let maxTicks;\n\n    if (stepSize) {\n      maxTicks = Math.ceil(this.max / stepSize) - Math.floor(this.min / stepSize) + 1;\n      if (maxTicks > 1000) {\n        console.warn(`scales.${this.id}.ticks.stepSize: ${stepSize} would result generating up to ${maxTicks} ticks. Limiting to 1000.`);\n        maxTicks = 1000;\n      }\n    } else {\n      maxTicks = this.computeTickLimit();\n      maxTicksLimit = maxTicksLimit || 11;\n    }\n\n    if (maxTicksLimit) {\n      maxTicks = Math.min(maxTicksLimit, maxTicks);\n    }\n\n    return maxTicks;\n  }\n\n  /**\n\t * @protected\n\t */\n  computeTickLimit() {\n    return Number.POSITIVE_INFINITY;\n  }\n\n  buildTicks() {\n    const opts = this.options;\n    const tickOpts = opts.ticks;\n\n    // Figure out what the max number of ticks we can support it is based on the size of\n    // the axis area. For now, we say that the minimum tick spacing in pixels must be 40\n    // We also limit the maximum number of ticks to 11 which gives a nice 10 squares on\n    // the graph. Make sure we always have at least 2 ticks\n    let maxTicks = this.getTickLimit();\n    maxTicks = Math.max(2, maxTicks);\n\n    const numericGeneratorOptions = {\n      maxTicks,\n      bounds: opts.bounds,\n      min: opts.min,\n      max: opts.max,\n      precision: tickOpts.precision,\n      step: tickOpts.stepSize,\n      count: tickOpts.count,\n      maxDigits: this._maxDigits(),\n      horizontal: this.isHorizontal(),\n      minRotation: tickOpts.minRotation || 0,\n      includeBounds: tickOpts.includeBounds !== false\n    };\n    const dataRange = this._range || this;\n    const ticks = generateTicks(numericGeneratorOptions, dataRange);\n\n    // At this point, we need to update our max and min given the tick values,\n    // since we probably have expanded the range of the scale\n    if (opts.bounds === 'ticks') {\n      _setMinAndMaxByKey(ticks, this, 'value');\n    }\n\n    if (opts.reverse) {\n      ticks.reverse();\n\n      this.start = this.max;\n      this.end = this.min;\n    } else {\n      this.start = this.min;\n      this.end = this.max;\n    }\n\n    return ticks;\n  }\n\n  /**\n\t * @protected\n\t */\n  configure() {\n    const ticks = this.ticks;\n    let start = this.min;\n    let end = this.max;\n\n    super.configure();\n\n    if (this.options.offset && ticks.length) {\n      const offset = (end - start) / Math.max(ticks.length - 1, 1) / 2;\n      start -= offset;\n      end += offset;\n    }\n    this._startValue = start;\n    this._endValue = end;\n    this._valueRange = end - start;\n  }\n\n  getLabelForValue(value) {\n    return formatNumber(value, this.chart.options.locale, this.options.ticks.format);\n  }\n}\n","import {isFinite} from '../helpers/helpers.core';\nimport LinearScaleBase from './scale.linearbase';\nimport Ticks from '../core/core.ticks';\nimport {toRadians} from '../helpers';\n\nexport default class LinearScale extends LinearScaleBase {\n\n  static id = 'linear';\n\n  /**\n   * @type {any}\n   */\n  static defaults = {\n    ticks: {\n      callback: Ticks.formatters.numeric\n    }\n  };\n\n\n  determineDataLimits() {\n    const {min, max} = this.getMinMax(true);\n\n    this.min = isFinite(min) ? min : 0;\n    this.max = isFinite(max) ? max : 1;\n\n    // Common base implementation to handle min, max, beginAtZero\n    this.handleTickRangeOptions();\n  }\n\n  /**\n\t * Returns the maximum number of ticks based on the scale dimension\n\t * @protected\n \t */\n  computeTickLimit() {\n    const horizontal = this.isHorizontal();\n    const length = horizontal ? this.width : this.height;\n    const minRotation = toRadians(this.options.ticks.minRotation);\n    const ratio = (horizontal ? Math.sin(minRotation) : Math.cos(minRotation)) || 0.001;\n    const tickFont = this._resolveTickFontOptions(0);\n    return Math.ceil(length / Math.min(40, tickFont.lineHeight / ratio));\n  }\n\n  // Utils\n  getPixelForValue(value) {\n    return value === null ? NaN : this.getPixelForDecimal((value - this._startValue) / this._valueRange);\n  }\n\n  getValueForPixel(pixel) {\n    return this._startValue + this.getDecimalForPixel(pixel) * this._valueRange;\n  }\n}\n","import {finiteOrDefault, isFinite} from '../helpers/helpers.core';\nimport {formatNumber} from '../helpers/helpers.intl';\nimport {_setMinAndMaxByKey, log10} from '../helpers/helpers.math';\nimport Scale from '../core/core.scale';\nimport LinearScaleBase from './scale.linearbase';\nimport Ticks from '../core/core.ticks';\n\nfunction isMajor(tickVal) {\n  const remain = tickVal / (Math.pow(10, Math.floor(log10(tickVal))));\n  return remain === 1;\n}\n\n/**\n * Generate a set of logarithmic ticks\n * @param generationOptions the options used to generate the ticks\n * @param dataRange the range of the data\n * @returns {object[]} array of tick objects\n */\nfunction generateTicks(generationOptions, dataRange) {\n  const endExp = Math.floor(log10(dataRange.max));\n  const endSignificand = Math.ceil(dataRange.max / Math.pow(10, endExp));\n  const ticks = [];\n  let tickVal = finiteOrDefault(generationOptions.min, Math.pow(10, Math.floor(log10(dataRange.min))));\n  let exp = Math.floor(log10(tickVal));\n  let significand = Math.floor(tickVal / Math.pow(10, exp));\n  let precision = exp < 0 ? Math.pow(10, Math.abs(exp)) : 1;\n\n  do {\n    ticks.push({value: tickVal, major: isMajor(tickVal)});\n\n    ++significand;\n    if (significand === 10) {\n      significand = 1;\n      ++exp;\n      precision = exp >= 0 ? 1 : precision;\n    }\n\n    tickVal = Math.round(significand * Math.pow(10, exp) * precision) / precision;\n  } while (exp < endExp || (exp === endExp && significand < endSignificand));\n\n  const lastTick = finiteOrDefault(generationOptions.max, tickVal);\n  ticks.push({value: lastTick, major: isMajor(tickVal)});\n\n  return ticks;\n}\n\nexport default class LogarithmicScale extends Scale {\n\n  static id = 'logarithmic';\n\n  /**\n   * @type {any}\n   */\n  static defaults = {\n    ticks: {\n      callback: Ticks.formatters.logarithmic,\n      major: {\n        enabled: true\n      }\n    }\n  };\n\n\n  constructor(cfg) {\n    super(cfg);\n\n    /** @type {number} */\n    this.start = undefined;\n    /** @type {number} */\n    this.end = undefined;\n    /** @type {number} */\n    this._startValue = undefined;\n    this._valueRange = 0;\n  }\n\n  parse(raw, index) {\n    const value = LinearScaleBase.prototype.parse.apply(this, [raw, index]);\n    if (value === 0) {\n      this._zero = true;\n      return undefined;\n    }\n    return isFinite(value) && value > 0 ? value : null;\n  }\n\n  determineDataLimits() {\n    const {min, max} = this.getMinMax(true);\n\n    this.min = isFinite(min) ? Math.max(0, min) : null;\n    this.max = isFinite(max) ? Math.max(0, max) : null;\n\n    if (this.options.beginAtZero) {\n      this._zero = true;\n    }\n\n    this.handleTickRangeOptions();\n  }\n\n  handleTickRangeOptions() {\n    const {minDefined, maxDefined} = this.getUserBounds();\n    let min = this.min;\n    let max = this.max;\n\n    const setMin = v => (min = minDefined ? min : v);\n    const setMax = v => (max = maxDefined ? max : v);\n    const exp = (v, m) => Math.pow(10, Math.floor(log10(v)) + m);\n\n    if (min === max) {\n      if (min <= 0) { // includes null\n        setMin(1);\n        setMax(10);\n      } else {\n        setMin(exp(min, -1));\n        setMax(exp(max, +1));\n      }\n    }\n    if (min <= 0) {\n      setMin(exp(max, -1));\n    }\n    if (max <= 0) {\n      setMax(exp(min, +1));\n    }\n    // if data has `0` in it or `beginAtZero` is true, min (non zero) value is at bottom\n    // of scale, and it does not equal suggestedMin, lower the min bound by one exp.\n    if (this._zero && this.min !== this._suggestedMin && min === exp(this.min, 0)) {\n      setMin(exp(min, -1));\n    }\n    this.min = min;\n    this.max = max;\n  }\n\n  buildTicks() {\n    const opts = this.options;\n\n    const generationOptions = {\n      min: this._userMin,\n      max: this._userMax\n    };\n    const ticks = generateTicks(generationOptions, this);\n\n    // At this point, we need to update our max and min given the tick values,\n    // since we probably have expanded the range of the scale\n    if (opts.bounds === 'ticks') {\n      _setMinAndMaxByKey(ticks, this, 'value');\n    }\n\n    if (opts.reverse) {\n      ticks.reverse();\n\n      this.start = this.max;\n      this.end = this.min;\n    } else {\n      this.start = this.min;\n      this.end = this.max;\n    }\n\n    return ticks;\n  }\n\n  /**\n\t * @param {number} value\n\t * @return {string}\n\t */\n  getLabelForValue(value) {\n    return value === undefined\n      ? '0'\n      : formatNumber(value, this.chart.options.locale, this.options.ticks.format);\n  }\n\n  /**\n\t * @protected\n\t */\n  configure() {\n    const start = this.min;\n\n    super.configure();\n\n    this._startValue = log10(start);\n    this._valueRange = log10(this.max) - log10(start);\n  }\n\n  getPixelForValue(value) {\n    if (value === undefined || value === 0) {\n      value = this.min;\n    }\n    if (value === null || isNaN(value)) {\n      return NaN;\n    }\n    return this.getPixelForDecimal(value === this.min\n      ? 0\n      : (log10(value) - this._startValue) / this._valueRange);\n  }\n\n  getValueForPixel(pixel) {\n    const decimal = this.getDecimalForPixel(pixel);\n    return Math.pow(10, this._startValue + decimal * this._valueRange);\n  }\n}\n","import defaults from '../core/core.defaults';\nimport {_longestText, addRoundedRectPath, renderText} from '../helpers/helpers.canvas';\nimport {HALF_PI, TAU, toDegrees, toRadians, _normalizeAngle, PI} from '../helpers/helpers.math';\nimport LinearScaleBase from './scale.linearbase';\nimport Ticks from '../core/core.ticks';\nimport {valueOrDefault, isArray, isFinite, callback as callCallback, isNullOrUndef} from '../helpers/helpers.core';\nimport {createContext, toFont, toPadding, toTRBLCorners} from '../helpers/helpers.options';\n\nfunction getTickBackdropHeight(opts) {\n  const tickOpts = opts.ticks;\n\n  if (tickOpts.display && opts.display) {\n    const padding = toPadding(tickOpts.backdropPadding);\n    return valueOrDefault(tickOpts.font && tickOpts.font.size, defaults.font.size) + padding.height;\n  }\n  return 0;\n}\n\nfunction measureLabelSize(ctx, font, label) {\n  label = isArray(label) ? label : [label];\n  return {\n    w: _longestText(ctx, font.string, label),\n    h: label.length * font.lineHeight\n  };\n}\n\nfunction determineLimits(angle, pos, size, min, max) {\n  if (angle === min || angle === max) {\n    return {\n      start: pos - (size / 2),\n      end: pos + (size / 2)\n    };\n  } else if (angle < min || angle > max) {\n    return {\n      start: pos - size,\n      end: pos\n    };\n  }\n\n  return {\n    start: pos,\n    end: pos + size\n  };\n}\n\n/**\n * Helper function to fit a radial linear scale with point labels\n */\nfunction fitWithPointLabels(scale) {\n\n  // Right, this is really confusing and there is a lot of maths going on here\n  // The gist of the problem is here: https://gist.github.com/nnnick/696cc9c55f4b0beb8fe9\n  //\n  // Reaction: https://dl.dropboxusercontent.com/u/34601363/toomuchscience.gif\n  //\n  // Solution:\n  //\n  // We assume the radius of the polygon is half the size of the canvas at first\n  // at each index we check if the text overlaps.\n  //\n  // Where it does, we store that angle and that index.\n  //\n  // After finding the largest index and angle we calculate how much we need to remove\n  // from the shape radius to move the point inwards by that x.\n  //\n  // We average the left and right distances to get the maximum shape radius that can fit in the box\n  // along with labels.\n  //\n  // Once we have that, we can find the centre point for the chart, by taking the x text protrusion\n  // on each side, removing that from the size, halving it and adding the left x protrusion width.\n  //\n  // This will mean we have a shape fitted to the canvas, as large as it can be with the labels\n  // and position it in the most space efficient manner\n  //\n  // https://dl.dropboxusercontent.com/u/34601363/yeahscience.gif\n\n  // Get maximum radius of the polygon. Either half the height (minus the text width) or half the width.\n  // Use this to calculate the offset + change. - Make sure L/R protrusion is at least 0 to stop issues with centre points\n  const orig = {\n    l: scale.left + scale._padding.left,\n    r: scale.right - scale._padding.right,\n    t: scale.top + scale._padding.top,\n    b: scale.bottom - scale._padding.bottom\n  };\n  const limits = Object.assign({}, orig);\n  const labelSizes = [];\n  const padding = [];\n  const valueCount = scale._pointLabels.length;\n  const pointLabelOpts = scale.options.pointLabels;\n  const additionalAngle = pointLabelOpts.centerPointLabels ? PI / valueCount : 0;\n\n  for (let i = 0; i < valueCount; i++) {\n    const opts = pointLabelOpts.setContext(scale.getPointLabelContext(i));\n    padding[i] = opts.padding;\n    const pointPosition = scale.getPointPosition(i, scale.drawingArea + padding[i], additionalAngle);\n    const plFont = toFont(opts.font);\n    const textSize = measureLabelSize(scale.ctx, plFont, scale._pointLabels[i]);\n    labelSizes[i] = textSize;\n\n    const angleRadians = _normalizeAngle(scale.getIndexAngle(i) + additionalAngle);\n    const angle = Math.round(toDegrees(angleRadians));\n    const hLimits = determineLimits(angle, pointPosition.x, textSize.w, 0, 180);\n    const vLimits = determineLimits(angle, pointPosition.y, textSize.h, 90, 270);\n    updateLimits(limits, orig, angleRadians, hLimits, vLimits);\n  }\n\n  scale.setCenterPoint(\n    orig.l - limits.l,\n    limits.r - orig.r,\n    orig.t - limits.t,\n    limits.b - orig.b\n  );\n\n  // Now that text size is determined, compute the full positions\n  scale._pointLabelItems = buildPointLabelItems(scale, labelSizes, padding);\n}\n\nfunction updateLimits(limits, orig, angle, hLimits, vLimits) {\n  const sin = Math.abs(Math.sin(angle));\n  const cos = Math.abs(Math.cos(angle));\n  let x = 0;\n  let y = 0;\n  if (hLimits.start < orig.l) {\n    x = (orig.l - hLimits.start) / sin;\n    limits.l = Math.min(limits.l, orig.l - x);\n  } else if (hLimits.end > orig.r) {\n    x = (hLimits.end - orig.r) / sin;\n    limits.r = Math.max(limits.r, orig.r + x);\n  }\n  if (vLimits.start < orig.t) {\n    y = (orig.t - vLimits.start) / cos;\n    limits.t = Math.min(limits.t, orig.t - y);\n  } else if (vLimits.end > orig.b) {\n    y = (vLimits.end - orig.b) / cos;\n    limits.b = Math.max(limits.b, orig.b + y);\n  }\n}\n\nfunction buildPointLabelItems(scale, labelSizes, padding) {\n  const items = [];\n  const valueCount = scale._pointLabels.length;\n  const opts = scale.options;\n  const extra = getTickBackdropHeight(opts) / 2;\n  const outerDistance = scale.drawingArea;\n  const additionalAngle = opts.pointLabels.centerPointLabels ? PI / valueCount : 0;\n\n  for (let i = 0; i < valueCount; i++) {\n    const pointLabelPosition = scale.getPointPosition(i, outerDistance + extra + padding[i], additionalAngle);\n    const angle = Math.round(toDegrees(_normalizeAngle(pointLabelPosition.angle + HALF_PI)));\n    const size = labelSizes[i];\n    const y = yForAngle(pointLabelPosition.y, size.h, angle);\n    const textAlign = getTextAlignForAngle(angle);\n    const left = leftForTextAlign(pointLabelPosition.x, size.w, textAlign);\n\n    items.push({\n      // Text position\n      x: pointLabelPosition.x,\n      y,\n\n      // Text rendering data\n      textAlign,\n\n      // Bounding box\n      left,\n      top: y,\n      right: left + size.w,\n      bottom: y + size.h\n    });\n  }\n  return items;\n}\n\nfunction getTextAlignForAngle(angle) {\n  if (angle === 0 || angle === 180) {\n    return 'center';\n  } else if (angle < 180) {\n    return 'left';\n  }\n\n  return 'right';\n}\n\nfunction leftForTextAlign(x, w, align) {\n  if (align === 'right') {\n    x -= w;\n  } else if (align === 'center') {\n    x -= (w / 2);\n  }\n  return x;\n}\n\nfunction yForAngle(y, h, angle) {\n  if (angle === 90 || angle === 270) {\n    y -= (h / 2);\n  } else if (angle > 270 || angle < 90) {\n    y -= h;\n  }\n  return y;\n}\n\nfunction drawPointLabels(scale, labelCount) {\n  const {ctx, options: {pointLabels}} = scale;\n\n  for (let i = labelCount - 1; i >= 0; i--) {\n    const optsAtIndex = pointLabels.setContext(scale.getPointLabelContext(i));\n    const plFont = toFont(optsAtIndex.font);\n    const {x, y, textAlign, left, top, right, bottom} = scale._pointLabelItems[i];\n    const {backdropColor} = optsAtIndex;\n\n    if (!isNullOrUndef(backdropColor)) {\n      const borderRadius = toTRBLCorners(optsAtIndex.borderRadius);\n      const padding = toPadding(optsAtIndex.backdropPadding);\n      ctx.fillStyle = backdropColor;\n\n      const backdropLeft = left - padding.left;\n      const backdropTop = top - padding.top;\n      const backdropWidth = right - left + padding.width;\n      const backdropHeight = bottom - top + padding.height;\n\n      if (Object.values(borderRadius).some(v => v !== 0)) {\n        ctx.beginPath();\n        addRoundedRectPath(ctx, {\n          x: backdropLeft,\n          y: backdropTop,\n          w: backdropWidth,\n          h: backdropHeight,\n          radius: borderRadius,\n        });\n        ctx.fill();\n      } else {\n        ctx.fillRect(backdropLeft, backdropTop, backdropWidth, backdropHeight);\n      }\n    }\n\n    renderText(\n      ctx,\n      scale._pointLabels[i],\n      x,\n      y + (plFont.lineHeight / 2),\n      plFont,\n      {\n        color: optsAtIndex.color,\n        textAlign: textAlign,\n        textBaseline: 'middle'\n      }\n    );\n  }\n}\n\nfunction pathRadiusLine(scale, radius, circular, labelCount) {\n  const {ctx} = scale;\n  if (circular) {\n    // Draw circular arcs between the points\n    ctx.arc(scale.xCenter, scale.yCenter, radius, 0, TAU);\n  } else {\n    // Draw straight lines connecting each index\n    let pointPosition = scale.getPointPosition(0, radius);\n    ctx.moveTo(pointPosition.x, pointPosition.y);\n\n    for (let i = 1; i < labelCount; i++) {\n      pointPosition = scale.getPointPosition(i, radius);\n      ctx.lineTo(pointPosition.x, pointPosition.y);\n    }\n  }\n}\n\nfunction drawRadiusLine(scale, gridLineOpts, radius, labelCount) {\n  const ctx = scale.ctx;\n  const circular = gridLineOpts.circular;\n\n  const {color, lineWidth} = gridLineOpts;\n\n  if ((!circular && !labelCount) || !color || !lineWidth || radius < 0) {\n    return;\n  }\n\n  ctx.save();\n  ctx.strokeStyle = color;\n  ctx.lineWidth = lineWidth;\n  ctx.setLineDash(gridLineOpts.borderDash);\n  ctx.lineDashOffset = gridLineOpts.borderDashOffset;\n\n  ctx.beginPath();\n  pathRadiusLine(scale, radius, circular, labelCount);\n  ctx.closePath();\n  ctx.stroke();\n  ctx.restore();\n}\n\nfunction createPointLabelContext(parent, index, label) {\n  return createContext(parent, {\n    label,\n    index,\n    type: 'pointLabel'\n  });\n}\n\nexport default class RadialLinearScale extends LinearScaleBase {\n\n  static id = 'radialLinear';\n\n  /**\n   * @type {any}\n   */\n  static defaults = {\n    display: true,\n\n    // Boolean - Whether to animate scaling the chart from the centre\n    animate: true,\n    position: 'chartArea',\n\n    angleLines: {\n      display: true,\n      lineWidth: 1,\n      borderDash: [],\n      borderDashOffset: 0.0\n    },\n\n    grid: {\n      circular: false\n    },\n\n    startAngle: 0,\n\n    // label settings\n    ticks: {\n      // Boolean - Show a backdrop to the scale label\n      showLabelBackdrop: true,\n\n      callback: Ticks.formatters.numeric\n    },\n\n    pointLabels: {\n      backdropColor: undefined,\n\n      // Number - The backdrop padding above & below the label in pixels\n      backdropPadding: 2,\n\n      // Boolean - if true, show point labels\n      display: true,\n\n      // Number - Point label font size in pixels\n      font: {\n        size: 10\n      },\n\n      // Function - Used to convert point labels\n      callback(label) {\n        return label;\n      },\n\n      // Number - Additionl padding between scale and pointLabel\n      padding: 5,\n\n      // Boolean - if true, center point labels to slices in polar chart\n      centerPointLabels: false\n    }\n  };\n\n  static defaultRoutes = {\n    'angleLines.color': 'borderColor',\n    'pointLabels.color': 'color',\n    'ticks.color': 'color'\n  };\n\n  static descriptors = {\n    angleLines: {\n      _fallback: 'grid'\n    }\n  };\n\n  constructor(cfg) {\n    super(cfg);\n\n    /** @type {number} */\n    this.xCenter = undefined;\n    /** @type {number} */\n    this.yCenter = undefined;\n    /** @type {number} */\n    this.drawingArea = undefined;\n    /** @type {string[]} */\n    this._pointLabels = [];\n    this._pointLabelItems = [];\n  }\n\n  setDimensions() {\n    // Set the unconstrained dimension before label rotation\n    const padding = this._padding = toPadding(getTickBackdropHeight(this.options) / 2);\n    const w = this.width = this.maxWidth - padding.width;\n    const h = this.height = this.maxHeight - padding.height;\n    this.xCenter = Math.floor(this.left + w / 2 + padding.left);\n    this.yCenter = Math.floor(this.top + h / 2 + padding.top);\n    this.drawingArea = Math.floor(Math.min(w, h) / 2);\n  }\n\n  determineDataLimits() {\n    const {min, max} = this.getMinMax(false);\n\n    this.min = isFinite(min) && !isNaN(min) ? min : 0;\n    this.max = isFinite(max) && !isNaN(max) ? max : 0;\n\n    // Common base implementation to handle min, max, beginAtZero\n    this.handleTickRangeOptions();\n  }\n\n  /**\n\t * Returns the maximum number of ticks based on the scale dimension\n\t * @protected\n\t */\n  computeTickLimit() {\n    return Math.ceil(this.drawingArea / getTickBackdropHeight(this.options));\n  }\n\n  generateTickLabels(ticks) {\n    LinearScaleBase.prototype.generateTickLabels.call(this, ticks);\n\n    // Point labels\n    this._pointLabels = this.getLabels()\n      .map((value, index) => {\n        const label = callCallback(this.options.pointLabels.callback, [value, index], this);\n        return label || label === 0 ? label : '';\n      })\n      .filter((v, i) => this.chart.getDataVisibility(i));\n  }\n\n  fit() {\n    const opts = this.options;\n\n    if (opts.display && opts.pointLabels.display) {\n      fitWithPointLabels(this);\n    } else {\n      this.setCenterPoint(0, 0, 0, 0);\n    }\n  }\n\n  setCenterPoint(leftMovement, rightMovement, topMovement, bottomMovement) {\n    this.xCenter += Math.floor((leftMovement - rightMovement) / 2);\n    this.yCenter += Math.floor((topMovement - bottomMovement) / 2);\n    this.drawingArea -= Math.min(this.drawingArea / 2, Math.max(leftMovement, rightMovement, topMovement, bottomMovement));\n  }\n\n  getIndexAngle(index) {\n    const angleMultiplier = TAU / (this._pointLabels.length || 1);\n    const startAngle = this.options.startAngle || 0;\n\n    return _normalizeAngle(index * angleMultiplier + toRadians(startAngle));\n  }\n\n  getDistanceFromCenterForValue(value) {\n    if (isNullOrUndef(value)) {\n      return NaN;\n    }\n\n    // Take into account half font size + the yPadding of the top value\n    const scalingFactor = this.drawingArea / (this.max - this.min);\n    if (this.options.reverse) {\n      return (this.max - value) * scalingFactor;\n    }\n    return (value - this.min) * scalingFactor;\n  }\n\n  getValueForDistanceFromCenter(distance) {\n    if (isNullOrUndef(distance)) {\n      return NaN;\n    }\n\n    const scaledDistance = distance / (this.drawingArea / (this.max - this.min));\n    return this.options.reverse ? this.max - scaledDistance : this.min + scaledDistance;\n  }\n\n  getPointLabelContext(index) {\n    const pointLabels = this._pointLabels || [];\n\n    if (index >= 0 && index < pointLabels.length) {\n      const pointLabel = pointLabels[index];\n      return createPointLabelContext(this.getContext(), index, pointLabel);\n    }\n  }\n\n  getPointPosition(index, distanceFromCenter, additionalAngle = 0) {\n    const angle = this.getIndexAngle(index) - HALF_PI + additionalAngle;\n    return {\n      x: Math.cos(angle) * distanceFromCenter + this.xCenter,\n      y: Math.sin(angle) * distanceFromCenter + this.yCenter,\n      angle\n    };\n  }\n\n  getPointPositionForValue(index, value) {\n    return this.getPointPosition(index, this.getDistanceFromCenterForValue(value));\n  }\n\n  getBasePosition(index) {\n    return this.getPointPositionForValue(index || 0, this.getBaseValue());\n  }\n\n  getPointLabelPosition(index) {\n    const {left, top, right, bottom} = this._pointLabelItems[index];\n    return {\n      left,\n      top,\n      right,\n      bottom,\n    };\n  }\n\n  /**\n\t * @protected\n\t */\n  drawBackground() {\n    const {backgroundColor, grid: {circular}} = this.options;\n    if (backgroundColor) {\n      const ctx = this.ctx;\n      ctx.save();\n      ctx.beginPath();\n      pathRadiusLine(this, this.getDistanceFromCenterForValue(this._endValue), circular, this._pointLabels.length);\n      ctx.closePath();\n      ctx.fillStyle = backgroundColor;\n      ctx.fill();\n      ctx.restore();\n    }\n  }\n\n  /**\n\t * @protected\n\t */\n  drawGrid() {\n    const ctx = this.ctx;\n    const opts = this.options;\n    const {angleLines, grid} = opts;\n    const labelCount = this._pointLabels.length;\n\n    let i, offset, position;\n\n    if (opts.pointLabels.display) {\n      drawPointLabels(this, labelCount);\n    }\n\n    if (grid.display) {\n      this.ticks.forEach((tick, index) => {\n        if (index !== 0) {\n          offset = this.getDistanceFromCenterForValue(tick.value);\n          const optsAtIndex = grid.setContext(this.getContext(index));\n          drawRadiusLine(this, optsAtIndex, offset, labelCount);\n        }\n      });\n    }\n\n    if (angleLines.display) {\n      ctx.save();\n\n      for (i = labelCount - 1; i >= 0; i--) {\n        const optsAtIndex = angleLines.setContext(this.getPointLabelContext(i));\n        const {color, lineWidth} = optsAtIndex;\n\n        if (!lineWidth || !color) {\n          continue;\n        }\n\n        ctx.lineWidth = lineWidth;\n        ctx.strokeStyle = color;\n\n        ctx.setLineDash(optsAtIndex.borderDash);\n        ctx.lineDashOffset = optsAtIndex.borderDashOffset;\n\n        offset = this.getDistanceFromCenterForValue(opts.ticks.reverse ? this.min : this.max);\n        position = this.getPointPosition(i, offset);\n        ctx.beginPath();\n        ctx.moveTo(this.xCenter, this.yCenter);\n        ctx.lineTo(position.x, position.y);\n        ctx.stroke();\n      }\n\n      ctx.restore();\n    }\n  }\n\n  /**\n\t * @protected\n\t */\n  drawBorder() {}\n\n  /**\n\t * @protected\n\t */\n  drawLabels() {\n    const ctx = this.ctx;\n    const opts = this.options;\n    const tickOpts = opts.ticks;\n\n    if (!tickOpts.display) {\n      return;\n    }\n\n    const startAngle = this.getIndexAngle(0);\n    let offset, width;\n\n    ctx.save();\n    ctx.translate(this.xCenter, this.yCenter);\n    ctx.rotate(startAngle);\n    ctx.textAlign = 'center';\n    ctx.textBaseline = 'middle';\n\n    this.ticks.forEach((tick, index) => {\n      if (index === 0 && !opts.reverse) {\n        return;\n      }\n\n      const optsAtIndex = tickOpts.setContext(this.getContext(index));\n      const tickFont = toFont(optsAtIndex.font);\n      offset = this.getDistanceFromCenterForValue(this.ticks[index].value);\n\n      if (optsAtIndex.showLabelBackdrop) {\n        ctx.font = tickFont.string;\n        width = ctx.measureText(tick.label).width;\n        ctx.fillStyle = optsAtIndex.backdropColor;\n\n        const padding = toPadding(optsAtIndex.backdropPadding);\n        ctx.fillRect(\n          -width / 2 - padding.left,\n          -offset - tickFont.size / 2 - padding.top,\n          width + padding.width,\n          tickFont.size + padding.height\n        );\n      }\n\n      renderText(ctx, tick.label, 0, -offset, tickFont, {\n        color: optsAtIndex.color,\n      });\n    });\n\n    ctx.restore();\n  }\n\n  /**\n\t * @protected\n\t */\n  drawTitle() {}\n}\n","import adapters from '../core/core.adapters';\nimport {callback as call, isFinite, isNullOrUndef, mergeIf, valueOrDefault} from '../helpers/helpers.core';\nimport {toRadians, isNumber, _limitValue} from '../helpers/helpers.math';\nimport Scale from '../core/core.scale';\nimport {_arrayUnique, _filterBetween, _lookup} from '../helpers/helpers.collection';\n\n/**\n * @typedef { import(\"../core/core.adapters\").Unit } Unit\n * @typedef {{common: boolean, size: number, steps?: number}} Interval\n */\n\n/**\n * @type {Object<Unit, Interval>}\n */\nconst INTERVALS = {\n  millisecond: {common: true, size: 1, steps: 1000},\n  second: {common: true, size: 1000, steps: 60},\n  minute: {common: true, size: 60000, steps: 60},\n  hour: {common: true, size: 3600000, steps: 24},\n  day: {common: true, size: 86400000, steps: 30},\n  week: {common: false, size: 604800000, steps: 4},\n  month: {common: true, size: 2.628e9, steps: 12},\n  quarter: {common: false, size: 7.884e9, steps: 4},\n  year: {common: true, size: 3.154e10}\n};\n\n/**\n * @type {Unit[]}\n */\nconst UNITS = /** @type Unit[] */ /* #__PURE__ */ (Object.keys(INTERVALS));\n\n/**\n * @param {number} a\n * @param {number} b\n */\nfunction sorter(a, b) {\n  return a - b;\n}\n\n/**\n * @param {TimeScale} scale\n * @param {*} input\n * @return {number}\n */\nfunction parse(scale, input) {\n  if (isNullOrUndef(input)) {\n    return null;\n  }\n\n  const adapter = scale._adapter;\n  const {parser, round, isoWeekday} = scale._parseOpts;\n  let value = input;\n\n  if (typeof parser === 'function') {\n    value = parser(value);\n  }\n\n  // Only parse if its not a timestamp already\n  if (!isFinite(value)) {\n    value = typeof parser === 'string'\n      ? adapter.parse(value, parser)\n      : adapter.parse(value);\n  }\n\n  if (value === null) {\n    return null;\n  }\n\n  if (round) {\n    value = round === 'week' && (isNumber(isoWeekday) || isoWeekday === true)\n      ? adapter.startOf(value, 'isoWeek', isoWeekday)\n      : adapter.startOf(value, round);\n  }\n\n  return +value;\n}\n\n/**\n * Figures out what unit results in an appropriate number of auto-generated ticks\n * @param {Unit} minUnit\n * @param {number} min\n * @param {number} max\n * @param {number} capacity\n * @return {object}\n */\nfunction determineUnitForAutoTicks(minUnit, min, max, capacity) {\n  const ilen = UNITS.length;\n\n  for (let i = UNITS.indexOf(minUnit); i < ilen - 1; ++i) {\n    const interval = INTERVALS[UNITS[i]];\n    const factor = interval.steps ? interval.steps : Number.MAX_SAFE_INTEGER;\n\n    if (interval.common && Math.ceil((max - min) / (factor * interval.size)) <= capacity) {\n      return UNITS[i];\n    }\n  }\n\n  return UNITS[ilen - 1];\n}\n\n/**\n * Figures out what unit to format a set of ticks with\n * @param {TimeScale} scale\n * @param {number} numTicks\n * @param {Unit} minUnit\n * @param {number} min\n * @param {number} max\n * @return {Unit}\n */\nfunction determineUnitForFormatting(scale, numTicks, minUnit, min, max) {\n  for (let i = UNITS.length - 1; i >= UNITS.indexOf(minUnit); i--) {\n    const unit = UNITS[i];\n    if (INTERVALS[unit].common && scale._adapter.diff(max, min, unit) >= numTicks - 1) {\n      return unit;\n    }\n  }\n\n  return UNITS[minUnit ? UNITS.indexOf(minUnit) : 0];\n}\n\n/**\n * @param {Unit} unit\n * @return {object}\n */\nfunction determineMajorUnit(unit) {\n  for (let i = UNITS.indexOf(unit) + 1, ilen = UNITS.length; i < ilen; ++i) {\n    if (INTERVALS[UNITS[i]].common) {\n      return UNITS[i];\n    }\n  }\n}\n\n/**\n * @param {object} ticks\n * @param {number} time\n * @param {number[]} [timestamps] - if defined, snap to these timestamps\n */\nfunction addTick(ticks, time, timestamps) {\n  if (!timestamps) {\n    ticks[time] = true;\n  } else if (timestamps.length) {\n    const {lo, hi} = _lookup(timestamps, time);\n    const timestamp = timestamps[lo] >= time ? timestamps[lo] : timestamps[hi];\n    ticks[timestamp] = true;\n  }\n}\n\n/**\n * @param {TimeScale} scale\n * @param {object[]} ticks\n * @param {object} map\n * @param {Unit} majorUnit\n * @return {object[]}\n */\nfunction setMajorTicks(scale, ticks, map, majorUnit) {\n  const adapter = scale._adapter;\n  const first = +adapter.startOf(ticks[0].value, majorUnit);\n  const last = ticks[ticks.length - 1].value;\n  let major, index;\n\n  for (major = first; major <= last; major = +adapter.add(major, 1, majorUnit)) {\n    index = map[major];\n    if (index >= 0) {\n      ticks[index].major = true;\n    }\n  }\n  return ticks;\n}\n\n/**\n * @param {TimeScale} scale\n * @param {number[]} values\n * @param {Unit|undefined} [majorUnit]\n * @return {object[]}\n */\nfunction ticksFromTimestamps(scale, values, majorUnit) {\n  const ticks = [];\n  /** @type {Object<number,object>} */\n  const map = {};\n  const ilen = values.length;\n  let i, value;\n\n  for (i = 0; i < ilen; ++i) {\n    value = values[i];\n    map[value] = i;\n\n    ticks.push({\n      value,\n      major: false\n    });\n  }\n\n  // We set the major ticks separately from the above loop because calling startOf for every tick\n  // is expensive when there is a large number of ticks\n  return (ilen === 0 || !majorUnit) ? ticks : setMajorTicks(scale, ticks, map, majorUnit);\n}\n\nexport default class TimeScale extends Scale {\n\n  static id = 'time';\n\n  /**\n   * @type {any}\n   */\n  static defaults = {\n    /**\n     * Scale boundary strategy (bypassed by min/max time options)\n     * - `data`: make sure data are fully visible, ticks outside are removed\n     * - `ticks`: make sure ticks are fully visible, data outside are truncated\n     * @see https://github.com/chartjs/Chart.js/pull/4556\n     * @since 2.7.0\n     */\n    bounds: 'data',\n\n    adapters: {},\n    time: {\n      parser: false, // false == a pattern string from or a custom callback that converts its argument to a timestamp\n      unit: false, // false == automatic or override with week, month, year, etc.\n      round: false, // none, or override with week, month, year, etc.\n      isoWeekday: false, // override week start day\n      minUnit: 'millisecond',\n      displayFormats: {}\n    },\n    ticks: {\n      /**\n       * Ticks generation input values:\n       * - 'auto': generates \"optimal\" ticks based on scale size and time options.\n       * - 'data': generates ticks from data (including labels from data {t|x|y} objects).\n       * - 'labels': generates ticks from user given `data.labels` values ONLY.\n       * @see https://github.com/chartjs/Chart.js/pull/4507\n       * @since 2.7.0\n       */\n      source: 'auto',\n\n      callback: false,\n\n      major: {\n        enabled: false\n      }\n    }\n  };\n\n  /**\n\t * @param {object} props\n\t */\n  constructor(props) {\n    super(props);\n\n    /** @type {{data: number[], labels: number[], all: number[]}} */\n    this._cache = {\n      data: [],\n      labels: [],\n      all: []\n    };\n\n    /** @type {Unit} */\n    this._unit = 'day';\n    /** @type {Unit=} */\n    this._majorUnit = undefined;\n    this._offsets = {};\n    this._normalized = false;\n    this._parseOpts = undefined;\n  }\n\n  init(scaleOpts, opts) {\n    const time = scaleOpts.time || (scaleOpts.time = {});\n    const adapter = this._adapter = new adapters._date(scaleOpts.adapters.date);\n\n    adapter.init(opts);\n\n    // Backward compatibility: before introducing adapter, `displayFormats` was\n    // supposed to contain *all* unit/string pairs but this can't be resolved\n    // when loading the scale (adapters are loaded afterward), so let's populate\n    // missing formats on update\n    mergeIf(time.displayFormats, adapter.formats());\n\n    this._parseOpts = {\n      parser: time.parser,\n      round: time.round,\n      isoWeekday: time.isoWeekday\n    };\n\n    super.init(scaleOpts);\n\n    this._normalized = opts.normalized;\n  }\n\n  /**\n\t * @param {*} raw\n\t * @param {number?} [index]\n\t * @return {number}\n\t */\n  parse(raw, index) { // eslint-disable-line no-unused-vars\n    if (raw === undefined) {\n      return null;\n    }\n    return parse(this, raw);\n  }\n\n  beforeLayout() {\n    super.beforeLayout();\n    this._cache = {\n      data: [],\n      labels: [],\n      all: []\n    };\n  }\n\n  determineDataLimits() {\n    const options = this.options;\n    const adapter = this._adapter;\n    const unit = options.time.unit || 'day';\n    // eslint-disable-next-line prefer-const\n    let {min, max, minDefined, maxDefined} = this.getUserBounds();\n\n    /**\n\t\t * @param {object} bounds\n\t\t */\n    function _applyBounds(bounds) {\n      if (!minDefined && !isNaN(bounds.min)) {\n        min = Math.min(min, bounds.min);\n      }\n      if (!maxDefined && !isNaN(bounds.max)) {\n        max = Math.max(max, bounds.max);\n      }\n    }\n\n    // If we have user provided `min` and `max` labels / data bounds can be ignored\n    if (!minDefined || !maxDefined) {\n      // Labels are always considered, when user did not force bounds\n      _applyBounds(this._getLabelBounds());\n\n      // If `bounds` is `'ticks'` and `ticks.source` is `'labels'`,\n      // data bounds are ignored (and don't need to be determined)\n      if (options.bounds !== 'ticks' || options.ticks.source !== 'labels') {\n        _applyBounds(this.getMinMax(false));\n      }\n    }\n\n    min = isFinite(min) && !isNaN(min) ? min : +adapter.startOf(Date.now(), unit);\n    max = isFinite(max) && !isNaN(max) ? max : +adapter.endOf(Date.now(), unit) + 1;\n\n    // Make sure that max is strictly higher than min (required by the timeseries lookup table)\n    this.min = Math.min(min, max - 1);\n    this.max = Math.max(min + 1, max);\n  }\n\n  /**\n\t * @private\n\t */\n  _getLabelBounds() {\n    const arr = this.getLabelTimestamps();\n    let min = Number.POSITIVE_INFINITY;\n    let max = Number.NEGATIVE_INFINITY;\n\n    if (arr.length) {\n      min = arr[0];\n      max = arr[arr.length - 1];\n    }\n    return {min, max};\n  }\n\n  /**\n\t * @return {object[]}\n\t */\n  buildTicks() {\n    const options = this.options;\n    const timeOpts = options.time;\n    const tickOpts = options.ticks;\n    const timestamps = tickOpts.source === 'labels' ? this.getLabelTimestamps() : this._generate();\n\n    if (options.bounds === 'ticks' && timestamps.length) {\n      this.min = this._userMin || timestamps[0];\n      this.max = this._userMax || timestamps[timestamps.length - 1];\n    }\n\n    const min = this.min;\n    const max = this.max;\n\n    const ticks = _filterBetween(timestamps, min, max);\n\n    // PRIVATE\n    // determineUnitForFormatting relies on the number of ticks so we don't use it when\n    // autoSkip is enabled because we don't yet know what the final number of ticks will be\n    this._unit = timeOpts.unit || (tickOpts.autoSkip\n      ? determineUnitForAutoTicks(timeOpts.minUnit, this.min, this.max, this._getLabelCapacity(min))\n      : determineUnitForFormatting(this, ticks.length, timeOpts.minUnit, this.min, this.max));\n    this._majorUnit = !tickOpts.major.enabled || this._unit === 'year' ? undefined\n      : determineMajorUnit(this._unit);\n    this.initOffsets(timestamps);\n\n    if (options.reverse) {\n      ticks.reverse();\n    }\n\n    return ticksFromTimestamps(this, ticks, this._majorUnit);\n  }\n\n  afterAutoSkip() {\n    // Offsets for bar charts need to be handled with the auto skipped\n    // ticks. Once ticks have been skipped, we re-compute the offsets.\n    if (this.options.offsetAfterAutoskip) {\n      this.initOffsets(this.ticks.map(tick => +tick.value));\n    }\n  }\n\n  /**\n\t * Returns the start and end offsets from edges in the form of {start, end}\n\t * where each value is a relative width to the scale and ranges between 0 and 1.\n\t * They add extra margins on the both sides by scaling down the original scale.\n\t * Offsets are added when the `offset` option is true.\n\t * @param {number[]} timestamps\n\t * @return {object}\n\t * @protected\n\t */\n  initOffsets(timestamps) {\n    let start = 0;\n    let end = 0;\n    let first, last;\n\n    if (this.options.offset && timestamps.length) {\n      first = this.getDecimalForValue(timestamps[0]);\n      if (timestamps.length === 1) {\n        start = 1 - first;\n      } else {\n        start = (this.getDecimalForValue(timestamps[1]) - first) / 2;\n      }\n      last = this.getDecimalForValue(timestamps[timestamps.length - 1]);\n      if (timestamps.length === 1) {\n        end = last;\n      } else {\n        end = (last - this.getDecimalForValue(timestamps[timestamps.length - 2])) / 2;\n      }\n    }\n    const limit = timestamps.length < 3 ? 0.5 : 0.25;\n    start = _limitValue(start, 0, limit);\n    end = _limitValue(end, 0, limit);\n\n    this._offsets = {start, end, factor: 1 / (start + 1 + end)};\n  }\n\n  /**\n\t * Generates a maximum of `capacity` timestamps between min and max, rounded to the\n\t * `minor` unit using the given scale time `options`.\n\t * Important: this method can return ticks outside the min and max range, it's the\n\t * responsibility of the calling code to clamp values if needed.\n\t * @private\n\t */\n  _generate() {\n    const adapter = this._adapter;\n    const min = this.min;\n    const max = this.max;\n    const options = this.options;\n    const timeOpts = options.time;\n    // @ts-ignore\n    const minor = timeOpts.unit || determineUnitForAutoTicks(timeOpts.minUnit, min, max, this._getLabelCapacity(min));\n    const stepSize = valueOrDefault(timeOpts.stepSize, 1);\n    const weekday = minor === 'week' ? timeOpts.isoWeekday : false;\n    const hasWeekday = isNumber(weekday) || weekday === true;\n    const ticks = {};\n    let first = min;\n    let time, count;\n\n    // For 'week' unit, handle the first day of week option\n    if (hasWeekday) {\n      first = +adapter.startOf(first, 'isoWeek', weekday);\n    }\n\n    // Align first ticks on unit\n    first = +adapter.startOf(first, hasWeekday ? 'day' : minor);\n\n    // Prevent browser from freezing in case user options request millions of milliseconds\n    if (adapter.diff(max, min, minor) > 100000 * stepSize) {\n      throw new Error(min + ' and ' + max + ' are too far apart with stepSize of ' + stepSize + ' ' + minor);\n    }\n\n    const timestamps = options.ticks.source === 'data' && this.getDataTimestamps();\n    for (time = first, count = 0; time < max; time = +adapter.add(time, stepSize, minor), count++) {\n      addTick(ticks, time, timestamps);\n    }\n\n    if (time === max || options.bounds === 'ticks' || count === 1) {\n      addTick(ticks, time, timestamps);\n    }\n\n    // @ts-ignore\n    return Object.keys(ticks).sort((a, b) => a - b).map(x => +x);\n  }\n\n  /**\n\t * @param {number} value\n\t * @return {string}\n\t */\n  getLabelForValue(value) {\n    const adapter = this._adapter;\n    const timeOpts = this.options.time;\n\n    if (timeOpts.tooltipFormat) {\n      return adapter.format(value, timeOpts.tooltipFormat);\n    }\n    return adapter.format(value, timeOpts.displayFormats.datetime);\n  }\n\n  /**\n\t * Function to format an individual tick mark\n\t * @param {number} time\n\t * @param {number} index\n\t * @param {object[]} ticks\n\t * @param {string|undefined} [format]\n\t * @return {string}\n\t * @private\n\t */\n  _tickFormatFunction(time, index, ticks, format) {\n    const options = this.options;\n    const formatter = options.ticks.callback;\n\n    if (formatter) {\n      return call(formatter, [time, index, ticks], this);\n    }\n\n    const formats = options.time.displayFormats;\n    const unit = this._unit;\n    const majorUnit = this._majorUnit;\n    const minorFormat = unit && formats[unit];\n    const majorFormat = majorUnit && formats[majorUnit];\n    const tick = ticks[index];\n    const major = majorUnit && majorFormat && tick && tick.major;\n\n    return this._adapter.format(time, format || (major ? majorFormat : minorFormat));\n  }\n\n  /**\n\t * @param {object[]} ticks\n\t */\n  generateTickLabels(ticks) {\n    let i, ilen, tick;\n\n    for (i = 0, ilen = ticks.length; i < ilen; ++i) {\n      tick = ticks[i];\n      tick.label = this._tickFormatFunction(tick.value, i, ticks);\n    }\n  }\n\n  /**\n\t * @param {number} value - Milliseconds since epoch (1 January 1970 00:00:00 UTC)\n\t * @return {number}\n\t */\n  getDecimalForValue(value) {\n    return value === null ? NaN : (value - this.min) / (this.max - this.min);\n  }\n\n  /**\n\t * @param {number} value - Milliseconds since epoch (1 January 1970 00:00:00 UTC)\n\t * @return {number}\n\t */\n  getPixelForValue(value) {\n    const offsets = this._offsets;\n    const pos = this.getDecimalForValue(value);\n    return this.getPixelForDecimal((offsets.start + pos) * offsets.factor);\n  }\n\n  /**\n\t * @param {number} pixel\n\t * @return {number}\n\t */\n  getValueForPixel(pixel) {\n    const offsets = this._offsets;\n    const pos = this.getDecimalForPixel(pixel) / offsets.factor - offsets.end;\n    return this.min + pos * (this.max - this.min);\n  }\n\n  /**\n\t * @param {string} label\n\t * @return {{w:number, h:number}}\n\t * @private\n\t */\n  _getLabelSize(label) {\n    const ticksOpts = this.options.ticks;\n    const tickLabelWidth = this.ctx.measureText(label).width;\n    const angle = toRadians(this.isHorizontal() ? ticksOpts.maxRotation : ticksOpts.minRotation);\n    const cosRotation = Math.cos(angle);\n    const sinRotation = Math.sin(angle);\n    const tickFontSize = this._resolveTickFontOptions(0).size;\n\n    return {\n      w: (tickLabelWidth * cosRotation) + (tickFontSize * sinRotation),\n      h: (tickLabelWidth * sinRotation) + (tickFontSize * cosRotation)\n    };\n  }\n\n  /**\n\t * @param {number} exampleTime\n\t * @return {number}\n\t * @private\n\t */\n  _getLabelCapacity(exampleTime) {\n    const timeOpts = this.options.time;\n    const displayFormats = timeOpts.displayFormats;\n\n    // pick the longest format (milliseconds) for guestimation\n    const format = displayFormats[timeOpts.unit] || displayFormats.millisecond;\n    const exampleLabel = this._tickFormatFunction(exampleTime, 0, ticksFromTimestamps(this, [exampleTime], this._majorUnit), format);\n    const size = this._getLabelSize(exampleLabel);\n    // subtract 1 - if offset then there's one less label than tick\n    // if not offset then one half label padding is added to each end leaving room for one less label\n    const capacity = Math.floor(this.isHorizontal() ? this.width / size.w : this.height / size.h) - 1;\n    return capacity > 0 ? capacity : 1;\n  }\n\n  /**\n\t * @protected\n\t */\n  getDataTimestamps() {\n    let timestamps = this._cache.data || [];\n    let i, ilen;\n\n    if (timestamps.length) {\n      return timestamps;\n    }\n\n    const metas = this.getMatchingVisibleMetas();\n\n    if (this._normalized && metas.length) {\n      return (this._cache.data = metas[0].controller.getAllParsedValues(this));\n    }\n\n    for (i = 0, ilen = metas.length; i < ilen; ++i) {\n      timestamps = timestamps.concat(metas[i].controller.getAllParsedValues(this));\n    }\n\n    return (this._cache.data = this.normalize(timestamps));\n  }\n\n  /**\n\t * @protected\n\t */\n  getLabelTimestamps() {\n    const timestamps = this._cache.labels || [];\n    let i, ilen;\n\n    if (timestamps.length) {\n      return timestamps;\n    }\n\n    const labels = this.getLabels();\n    for (i = 0, ilen = labels.length; i < ilen; ++i) {\n      timestamps.push(parse(this, labels[i]));\n    }\n\n    return (this._cache.labels = this._normalized ? timestamps : this.normalize(timestamps));\n  }\n\n  /**\n\t * @param {number[]} values\n\t * @protected\n\t */\n  normalize(values) {\n    // It seems to be somewhat faster to do sorting first\n    return _arrayUnique(values.sort(sorter));\n  }\n}\n","import TimeScale from './scale.time';\nimport {_lookupByKey} from '../helpers/helpers.collection';\n\n/**\n * Linearly interpolates the given source `val` using the table. If value is out of bounds, values\n * at edges are used for the interpolation.\n * @param {object} table\n * @param {number} val\n * @param {boolean} [reverse] lookup time based on position instead of vice versa\n * @return {object}\n */\nfunction interpolate(table, val, reverse) {\n  let lo = 0;\n  let hi = table.length - 1;\n  let prevSource, nextSource, prevTarget, nextTarget;\n  if (reverse) {\n    if (val >= table[lo].pos && val <= table[hi].pos) {\n      ({lo, hi} = _lookupByKey(table, 'pos', val));\n    }\n    ({pos: prevSource, time: prevTarget} = table[lo]);\n    ({pos: nextSource, time: nextTarget} = table[hi]);\n  } else {\n    if (val >= table[lo].time && val <= table[hi].time) {\n      ({lo, hi} = _lookupByKey(table, 'time', val));\n    }\n    ({time: prevSource, pos: prevTarget} = table[lo]);\n    ({time: nextSource, pos: nextTarget} = table[hi]);\n  }\n\n  const span = nextSource - prevSource;\n  return span ? prevTarget + (nextTarget - prevTarget) * (val - prevSource) / span : prevTarget;\n}\n\nclass TimeSeriesScale extends TimeScale {\n\n  static id = 'timeseries';\n\n  /**\n   * @type {any}\n   */\n  static defaults = TimeScale.defaults;\n\n  /**\n\t * @param {object} props\n\t */\n  constructor(props) {\n    super(props);\n\n    /** @type {object[]} */\n    this._table = [];\n    /** @type {number} */\n    this._minPos = undefined;\n    /** @type {number} */\n    this._tableRange = undefined;\n  }\n\n  /**\n\t * @protected\n\t */\n  initOffsets() {\n    const timestamps = this._getTimestampsForTable();\n    const table = this._table = this.buildLookupTable(timestamps);\n    this._minPos = interpolate(table, this.min);\n    this._tableRange = interpolate(table, this.max) - this._minPos;\n    super.initOffsets(timestamps);\n  }\n\n  /**\n\t * Returns an array of {time, pos} objects used to interpolate a specific `time` or position\n\t * (`pos`) on the scale, by searching entries before and after the requested value. `pos` is\n\t * a decimal between 0 and 1: 0 being the start of the scale (left or top) and 1 the other\n\t * extremity (left + width or top + height). Note that it would be more optimized to directly\n\t * store pre-computed pixels, but the scale dimensions are not guaranteed at the time we need\n\t * to create the lookup table. The table ALWAYS contains at least two items: min and max.\n\t * @param {number[]} timestamps\n\t * @return {object[]}\n\t * @protected\n\t */\n  buildLookupTable(timestamps) {\n    const {min, max} = this;\n    const items = [];\n    const table = [];\n    let i, ilen, prev, curr, next;\n\n    for (i = 0, ilen = timestamps.length; i < ilen; ++i) {\n      curr = timestamps[i];\n      if (curr >= min && curr <= max) {\n        items.push(curr);\n      }\n    }\n\n    if (items.length < 2) {\n      // In case there is less that 2 timestamps between min and max, the scale is defined by min and max\n      return [\n        {time: min, pos: 0},\n        {time: max, pos: 1}\n      ];\n    }\n\n    for (i = 0, ilen = items.length; i < ilen; ++i) {\n      next = items[i + 1];\n      prev = items[i - 1];\n      curr = items[i];\n\n      // only add points that breaks the scale linearity\n      if (Math.round((next + prev) / 2) !== curr) {\n        table.push({time: curr, pos: i / (ilen - 1)});\n      }\n    }\n    return table;\n  }\n\n  /**\n\t * Returns all timestamps\n\t * @return {number[]}\n\t * @private\n\t */\n  _getTimestampsForTable() {\n    let timestamps = this._cache.all || [];\n\n    if (timestamps.length) {\n      return timestamps;\n    }\n\n    const data = this.getDataTimestamps();\n    const label = this.getLabelTimestamps();\n    if (data.length && label.length) {\n      // If combining labels and data (data might not contain all labels),\n      // we need to recheck uniqueness and sort\n      timestamps = this.normalize(data.concat(label));\n    } else {\n      timestamps = data.length ? data : label;\n    }\n    timestamps = this._cache.all = timestamps;\n\n    return timestamps;\n  }\n\n  /**\n\t * @param {number} value - Milliseconds since epoch (1 January 1970 00:00:00 UTC)\n\t * @return {number}\n\t */\n  getDecimalForValue(value) {\n    return (interpolate(this._table, value) - this._minPos) / this._tableRange;\n  }\n\n  /**\n\t * @param {number} pixel\n\t * @return {number}\n\t */\n  getValueForPixel(pixel) {\n    const offsets = this._offsets;\n    const decimal = this.getDecimalForPixel(pixel) / offsets.factor - offsets.end;\n    return interpolate(this._table, decimal * this._tableRange + this._minPos, true);\n  }\n}\n\nexport default TimeSeriesScale;\n","// @ts-nocheck\n\n/**\n * @namespace Chart\n */\nimport Chart from './core/core.controller';\n\nimport * as helpers from './helpers/index';\nimport _adapters from './core/core.adapters';\nimport Animation from './core/core.animation';\nimport animator from './core/core.animator';\nimport Animations from './core/core.animations';\nimport * as controllers from './controllers';\nimport DatasetController from './core/core.datasetController';\nimport Element from './core/core.element';\nimport * as elements from './elements/index';\nimport Interaction from './core/core.interaction';\nimport layouts from './core/core.layouts';\nimport * as platforms from './platform/index';\nimport * as plugins from './plugins';\nimport registry from './core/core.registry';\nimport Scale from './core/core.scale';\nimport * as scales from './scales';\nimport Ticks from './core/core.ticks';\n\n// Register built-ins\nChart.register(controllers, scales, elements, plugins);\n\nChart.helpers = {...helpers};\nChart._adapters = _adapters;\nChart.Animation = Animation;\nChart.Animations = Animations;\nChart.animator = animator;\nChart.controllers = registry.controllers.items;\nChart.DatasetController = DatasetController;\nChart.Element = Element;\nChart.elements = elements;\nChart.Interaction = Interaction;\nChart.layouts = layouts;\nChart.platforms = platforms;\nChart.Scale = Scale;\nChart.Ticks = Ticks;\n\n// Compatibility with ESM extensions\nObject.assign(Chart, controllers, scales, elements, plugins, platforms);\nChart.Chart = Chart;\n\nif (typeof window !== 'undefined') {\n  window.Chart = Chart;\n}\n\nexport default Chart;\n"],"names":["noop","uid","id","isNullOrUndef","value","isArray","Array","type","Object","prototype","toString","call","slice","isObject","isNumberFinite","Number","isFinite","finiteOrDefault","defaultValue","valueOrDefault","toPercentage","dimension","endsWith","parseFloat","toDimension","callback","fn","args","thisArg","apply","each","loopable","reverse","i","len","keys","length","_elementsEqual","a0","a1","ilen","v0","v1","datasetIndex","index","clone","source","map","target","create","klen","k","isValidKey","key","indexOf","_merger","options","tval","sval","merge","sources","merger","mergeIf","_mergerIf","hasOwnProperty","keyResolvers","v","x","o","y","resolveObjectKey","obj","resolver","_splitKey","_getKeyResolver","parts","split","tmp","part","push","_capitalize","str","charAt","toUpperCase","defined","isFunction","setsEqual","a","b","size","item","has","_isClickEvent","e","PI","Math","TAU","PITAU","INFINITY","POSITIVE_INFINITY","RAD_PER_DEG","HALF_PI","QUARTER_PI","TWO_THIRDS_PI","log10","sign","niceNum","range","roundedRange","round","almostEquals","niceRange","pow","floor","fraction","_factorize","result","sqrt","sort","pop","isNumber","n","isNaN","epsilon","abs","almostWhole","rounded","_setMinAndMaxByKey","array","property","min","max","toRadians","degrees","toDegrees","radians","_decimalPlaces","isFiniteNumber","p","getAngleFromPoint","centrePoint","anglePoint","distanceFromXCenter","distanceFromYCenter","radialDistanceFromCenter","angle","atan2","distance","distanceBetweenPoints","pt1","pt2","_angleDiff","_normalizeAngle","_angleBetween","start","end","sameAngleIsFullCircle","s","angleToStart","angleToEnd","startToAngle","endToAngle","_limitValue","_int16Range","_isBetween","_lookup","table","cmp","mid","hi","lo","_lookupByKey","last","_rlookupByKey","_filterBetween","values","arrayEvents","listenArrayEvents","listener","_chartjs","listeners","defineProperty","configurable","enumerable","forEach","method","base","res","this","object","unlistenArrayEvents","stub","splice","_arrayUnique","items","set","Set","add","from","requestAnimFrame","window","requestAnimationFrame","throttled","updateFn","updateArgs","ticking","rest","debounce","delay","timeout","clearTimeout","setTimeout","_toLeftRightCenter","align","_alignStartEnd","_textX","left","right","rtl","_getStartAndCountOfVisiblePoints","meta","points","animationsDisabled","pointCount","count","_sorted","iScale","_parsed","axis","minDefined","maxDefined","getUserBounds","getPixelForValue","_scaleRangesChanged","xScale","yScale","_scaleRanges","newRanges","xmin","xmax","ymin","ymax","changed","assign","Animator","constructor","_request","_charts","Map","_running","_lastDate","undefined","_notify","chart","anims","date","callbacks","numSteps","duration","initial","currentStep","_refresh","_update","Date","now","remaining","running","draw","_active","_total","tick","_getAnims","charts","get","complete","progress","listen","event","cb","reduce","acc","cur","_duration","stop","cancel","remove","delete","animator","lim","l","h","p2b","n2b","b2n","n2p","map$1","A","B","C","D","E","F","c","d","f","hex","h1","h2","eq","hexString","r","g","isShort","alpha","HUE_RE","hsl2rgbn","hsv2rgbn","hwb2rgbn","w","rgb","rgb2hsl","hueValue","calln","hsl2rgb","hue","hueParse","m","exec","p1","p2","hwb2rgb","hsv2rgb","Z","Y","X","W","V","U","T","S","R","Q","P","O","N","M","L","K","G","H","I","J","names$1","OiceXe","antiquewEte","aqua","aquamarRe","azuY","beige","bisque","black","blanKedOmond","Xe","XeviTet","bPwn","burlywood","caMtXe","KartYuse","KocTate","cSO","cSnflowerXe","cSnsilk","crimson","cyan","xXe","xcyan","xgTMnPd","xWay","xgYF","xgYy","xkhaki","xmagFta","xTivegYF","xSange","xScEd","xYd","xsOmon","xsHgYF","xUXe","xUWay","xUgYy","xQe","xviTet","dAppRk","dApskyXe","dimWay","dimgYy","dodgerXe","fiYbrick","flSOwEte","foYstWAn","fuKsia","gaRsbSo","ghostwEte","gTd","gTMnPd","Way","gYF","gYFLw","gYy","honeyMw","hotpRk","RdianYd","Rdigo","ivSy","khaki","lavFMr","lavFMrXsh","lawngYF","NmoncEffon","ZXe","ZcSO","Zcyan","ZgTMnPdLw","ZWay","ZgYF","ZgYy","ZpRk","ZsOmon","ZsHgYF","ZskyXe","ZUWay","ZUgYy","ZstAlXe","ZLw","lime","limegYF","lRF","magFta","maPon","VaquamarRe","VXe","VScEd","VpurpN","VsHgYF","VUXe","VsprRggYF","VQe","VviTetYd","midnightXe","mRtcYam","mistyPse","moccasR","navajowEte","navy","Tdlace","Tive","TivedBb","Sange","SangeYd","ScEd","pOegTMnPd","pOegYF","pOeQe","pOeviTetYd","papayawEp","pHKpuff","peru","pRk","plum","powMrXe","purpN","YbeccapurpN","Yd","Psybrown","PyOXe","saddNbPwn","sOmon","sandybPwn","sHgYF","sHshell","siFna","silver","skyXe","UXe","UWay","UgYy","snow","sprRggYF","stAlXe","tan","teO","tEstN","tomato","Qe","viTet","JHt","wEte","wEtesmoke","Lw","LwgYF","names","nameParse","unpacked","tkeys","j","ok","nk","replace","parseInt","unpack","transparent","toLowerCase","RGB_RE","to","modHSL","ratio","proto","fromObject","input","functionParse","rgbParse","Color","ret","_rgb","_valid","valid","rgbString","hslString","mix","color","weight","c1","c2","w2","w1","interpolate","t","rgb1","rgb2","clearer","greyscale","val","opaquer","negate","lighten","darken","saturate","desaturate","rotate","deg","index_esm","isPatternOrGradient","colorLib","getHoverColor","numbers","colors","intlCache","formatNumber","num","locale","cacheKey","JSON","stringify","formatter","Intl","NumberFormat","getNumberFormat","format","formatters","numeric","tickValue","ticks","notation","delta","maxTick","calculateDelta","logDelta","numDecimal","minimumFractionDigits","maximumFractionDigits","logarithmic","remain","Ticks","overrides","descriptors","getScope","node","root","scope","Defaults","_descriptors","_appliers","animation","backgroundColor","borderColor","datasets","devicePixelRatio","context","platform","getDevicePixelRatio","elements","events","font","family","style","lineHeight","hover","hoverBackgroundColor","ctx","hoverBorderColor","hoverColor","indexAxis","interaction","mode","intersect","includeInvisible","maintainAspectRatio","onHover","onClick","parsing","plugins","responsive","scale","scales","showLine","drawActiveElementsOnTop","describe","override","route","name","targetScope","targetName","scopeObject","targetScopeObject","privateName","defineProperties","writable","local","appliers","defaults","_scriptable","startsWith","_indexable","_fallback","easing","loop","properties","active","resize","show","animations","visible","hide","autoPadding","padding","top","bottom","display","offset","beginAtZero","bounds","grace","grid","lineWidth","drawBorder","drawOnChartArea","drawTicks","tickLength","tickWidth","_ctx","tickColor","borderDash","borderDashOffset","borderWidth","title","text","minRotation","maxRotation","mirror","textStrokeWidth","textStrokeColor","autoSkip","autoSkipPadding","labelOffset","minor","major","crossAlign","showLabelBackdrop","backdropColor","backdropPadding","_isDomSupported","document","_getParentNode","domNode","parent","parentNode","host","parseMaxStyle","styleValue","parentProperty","valueInPixels","getComputedStyle","element","getStyle","el","getPropertyValue","positions","getPositionedStyle","styles","suffix","pos","width","height","getRelativePosition","evt","canvas","currentDevicePixelRatio","borderBox","boxSizing","paddings","borders","box","touches","offsetX","offsetY","shadowRoot","useOffsetPos","rect","getBoundingClientRect","clientX","clientY","getCanvasPosition","xOffset","yOffset","round1","getMaximumSize","bbWidth","bbHeight","aspectRatio","margins","maxWidth","maxHeight","containerSize","container","containerStyle","containerBorder","containerPadding","clientWidth","clientHeight","getContainerSize","retinaScale","forceRatio","forceStyle","pixelRatio","deviceHeight","deviceWidth","setTransform","supportsEventListenerOptions","passiveSupported","passive","addEventListener","removeEventListener","readUsedSize","matches","match","toFontString","_measureText","data","gc","longest","string","textWidth","measureText","_longestText","arrayOfThings","cache","garbageCollect","save","jlen","thing","nestedThing","restore","gcLen","_alignPixel","pixel","halfWidth","clearCanvas","getContext","resetTransform","clearRect","drawPoint","drawPointLegend","cornerRadius","pointStyle","rotation","radius","rad","translate","drawImage","beginPath","ellipse","arc","closePath","moveTo","sin","cos","lineTo","SQRT1_2","fill","stroke","_isPointInArea","point","area","margin","clipArea","clip","unclipArea","_steppedLineTo","previous","flip","midpoint","_bezierCurveTo","bezierCurveTo","cp1x","cp2x","cp1y","cp2y","renderText","opts","lines","strokeWidth","strokeColor","line","translation","fillStyle","textAlign","textBaseline","setRenderOpts","strokeStyle","strokeText","fillText","decorateText","strikethrough","underline","metrics","actualBoundingBoxLeft","actualBoundingBoxRight","actualBoundingBoxAscent","actualBoundingBoxDescent","yDecoration","decorationWidth","addRoundedRectPath","topLeft","bottomLeft","bottomRight","topRight","_createResolver","scopes","prefixes","rootScopes","fallback","getTarget","_resolve","Symbol","toStringTag","_cacheable","_scopes","_rootScopes","_getTarget","Proxy","deleteProperty","prop","_keys","_cached","proxy","prefix","readKey","needsSubResolver","createSubResolver","_resolveWithPrefixes","getOwnPropertyDescriptor","Reflect","getPrototypeOf","getKeysFromAllScopes","includes","ownKeys","storage","_storage","_attachContext","subProxy","descriptorDefaults","_proxy","_context","_subProxy","_stack","setContext","receiver","isScriptable","Error","join","_resolveScriptable","isIndexable","arr","filter","_resolveArray","_resolveWithContext","allKeys","scriptable","indexable","_allKeys","resolve","resolveFallback","addScopes","parentScopes","parentFallback","allScopes","addScopesFromKey","subGetTarget","resolveKeysFromAllScopes","_parseObjectDataRadialScale","_parsing","parsed","parse","EPSILON","getPoint","skip","getValueAxis","splineCurve","firstPoint","middlePoint","afterPoint","current","next","d01","d12","s01","s12","fa","fb","splineCurveMonotone","valueAxis","pointsLen","deltaK","mK","pointBefore","pointCurrent","pointAfter","slopeDelta","alphaK","betaK","tauK","squaredMagnitude","monotoneAdjust","iPixel","vPixel","monotoneCompute","capControlPoint","pt","_updateBezierControlPoints","controlPoints","spanGaps","cubicInterpolationMode","prev","tension","capBezierPoints","inArea","inAreaPrev","inAreaNext","atEdge","elasticIn","elasticOut","effects","linear","easeInQuad","easeOutQuad","easeInOutQuad","easeInCubic","easeOutCubic","easeInOutCubic","easeInQuart","easeOutQuart","easeInOutQuart","easeInQuint","easeOutQuint","easeInOutQuint","easeInSine","easeOutSine","easeInOutSine","easeInExpo","easeOutExpo","easeInOutExpo","easeInCirc","easeOutCirc","easeInOutCirc","easeInElastic","easeOutElastic","easeInOutElastic","easeInBack","easeOutBack","easeInOutBack","easeInBounce","easeOutBounce","easeInOutBounce","effects$1","_pointInLine","_steppedInterpolation","_bezierInterpolation","cp1","cp2","LINE_HEIGHT","RegExp","FONT_STYLE","toLineHeight","_readValueToProps","props","objProps","read","toTRBL","toTRBLCorners","toPadding","toFont","console","warn","inputs","info","cacheable","_addGrace","minmax","change","keepZero","createContext","parentContext","getRtlAdapter","rectX","setWidth","xPlus","leftForLtr","itemWidth","getRightToLeftAdapter","_itemWidth","overrideTextDirection","direction","original","getPropertyPriority","setProperty","prevTextDirection","restoreTextDirection","propertyFn","between","compare","normalize","normalizeSegment","_boundSegment","segment","startBound","endBound","getSegment","prevValue","inside","subStart","shouldStart","shouldStop","_boundSegments","segments","sub","_computeSegments","segmentOptions","_loop","findStartAndEnd","splitByStyles","solidSegments","_fullLoop","chartContext","_chart","baseStyle","readStyle","_datasetIndex","prevStyle","addStyle","st","dir","p0","p0DataIndex","p1DataIndex","styleChanged","doSplitByStyles","borderCapStyle","borderJoinStyle","pixelSize","fontStyle","fontFamily","binarySearch","metaset","controller","_cachedMeta","lookupMethod","_reversePixels","_sharedOptions","getRange","evaluateInteractionItems","position","handler","metasets","getSortedVisibleDatasetMetas","getIntersectItems","useFinalPosition","isPointInArea","chartArea","inRange","getNearestCartesianItems","distanceMetric","useX","useY","deltaX","deltaY","getDistanceMetricForAxis","minDistance","center","getCenterPoint","getNearestItems","startAngle","endAngle","getProps","getNearestRadialItems","getAxisItems","rangeMethod","intersectsItem","Interaction","modes","dataset","getDatasetMeta","nearest","STATIC_POSITIONS","filterByPosition","filterDynamicPositionByAxis","sortByWeight","setLayoutDims","layouts","params","stacks","wrap","stack","stackWeight","placed","buildStacks","vBoxMaxWidth","hBoxMaxHeight","layout","fullSize","factor","horizontal","availableWidth","availableHeight","getCombinedMax","maxPadding","updateMaxPadding","boxPadding","updateDims","getPadding","newWidth","outerWidth","newHeight","outerHeight","widthChanged","heightChanged","same","other","getMargins","marginForPositions","fitBoxes","boxes","refitBoxes","refit","update","setBoxDims","placeBoxes","userPadding","addBox","_layers","z","removeBox","layoutItem","configure","minPadding","layoutBoxes","isHorizontal","wrapBoxes","centerHorizontal","centerVertical","leftAndTop","concat","rightAndBottom","vertical","buildLayoutBoxes","verticalBoxes","horizontalBoxes","beforeLayout","visibleVerticalBoxCount","total","freeze","updatePos","handleMaxPadding","BasePlatform","acquireContext","releaseContext","isAttached","updateConfig","config","BasicPlatform","EVENT_TYPES","touchstart","touchmove","touchend","pointerenter","pointerdown","pointermove","pointerup","pointerleave","pointerout","isNullOrEmpty","eventListenerOptions","removeListener","nodeListContains","nodeList","contains","createAttachObserver","observer","MutationObserver","entries","trigger","entry","addedNodes","removedNodes","observe","childList","subtree","createDetachObserver","drpListeningCharts","oldDevicePixelRatio","onWindowResize","dpr","createResizeObserver","ResizeObserver","contentRect","listenDevicePixelRatioChanges","releaseObserver","disconnect","unlistenDevicePixelRatioChanges","createProxyAndListen","native","fromNativeEvent","addListener","DomPlatform","renderHeight","getAttribute","renderWidth","displayWidth","displayHeight","initCanvas","removeAttribute","setAttribute","proxies","$proxies","attach","detach","isConnected","_detectPlatform","OffscreenCanvas","interpolators","boolean","c0","helpersColor","number","Animation","cfg","currentValue","_fn","_easing","_start","_target","_prop","_from","_to","_promises","elapsed","wait","promises","Promise","rej","resolved","Animations","_properties","animationOptions","animatedProps","getOwnPropertyNames","option","_animateOptions","newOptions","$shared","$animations","resolveTargetOptions","_createAnimations","anim","all","awaitAll","then","scaleClip","allowedOverflow","getSortedDatasetIndices","filterVisible","_getSortedDatasetMetas","applyStack","dsIndex","singleMode","otherValue","isStacked","stacked","getOrCreateStack","stackKey","indexValue","subStack","getLastIndexInStack","vScale","positive","getMatchingVisibleMetas","updateStacks","_stacks","iAxis","vAxis","indexScale","valueScale","getStackKey","_top","_bottom","getFirstScaleId","shift","clearStacks","isDirectUpdateMode","cloneIfNotShared","cached","shared","DatasetController","static","_cachedDataOpts","getMeta","_type","_data","_objectData","_drawStart","_drawCount","enableOptionSharing","supportsDecimation","$context","_syncList","datasetElementType","dataElementType","initialize","linkScales","_stacked","addElements","updateIndex","getDataset","chooseId","xid","xAxisID","yid","yAxisID","rid","rAxisID","iid","iAxisID","vid","vAxisID","getScaleForId","rScale","scaleID","_getOtherScale","reset","_destroy","_dataCheck","adata","convertObjectDataToArray","isExtensible","buildOrUpdateElements","resetNewElements","stackChanged","oldStacked","_resyncElements","scopeKeys","datasetScopeKeys","getOptionScopes","createResolver","sorted","parseArrayData","parseObjectData","parsePrimitiveData","isNotInOrderComparedToPrev","labels","getLabels","singleScale","xAxisKey","yAxisKey","getParsed","getDataElement","updateRangeFromParsed","parsedValue","NaN","getMinMax","canStack","otherScale","hidden","createStack","NEGATIVE_INFINITY","otherMin","otherMax","_skip","getAllParsedValues","getMaxOverflow","getLabelAndValue","label","getLabelForValue","_clip","disabled","toClip","defaultClip","resolveDatasetElementOptions","resolveDataElementOptions","dataIndex","raw","createDataContext","createDatasetContext","_resolveElementOptions","elementType","sharing","datasetElementScopeKeys","resolveNamedOptions","_resolveAnimations","transition","datasetAnimationScopeKeys","getSharedOptions","includeOptions","sharedOptions","_animationsDisabled","_getSharedOptions","firstOpts","previouslySharedOptions","updateSharedOptions","updateElement","_setStyle","removeHoverStyle","setHoverStyle","_removeDatasetHoverStyle","_setDatasetHoverStyle","arg1","arg2","numMeta","numData","_insertElements","_removeElements","move","updateElements","removed","_sync","_dataChanges","_onDataPush","arguments","_onDataPop","_onDataShift","_onDataSplice","newCount","_onDataUnshift","Element","tooltipPosition","hasValue","final","tickOpts","ticksLimit","maxTicksLimit","_tickSize","maxScale","_length","maxChart","_maxLength","determineMaxTicks","majorIndices","enabled","getMajorIndices","numMajorIndices","first","newTicks","spacing","ceil","skipMajors","evenMajorSpacing","diff","getEvenSpacing","factors","calculateSpacing","avgMajorSpacing","majorStart","majorEnd","offsetFromEdge","edge","sample","numItems","increment","getPixelForGridLine","offsetGridLines","validIndex","_startPixel","_endPixel","lineValue","getPixelForTick","getTickMarkLength","getTitleHeight","titleAlign","reverseAlign","Scale","super","_margins","paddingTop","paddingBottom","paddingLeft","paddingRight","labelRotation","_range","_gridLineItems","_labelItems","_labelSizes","_longestTextCache","_userMax","_userMin","_suggestedMax","_suggestedMin","_ticksLength","_borderValue","_cache","_dataLimitsCached","init","suggestedMin","suggestedMax","metas","getTicks","xLabels","yLabels","beforeUpdate","sampleSize","beforeSetDimensions","setDimensions","afterSetDimensions","beforeDataLimits","determineDataLimits","afterDataLimits","beforeBuildTicks","buildTicks","afterBuildTicks","samplingEnabled","_convertTicksToLabels","beforeCalculateLabelRotation","calculateLabelRotation","afterCalculateLabelRotation","afterAutoSkip","beforeFit","fit","afterFit","afterUpdate","startPixel","endPixel","reversePixels","_alignToPixels","alignToPixels","_callHooks","notifyPlugins","beforeTickToLabelConversion","generateTickLabels","afterTickToLabelConversion","numTicks","maxLabelDiagonal","_isVisible","labelSizes","_getLabelSizes","maxLabelWidth","widest","maxLabelHeight","highest","asin","minSize","titleOpts","gridOpts","titleHeight","tickPadding","angleRadians","labelHeight","labelWidth","_calculatePadding","_handleMargins","isRotated","labelsBelowTicks","offsetLeft","offsetRight","isFullSize","_computeLabelSizes","caches","widths","heights","tickFont","fontString","nestedLabel","widestLabelSize","highestLabelSize","_resolveTickFontOptions","valueAt","idx","getValueForPixel","getPixelForDecimal","decimal","getDecimalForPixel","getBasePixel","getBaseValue","createTickContext","optionTicks","rot","_computeGridLineItems","ticksLength","tl","borderOpts","axisWidth","axisHalfWidth","alignBorderValue","borderValue","alignedLineValue","tx1","ty1","tx2","ty2","x1","y1","x2","y2","positionAxisID","limit","step","optsAtIndex","lineColor","tickBorderDash","tickBorderDashOffset","_computeLabelItems","tickAndPadding","hTickAndPadding","lineCount","textOffset","_getXAxisLabelAlignment","_getYAxisLabelAlignment","halfCount","backdrop","tickTextAlign","labelPadding","_computeLabelArea","drawBackground","fillRect","getLineWidthForValue","findIndex","drawGrid","drawLine","setLineDash","lineDashOffset","lastLineWidth","drawLabels","drawTitle","titleX","titleY","titleArgs","tz","gz","axisID","_maxDigits","fontSize","TypedRegistry","isForType","isPrototypeOf","register","parentScope","isIChartComponent","itemDefaults","defaultRoutes","routes","propertyParts","sourceName","sourceScope","routeDefaults","registerDefaults","unregister","Registry","controllers","_typedRegistries","_each","addControllers","addPlugins","addScales","getController","_get","getElement","getPlugin","getScale","removeControllers","removeElements","removePlugins","removeScales","typedRegistry","arg","reg","_getRegistryForType","_exec","itemReg","registry","component","camelMethod","PluginService","_init","notify","hook","_createDescriptors","descriptor","plugin","callCallback","cancelable","invalidate","_oldCache","_notifyStateChanges","localIds","allPlugins","getOpts","pluginOpts","createDescriptors","previousDescriptors","some","pluginScopeKeys","getIndexAxis","datasetDefaults","determineAxis","scaleOptions","initOptions","chartDefaults","configScales","chartIndexAxis","firstIDs","scaleConf","error","defaultId","getDefaultScaleIDFromAxis","defaultScaleOptions","defaultID","getAxisFromDefaultScaleID","mergeScaleConfig","initData","keyCache","keysCached","cachedKeys","generate","addIfFound","Config","_config","initConfig","_scopeCache","_resolverCache","clearCache","clear","datasetType","additionalOptionScopes","_cachedScopes","mainScope","resetCache","keyLists","chartOptionScopes","subPrefixes","getResolver","hasFunction","needContext","resolverCache","KNOWN_POSITIONS","positionIsHorizontal","compare2Level","l1","l2","onAnimationsComplete","onComplete","onAnimationProgress","onProgress","getCanvas","getElementById","instances","getChart","moveNumericKeys","intKey","Chart","invalidatePlugins","userConfig","initialCanvas","existingChart","_options","_aspectRatio","_metasets","_lastEvent","_listeners","_responsiveListeners","_sortedMetasets","_plugins","_hiddenIndices","attached","_doResize","resizeDelay","_initialize","bindEvents","_resizeBeforeDraw","_resize","newSize","newRatio","onResize","render","ensureScalesHaveIDs","axisOptions","buildOrUpdateScales","scaleOpts","updated","isRadial","dposition","dtype","scaleType","hasUpdated","_updateMetasets","_destroyDatasetMeta","_removeUnreferencedMetasets","_dataset","buildOrUpdateControllers","newControllers","order","isDatasetVisible","ControllerClass","_resetElements","animsDisabled","_updateScales","_checkEventBindings","_updateHiddenIndices","_minPadding","_updateLayout","_updateDatasets","_eventHandler","_updateHoverStyles","existingEvents","newEvents","unbindEvents","changes","_getUniformDataChanges","datasetCount","makeSet","changeSet","noArea","_idx","_updateDataset","layers","_drawDatasets","_drawDataset","useClip","getElementsAtEventForMode","getVisibleDatasetCount","setDatasetVisibility","toggleDataVisibility","getDataVisibility","_updateVisibility","_stop","destroy","toBase64Image","toDataURL","bindUserEvents","bindResponsiveEvents","_add","_remove","detached","updateHoverStyle","getActiveElements","setActiveElements","activeElements","lastActive","replay","hoverOptions","deactivated","activated","inChartArea","eventFilter","_handleEvent","_getActiveElements","isClick","lastEvent","determineLastEvent","Chart$1","abstract","DateAdapter","members","chartOptions","formats","timestamp","amount","unit","startOf","weekday","endOf","_adapters","_date","computeMinSampleSize","$bar","visibleMetas","getAllScaleValues","curr","updateMinAndPrev","parseValue","startValue","endValue","barStart","barEnd","_custom","parseFloatBar","parseArrayOrPrimitive","isFloatBar","custom","setBorderSkipped","borderSkipped","borderProps","enableBorderRadius","parseEdge","orig","v2","startEnd","setInflateAmount","inflateAmount","DoughnutController","animateRotate","animateScale","cutout","circumference","legend","generateLabels","legendItem","tooltip","tooltipItem","dataLabel","formattedValue","innerRadius","outerRadius","getter","_getRotation","_getCircumference","_getRotationExtents","arcs","getMaxBorderWidth","getMaxOffset","maxSize","chartWeight","_getRingWeight","ratioX","ratioY","startX","startY","endX","endY","calcMax","calcMin","maxX","maxY","minX","minY","getRatioAndOffset","maxRadius","radiusLength","_getVisibleDatasetWeightTotal","calculateTotal","_getRingWeightOffset","_circumference","calculateCircumference","animationOpts","centerX","centerY","metaData","borderAlign","hoverBorderWidth","hoverOffset","ringWeightOffset","categoryPercentage","barPercentage","grouped","_index_","_value_","iAxisKey","vAxisKey","bars","ruler","_getRuler","vpixels","head","_calculateBarValuePixels","ipixels","_calculateBarIndexPixels","_getStacks","skipNull","_getStackCount","_getStackIndex","pixels","barThickness","stackCount","baseValue","minBarLength","actualBase","floating","barSign","halfGrid","maxBarThickness","Infinity","percent","chunk","computeFlexCategoryTraits","thickness","computeFitCategoryTraits","stackIndex","rects","_decimated","animated","maxGapLength","directUpdate","prevParsed","nullData","border","lastPoint","updateControlPoints","angleLines","circular","pointLabels","bind","_updateRadius","cutoutPercentage","xCenter","yCenter","datasetStartAngle","getIndexAngle","defaultAngle","countVisibleElements","_computeAngle","getDistanceFromCenterForValue","pointPosition","getPointPositionForValue","clipArc","pixelMargin","angleMargin","parseBorderRadius","angleDelta","borderRadius","halfThickness","innerLimit","computeOuterLimit","outerArcLimit","outerStart","outerEnd","innerStart","innerEnd","rThetaToXY","theta","pathArc","innerR","spacingOffset","avNogSpacingRadius","angleOffset","outerStartAdjustedRadius","outerEndAdjustedRadius","outerStartAdjustedAngle","outerEndAdjustedAngle","innerStartAdjustedRadius","innerEndAdjustedRadius","innerStartAdjustedAngle","innerEndAdjustedAngle","pCenter","p4","p8","outerStartX","outerStartY","outerEndX","outerEndY","inner","lineJoin","fullCircles","drawFullCircleBorders","setStyle","lineCap","pathVars","paramsStart","paramsEnd","segmentStart","segmentEnd","outside","pathSegment","lineMethod","stepped","getLineMethod","fastPathSegment","prevX","lastY","avgX","countX","pointIndex","drawX","truncX","_getSegmentMethod","usePath2D","Path2D","path","_path","strokePathWithCache","segmentMethod","strokePathDirect","LineElement","_points","_segments","_pointsUpdated","_interpolate","_getInterpolationMethod","interpolated","hitRadius","getBarBounds","bar","half","skipOrLimit","boundingRects","maxW","maxH","parseBorderWidth","maxR","enableBorder","outer","skipX","skipY","addNormalRectPath","inflateRect","refRect","chartX","chartY","rAdjust","betweenAngles","withinRadius","halfAngle","halfRadius","radiusOffset","drawArc","hoverRadius","mouseX","mouseY","inXRange","inYRange","addRectPath","cleanDecimatedDataset","cleanDecimatedData","plugin_decimation","algorithm","beforeElementsUpdate","xAxis","getStartAndCountOfVisiblePointsSimplified","threshold","decimated","samples","bucketWidth","sampledIndex","endIndex","maxAreaPoint","maxArea","nextA","avgY","avgRangeStart","avgRangeEnd","avgRangeLength","rangeOffs","rangeTo","pointAx","pointAy","lttbDecimation","minIndex","maxIndex","startIndex","xMin","dx","lastIndex","intermediateIndex1","intermediateIndex2","minMaxDecimation","_getBounds","_findSegmentEnd","_getEdge","_createBoundaryLine","boundary","linePoints","_pointsFromSegments","_shouldApplyFill","_resolveTarget","propagate","visited","_decodeFill","fillOption","parseFillOption","firstCh","decodeTargetIndex","addPointsBelow","sourcePoint","linesBelow","postponed","findPoint","unshift","pointValue","firstValue","lastValue","simpleArc","getLineByIndex","sourcePoints","below","getLinesBelow","_buildStackLine","_getTargetValue","computeCircularBoundary","_getTargetPixel","computeLinearBoundary","computeBoundary","_drawfill","lineOpts","above","clipVertical","doFill","clipY","lineLoop","tpoints","targetSegments","tgt","subBounds","fillSources","fillSource","src","notShape","clipBounds","interpolatedLineTo","targetLoop","interpolatedPoint","afterDatasetsUpdate","_args","$filler","beforeDraw","drawTime","beforeDatasetsDraw","beforeDatasetDraw","getBoxSize","labelOpts","boxHeight","boxWidth","usePointStyle","pointStyleWidth","itemHeight","Legend","_added","legendHitBoxes","_hoveredItem","doughnutMode","legendItems","columnSizes","lineWidths","buildLabels","labelFont","_computeTitleHeight","_fitRows","_fitCols","hitboxes","totalHeight","row","heightLimit","totalWidth","currentColWidth","currentColHeight","col","adjustHitBoxes","rtlHelper","hitbox","_draw","defaultColor","fontColor","halfFontSize","cursor","textDirection","lineDash","drawOptions","SQRT2","yBoxTop","xBoxLeft","drawLegendBox","titleFont","titlePadding","topPaddingPlusHalfFontSize","_getLegendItemAt","hitBox","lh","handleEvent","onLeave","isListened","hoveredItem","sameItem","plugin_legend","_element","afterEvent","ci","Title","_padding","textSize","_drawArgs","fontOpts","plugin_title","titleBlock","createTitle","WeakMap","plugin_subtitle","positioners","average","eventPosition","nearestElement","tp","pushOrConcat","toPush","splitNewlines","String","createTooltipItem","getTooltipSize","body","footer","bodyFont","footerFont","titleLineCount","footerLineCount","bodyLineItemCount","combinedBodyLength","bodyItem","before","after","beforeBody","afterBody","titleSpacing","titleMarginBottom","displayColors","bodySpacing","footerMarginTop","footerSpacing","widthPadding","maxLineWidth","determineXAlign","yAlign","chartWidth","xAlign","caret","caretSize","caretPadding","doesNotFitWithAlign","determineAlignment","determineYAlign","getBackgroundPoint","alignment","paddingAndSize","alignX","alignY","getAlignedX","getBeforeAfterBodyLines","overrideCallbacks","Tooltip","opacity","_eventPosition","_size","_cachedAnimations","_tooltipItems","dataPoints","caretX","caretY","labelColors","labelPointStyles","labelTextColors","tooltipItems","getTitle","beforeTitle","afterTitle","getBeforeBody","getBody","bodyItems","scoped","beforeLabel","afterLabel","getAfterBody","getFooter","beforeFooter","afterFooter","_createItems","itemSort","labelColor","labelPointStyle","labelTextColor","positionAndSize","backgroundPoint","external","drawCaret","tooltipPoint","caretPosition","getCaretPosition","x3","y3","ptX","ptY","titleColor","_drawColorBox","colorX","rtlColorX","yOffSet","colorY","multiKeyBackground","outerX","innerX","strokeRect","drawBody","bodyAlign","bodyLineHeight","xLinePadding","fillLineOfText","bodyAlignForCalculation","textColor","bodyColor","drawFooter","footerAlign","footerColor","tooltipSize","quadraticCurveTo","_updateAnimationTarget","animX","animY","_willRender","hasTooltipContent","globalAlpha","positionChanged","_positionChanged","_ignoreReplayEvents","plugin_tooltip","afterInit","afterDraw","labelCount","findOrAddLabel","addedLabels","addIfString","lastIndexOf","_getLabelForValue","relativeLabelSize","minSpacing","LinearScaleBase","_startValue","_endValue","_valueRange","handleTickRangeOptions","setMin","setMax","minSign","maxSign","MAX_SAFE_INTEGER","MIN_SAFE_INTEGER","getTickLimit","maxTicks","stepSize","computeTickLimit","generationOptions","dataRange","precision","maxDigits","includeBounds","maxSpaces","rmin","rmax","countDefined","niceMin","niceMax","numSpaces","decimalPlaces","generateTicks","LinearScale","isMajor","tickVal","LogarithmicScale","_zero","exp","endExp","endSignificand","significand","lastTick","getTickBackdropHeight","determineLimits","fitWithPointLabels","limits","valueCount","_pointLabels","pointLabelOpts","additionalAngle","centerPointLabels","getPointLabelContext","getPointPosition","drawingArea","plFont","updateLimits","setCenterPoint","_pointLabelItems","extra","outerDistance","pointLabelPosition","yForAngle","getTextAlignForAngle","leftForTextAlign","buildPointLabelItems","hLimits","vLimits","pathRadiusLine","RadialLinearScale","animate","leftMovement","rightMovement","topMovement","bottomMovement","scalingFactor","getValueForDistanceFromCenter","scaledDistance","pointLabel","createPointLabelContext","distanceFromCenter","getBasePosition","getPointLabelPosition","backdropLeft","backdropTop","backdropWidth","backdropHeight","drawPointLabels","gridLineOpts","drawRadiusLine","INTERVALS","millisecond","common","steps","second","minute","hour","day","week","month","quarter","year","UNITS","sorter","adapter","_adapter","parser","isoWeekday","_parseOpts","determineUnitForAutoTicks","minUnit","capacity","interval","addTick","time","timestamps","ticksFromTimestamps","majorUnit","setMajorTicks","TimeScale","adapters","displayFormats","_unit","_majorUnit","_offsets","_normalized","normalized","_applyBounds","_getLabelBounds","getLabelTimestamps","timeOpts","_generate","_getLabelCapacity","determineUnitForFormatting","determineMajorUnit","initOffsets","offsetAfterAutoskip","getDecimalForValue","hasWeekday","getDataTimestamps","tooltipFormat","datetime","_tickFormatFunction","minorFormat","majorFormat","offsets","_getLabelSize","ticksOpts","tickLabelWidth","cosRotation","sinRotation","tickFontSize","exampleTime","exampleLabel","prevSource","nextSource","prevTarget","nextTarget","span","TimeSeriesScale$1","_table","_minPos","_tableRange","_getTimestampsForTable","buildLookupTable","_addedLabels","added","helpers","platforms"],"mappings":"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"}